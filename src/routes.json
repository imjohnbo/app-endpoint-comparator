{
    "activity": [
      {
        "name": "List public events",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/events",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago.",
        "idName": "list-public-events",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events"
      },
      {
        "name": "List repository events",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/events",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "idName": "list-repo-events",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-repository-events"
      },
      {
        "name": "List public events for a network of repositories",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/networks/:owner/:repo/events",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "idName": "list-public-events-for-repo-network",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories"
      },
      {
        "name": "List public events for an organization",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/events",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "idName": "list-public-events-for-org",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization"
      },
      {
        "name": "List events that a user has received",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/received_events",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.",
        "idName": "list-received-events-for-user",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received"
      },
      {
        "name": "List public events that a user has received",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/received_events/public",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "idName": "list-received-public-events-for-user",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received"
      },
      {
        "name": "List events performed by a user",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/events",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.",
        "idName": "list-events-for-user",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user"
      },
      {
        "name": "List public events performed by a user",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/events/public",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "idName": "list-public-events-for-user",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user"
      },
      {
        "name": "List events for an organization",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/events/orgs/:org",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "This is the user's organization dashboard. You must be authenticated as the user to view this.",
        "idName": "list-events-for-org",
        "documentationUrl": "https://developer.github.com/v3/activity/events/#list-events-for-an-organization"
      },
      {
        "name": "List feeds",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/feeds",
        "previews": [],
        "params": [],
        "description": "GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://developer.github.com/v3/#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://developer.github.com/v3/#basic-authentication) since current feed URIs use the older, non revocable auth tokens.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "timeline_url": "https://github.com/timeline",
              "user_url": "https://github.com/{user}",
              "current_user_public_url": "https://github.com/octocat",
              "current_user_url": "https://github.com/octocat.private?token=abc123",
              "current_user_actor_url": "https://github.com/octocat.private.actor?token=abc123",
              "current_user_organization_url": "",
              "current_user_organization_urls": [
                "https://github.com/organizations/github/octocat.private.atom?token=abc123"
              ],
              "security_advisories_url": "https://github.com/security-advisories",
              "_links": {
                "timeline": {
                  "href": "https://github.com/timeline",
                  "type": "application/atom+xml"
                },
                "user": {
                  "href": "https://github.com/{user}",
                  "type": "application/atom+xml"
                },
                "current_user_public": {
                  "href": "https://github.com/octocat",
                  "type": "application/atom+xml"
                },
                "current_user": {
                  "href": "https://github.com/octocat.private?token=abc123",
                  "type": "application/atom+xml"
                },
                "current_user_actor": {
                  "href": "https://github.com/octocat.private.actor?token=abc123",
                  "type": "application/atom+xml"
                },
                "current_user_organization": {
                  "href": "",
                  "type": ""
                },
                "current_user_organizations": [
                  {
                    "href": "https://github.com/organizations/github/octocat.private.atom?token=abc123",
                    "type": "application/atom+xml"
                  }
                ],
                "security_advisories": {
                  "href": "https://github.com/security-advisories",
                  "type": "application/atom+xml"
                }
              }
            }
          }
        ],
        "idName": "list-feeds",
        "documentationUrl": "https://developer.github.com/v3/activity/feeds/#list-feeds"
      },
      {
        "name": "List your notifications",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/notifications",
        "previews": [],
        "params": [
          {
            "name": "all",
            "type": "boolean",
            "description": "If `true`, show notifications marked as read.",
            "default": false,
            "required": false,
            "location": "query"
          },
          {
            "name": "participating",
            "type": "boolean",
            "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
            "default": false,
            "required": false,
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "before",
            "type": "string",
            "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all notifications for the current user, sorted by most recently updated.\n\nThe following example uses the `since` parameter to list notifications that have been updated after the specified time.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": "1",
                "repository": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                },
                "subject": {
                  "title": "Greetings",
                  "url": "https://api.github.com/repos/octokit/octokit.rb/issues/123",
                  "latest_comment_url": "https://api.github.com/repos/octokit/octokit.rb/issues/comments/123",
                  "type": "Issue"
                },
                "reason": "subscribed",
                "unread": true,
                "updated_at": "2014-11-07T22:01:45Z",
                "last_read_at": "2014-11-07T22:01:45Z",
                "url": "https://api.github.com/notifications/threads/1"
              }
            ]
          }
        ],
        "idName": "list-notifications",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#list-your-notifications"
      },
      {
        "name": "List your notifications in a repository",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/notifications",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "all",
            "type": "boolean",
            "description": "If `true`, show notifications marked as read.",
            "default": false,
            "required": false,
            "location": "query"
          },
          {
            "name": "participating",
            "type": "boolean",
            "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
            "default": false,
            "required": false,
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "before",
            "type": "string",
            "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all notifications for the current user.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": "1",
                "repository": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                },
                "subject": {
                  "title": "Greetings",
                  "url": "https://api.github.com/repos/octokit/octokit.rb/issues/123",
                  "latest_comment_url": "https://api.github.com/repos/octokit/octokit.rb/issues/comments/123",
                  "type": "Issue"
                },
                "reason": "subscribed",
                "unread": true,
                "updated_at": "2014-11-07T22:01:45Z",
                "last_read_at": "2014-11-07T22:01:45Z",
                "url": "https://api.github.com/notifications/threads/1"
              }
            ]
          }
        ],
        "idName": "list-notifications-for-repo",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#list-your-notifications-in-a-repository"
      },
      {
        "name": "Mark as read",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/notifications",
        "previews": [],
        "params": [
          {
            "name": "last_read_at",
            "type": "string",
            "description": "Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "default": "<current date/time>",
            "required": false,
            "location": "body"
          }
        ],
        "description": "Marking a notification as \"read\" removes it from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List your notifications](https://developer.github.com/v3/activity/notifications/#list-your-notifications) endpoint and pass the query parameter `all=false`.",
        "responses": [
          {
            "headers": {
              "status": "205 Reset Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "mark-as-read",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#mark-as-read"
      },
      {
        "name": "Mark notifications as read in a repository",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/notifications",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "last_read_at",
            "type": "string",
            "description": "Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "default": "<current date/time>",
            "required": false,
            "location": "body"
          }
        ],
        "description": "Marking all notifications in a repository as \"read\" removes them from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List your notifications in a repository](https://developer.github.com/v3/activity/notifications/#list-your-notifications-in-a-repository) endpoint and pass the query parameter `all=false`.",
        "responses": [
          {
            "headers": {
              "status": "205 Reset Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "mark-notifications-as-read-for-repo",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository"
      },
      {
        "name": "View a single thread",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/notifications/threads/:thread_id",
        "previews": [],
        "params": [
          {
            "name": "thread_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": "1",
              "repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
              },
              "subject": {
                "title": "Greetings",
                "url": "https://api.github.com/repos/octokit/octokit.rb/issues/123",
                "latest_comment_url": "https://api.github.com/repos/octokit/octokit.rb/issues/comments/123",
                "type": "Issue"
              },
              "reason": "subscribed",
              "unread": true,
              "updated_at": "2014-11-07T22:01:45Z",
              "last_read_at": "2014-11-07T22:01:45Z",
              "url": "https://api.github.com/notifications/threads/1"
            }
          }
        ],
        "idName": "get-thread",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#view-a-single-thread"
      },
      {
        "name": "Mark a thread as read",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/notifications/threads/:thread_id",
        "previews": [],
        "params": [
          {
            "name": "thread_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "205 Reset Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "mark-thread-as-read",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read"
      },
      {
        "name": "Get a thread subscription",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/notifications/threads/:thread_id/subscription",
        "previews": [],
        "params": [
          {
            "name": "thread_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "subscribed": true,
              "ignored": false,
              "reason": null,
              "created_at": "2012-10-06T21:34:12Z",
              "url": "https://api.github.com/notifications/threads/1/subscription",
              "thread_url": "https://api.github.com/notifications/threads/1"
            }
          }
        ],
        "idName": "get-thread-subscription",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#get-a-thread-subscription"
      },
      {
        "name": "Set a thread subscription",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/notifications/threads/:thread_id/subscription",
        "previews": [],
        "params": [
          {
            "name": "thread_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ignored",
            "type": "boolean",
            "description": "Unsubscribes and subscribes you to a conversation. Set `ignored` to `true` to block all notifications from this thread.",
            "default": false,
            "required": false,
            "location": "body"
          }
        ],
        "description": "This lets you subscribe or unsubscribe from a conversation.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "subscribed": true,
              "ignored": false,
              "reason": null,
              "created_at": "2012-10-06T21:34:12Z",
              "url": "https://api.github.com/notifications/threads/1/subscription",
              "thread_url": "https://api.github.com/notifications/threads/1"
            }
          }
        ],
        "idName": "set-thread-subscription",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#set-a-thread-subscription"
      },
      {
        "name": "Delete a thread subscription",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/notifications/threads/:thread_id/subscription",
        "previews": [],
        "params": [
          {
            "name": "thread_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Mutes all future notifications for a conversation until you comment on the thread or get **@mention**ed.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-thread-subscription",
        "documentationUrl": "https://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription"
      },
      {
        "name": "List Stargazers",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/stargazers",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-stargazers-for-repo",
        "documentationUrl": "https://developer.github.com/v3/activity/starring/#list-stargazers"
      },
      {
        "method": "GET",
        "path": "/users/:username/starred",
        "enabledForApps": true,
        "name": "List repositories being starred by a user",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "One of `asc` (ascending) or `desc` (descending).",
            "default": "desc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            ]
          }
        ],
        "idName": "list-repos-starred-by-user",
        "documentationUrl": "https://developer.github.com/v3/activity/starring/#list-repositories-being-starred"
      },
      {
        "method": "GET",
        "path": "/user/starred",
        "enabledForApps": true,
        "name": "List repositories being starred by the authenticated user",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "sort",
            "type": "string",
            "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "One of `asc` (ascending) or `desc` (descending).",
            "default": "desc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            ]
          }
        ],
        "idName": "list-repos-starred-by-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/activity/starring/#list-repositories-being-starred"
      },
      {
        "name": "Check if you are starring a repository",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/starred/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Requires for the user to be authenticated.",
        "idName": "check-starring-repo",
        "documentationUrl": "https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository"
      },
      {
        "name": "Star a repository",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/user/starred/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Requires for the user to be authenticated.\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "star-repo",
        "documentationUrl": "https://developer.github.com/v3/activity/starring/#star-a-repository"
      },
      {
        "name": "Unstar a repository",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/starred/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Requires for the user to be authenticated.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "unstar-repo",
        "documentationUrl": "https://developer.github.com/v3/activity/starring/#unstar-a-repository"
      },
      {
        "name": "List watchers",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/subscribers",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-watchers-for-repo",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#list-watchers"
      },
      {
        "method": "GET",
        "path": "/users/:username/subscriptions",
        "enabledForApps": true,
        "name": "List repositories being watched by a user",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "subscribers_count": 42,
                "network_count": 0,
                "license": {
                  "key": "mit",
                  "name": "MIT License",
                  "spdx_id": "MIT",
                  "url": "https://api.github.com/licenses/mit",
                  "node_id": "MDc6TGljZW5zZW1pdA=="
                }
              }
            ]
          }
        ],
        "idName": "list-repos-watched-by-user",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#list-repositories-being-watched"
      },
      {
        "method": "GET",
        "path": "/user/subscriptions",
        "enabledForApps": true,
        "name": "List repositories being watched by the authenticated user",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "subscribers_count": 42,
                "network_count": 0,
                "license": {
                  "key": "mit",
                  "name": "MIT License",
                  "spdx_id": "MIT",
                  "url": "https://api.github.com/licenses/mit",
                  "node_id": "MDc6TGljZW5zZW1pdA=="
                }
              }
            ]
          }
        ],
        "idName": "list-watched-repos-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#list-repositories-being-watched"
      },
      {
        "name": "Get a Repository Subscription",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/subscription",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "idName": "get-repo-subscription",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#get-a-repository-subscription"
      },
      {
        "name": "Set a Repository Subscription",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/subscription",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "subscribed",
            "type": "boolean",
            "description": "Determines if notifications should be received from this repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "ignored",
            "type": "boolean",
            "description": "Determines if all notifications should be blocked from this repository.",
            "required": false,
            "location": "body"
          }
        ],
        "description": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made within a repository, set `ignored` to `true`. If you would like to stop watching a repository, [delete the repository's subscription](#delete-a-repository-subscription) completely.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "subscribed": true,
              "ignored": false,
              "reason": null,
              "created_at": "2012-10-06T21:34:12Z",
              "url": "https://api.github.com/repos/octocat/example/subscription",
              "repository_url": "https://api.github.com/repos/octocat/example"
            }
          }
        ],
        "idName": "set-repo-subscription",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#set-a-repository-subscription"
      },
      {
        "name": "Delete a Repository Subscription",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/subscription",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](#set-a-repository-subscription).",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-repo-subscription",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription"
      },
      {
        "name": "Check if you are watching a repository (LEGACY)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/subscriptions/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Requires for the user to be authenticated.",
        "idName": "check-watching-repo-legacy",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#check-if-you-are-watching-a-repository-legacy"
      },
      {
        "name": "Watch a repository (LEGACY)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/user/subscriptions/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Requires the user to be authenticated.\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "watch-repo-legacy",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#watch-a-repository-legacy"
      },
      {
        "name": "Stop watching a repository (LEGACY)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/subscriptions/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Requires for the user to be authenticated.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "stop-watching-repo-legacy",
        "documentationUrl": "https://developer.github.com/v3/activity/watching/#stop-watching-a-repository-legacy"
      }
    ],
    "apps": [
      {
        "name": "Get a single GitHub App",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/apps/:app_slug",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "app_slug",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDExOkludGVncmF0aW9uMQ==",
              "owner": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              },
              "name": "Super CI",
              "description": "",
              "external_url": "https://example.com",
              "html_url": "https://github.com/apps/super-ci",
              "created_at": "2017-07-08T16:18:44-04:00",
              "updated_at": "2017-07-08T16:18:44-04:00"
            }
          }
        ],
        "idName": "get-by-slug",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-a-single-github-app"
      },
      {
        "name": "Get the authenticated GitHub App",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/app",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [],
        "description": "Returns the GitHub App associated with the authentication credentials used.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDExOkludGVncmF0aW9uMQ==",
              "owner": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              },
              "name": "Super CI",
              "description": "",
              "external_url": "https://example.com",
              "html_url": "https://github.com/apps/super-ci",
              "created_at": "2017-07-08T16:18:44-04:00",
              "updated_at": "2017-07-08T16:18:44-04:00"
            }
          }
        ],
        "idName": "get-authenticated",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-the-authenticated-github-app"
      },
      {
        "name": "List installations",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/app/installations",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "You must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "account": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
                "repositories_url": "https://api.github.com/installation/repositories",
                "html_url": "https://github.com/organizations/github/settings/installations/1",
                "app_id": 1,
                "target_id": 1,
                "target_type": "Organization",
                "permissions": {
                  "metadata": "read",
                  "contents": "read",
                  "issues": "write",
                  "single_file": "write"
                },
                "events": [
                  "push",
                  "pull_request"
                ],
                "single_file_name": "config.yml",
                "repository_selection": "selected"
              }
            ],
            "description": "The permissions the installation has are included under the `permissions` key."
          }
        ],
        "idName": "list-installations",
        "documentationUrl": "https://developer.github.com/v3/apps/#list-installations"
      },
      {
        "name": "Get an installation",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/app/installations/:installation_id",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "installation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "You must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "account": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              },
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "metadata": "read",
                "contents": "read",
                "issues": "write",
                "single_file": "write"
              },
              "events": [
                "push",
                "pull_request"
              ],
              "single_file_name": "config.yml",
              "repository_selection": "selected"
            }
          }
        ],
        "idName": "get-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-an-installation"
      },
      {
        "name": "Delete an installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/app/installations/:installation_id",
        "previews": [
          {
            "name": "gambit",
            "description": "**Note:** Unintalling GitHub Apps using the REST API is currently available for developers to preview. To access the new endpoint during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.gambit-preview+json\n\n```",
            "required": true
          },
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "installation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Uninstalls a GitHub App on a user, organization, or business account.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/#delete-an-installation"
      },
      {
        "name": "Create a new installation token",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/app/installations/:installation_id/access_tokens",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "installation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Creates an access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "token": "v1.1f699f1069f60xxx",
              "expires_at": "2016-07-11T22:14:10Z"
            }
          }
        ],
        "idName": "create-installation-token",
        "documentationUrl": "https://developer.github.com/v3/apps/#create-a-new-installation-token"
      },
      {
        "name": "Get an organization installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/installation",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "account": {
                "login": "github",
                "id": 1,
                "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/orgs/github",
                "html_url": "https://github.com/github",
                "followers_url": "https://api.github.com/users/github/followers",
                "following_url": "https://api.github.com/users/github/following{/other_user}",
                "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                "organizations_url": "https://api.github.com/users/github/orgs",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "received_events_url": "https://api.github.com/users/github/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "repository_selection": "all",
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": [
                "push",
                "pull_request"
              ],
              "created_at": "2018-02-09T20:51:14Z",
              "updated_at": "2018-02-09T20:51:14Z",
              "single_file_name": null
            }
          }
        ],
        "idName": "get-org-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-an-organization-installation"
      },
      {
        "name": "Find organization installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/installation",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "account": {
                "login": "github",
                "id": 1,
                "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/orgs/github",
                "html_url": "https://github.com/github",
                "followers_url": "https://api.github.com/users/github/followers",
                "following_url": "https://api.github.com/users/github/following{/other_user}",
                "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                "organizations_url": "https://api.github.com/users/github/orgs",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "received_events_url": "https://api.github.com/users/github/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "repository_selection": "all",
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": [
                "push",
                "pull_request"
              ],
              "created_at": "2018-02-09T20:51:14Z",
              "updated_at": "2018-02-09T20:51:14Z",
              "single_file_name": null
            }
          }
        ],
        "idName": "find-org-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-an-organization-installation",
        "deprecated": {
          "date": "2019-04-10",
          "message": "\"Find organization installation\" renamed to \"Get an organization installation\"",
          "before": {
            "idName": "find-org-installation"
          },
          "after": {
            "idName": "get-org-installation"
          }
        }
      },
      {
        "name": "Get a repository installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/installation",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "account": {
                "login": "github",
                "id": 1,
                "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/orgs/github",
                "html_url": "https://github.com/github",
                "followers_url": "https://api.github.com/users/github/followers",
                "following_url": "https://api.github.com/users/github/following{/other_user}",
                "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                "organizations_url": "https://api.github.com/users/github/orgs",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "received_events_url": "https://api.github.com/users/github/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "repository_selection": "all",
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": [
                "push",
                "pull_request"
              ],
              "created_at": "2018-02-09T20:51:14Z",
              "updated_at": "2018-02-09T20:51:14Z",
              "single_file_name": null
            }
          }
        ],
        "idName": "get-repo-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-a-repository-installation"
      },
      {
        "name": "Find repository installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/installation",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "account": {
                "login": "github",
                "id": 1,
                "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/orgs/github",
                "html_url": "https://github.com/github",
                "followers_url": "https://api.github.com/users/github/followers",
                "following_url": "https://api.github.com/users/github/following{/other_user}",
                "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                "organizations_url": "https://api.github.com/users/github/orgs",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "received_events_url": "https://api.github.com/users/github/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "repository_selection": "all",
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": [
                "push",
                "pull_request"
              ],
              "created_at": "2018-02-09T20:51:14Z",
              "updated_at": "2018-02-09T20:51:14Z",
              "single_file_name": null
            }
          }
        ],
        "idName": "find-repo-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-a-repository-installation",
        "deprecated": {
          "date": "2019-04-10",
          "message": "\"Find repository installation\" renamed to \"Get a repository installation\"",
          "before": {
            "idName": "find-repo-installation"
          },
          "after": {
            "idName": "get-repo-installation"
          }
        }
      },
      {
        "name": "Get a user installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/installation",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 3,
              "account": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "repository_selection": "selected",
              "access_tokens_url": "https://api.github.com/installations/3/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/3",
              "app_id": 2,
              "target_id": 1,
              "target_type": "User",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": [
                "label"
              ],
              "created_at": "2018-02-22T20:51:14Z",
              "updated_at": "2018-02-22T20:51:14Z",
              "single_file_name": null
            }
          }
        ],
        "idName": "get-user-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-a-user-installation"
      },
      {
        "name": "Find repository installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/installation",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 3,
              "account": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "repository_selection": "selected",
              "access_tokens_url": "https://api.github.com/installations/3/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/3",
              "app_id": 2,
              "target_id": 1,
              "target_type": "User",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": [
                "label"
              ],
              "created_at": "2018-02-22T20:51:14Z",
              "updated_at": "2018-02-22T20:51:14Z",
              "single_file_name": null
            }
          }
        ],
        "idName": "find-user-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/#get-a-user-installation",
        "deprecated": {
          "date": "2019-04-10",
          "message": "\"Find repository installation\" renamed to \"Get a repository installation\"",
          "before": {
            "idName": "find-user-installation"
          },
          "after": {
            "idName": "get-user-installation"
          }
        }
      },
      {
        "name": "Create a GitHub App from a manifest",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/app-manifests/:code/conversions",
        "previews": [
          {
            "name": "fury",
            "description": "**Note:** GitHub App Manifests are currently available for developers to preview. To access this API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.fury-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "code",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://developer.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDM6QXBwNTk=",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "name": "octoapp",
              "description": null,
              "external_url": "https://www.example.com",
              "html_url": "https://github.com/apps/octoapp",
              "created_at": "2018-09-13T12:28:37Z",
              "updated_at": "2018-09-13T12:28:37Z",
              "webhook_secret": "e340154128314309424b7c8e90325147d99fdafa",
              "pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM\n9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP\nX0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/\n6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm\noNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma\nszdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ\ndBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva\nKOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo\ngDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP\nkYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX\nNuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd\nNBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE\nZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG\nJ4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv\neDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3\nFI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk\n77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH\nPza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB\n1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c\n57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8\nM5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic\nI9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN\n6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK\nfgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG\nZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu\n-----END RSA PRIVATE KEY-----\n"
            }
          }
        ],
        "idName": "create-from-manifest",
        "documentationUrl": "https://developer.github.com/v3/apps/#create-a-github-app-from-a-manifest"
      },
      {
        "name": "List repositories",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/installation/repositories",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          },
          {
            "name": "mercy",
            "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mercy-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List repositories that an installation can access.\n\nYou must use an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "total_count": 1,
              "repositories": [
                {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              ]
            }
          }
        ],
        "idName": "list-repos",
        "documentationUrl": "https://developer.github.com/v3/apps/installations/#list-repositories"
      },
      {
        "name": "List installations for a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/installations",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "total_count": 2,
              "installations": [
                {
                  "id": 1,
                  "account": {
                    "login": "github",
                    "id": 1,
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                    "url": "https://api.github.com/orgs/github",
                    "repos_url": "https://api.github.com/orgs/github/repos",
                    "events_url": "https://api.github.com/orgs/github/events",
                    "hooks_url": "https://api.github.com/orgs/github/hooks",
                    "issues_url": "https://api.github.com/orgs/github/issues",
                    "members_url": "https://api.github.com/orgs/github/members{/member}",
                    "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "description": "A great organization"
                  },
                  "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
                  "repositories_url": "https://api.github.com/installation/repositories",
                  "html_url": "https://github.com/organizations/github/settings/installations/1",
                  "app_id": 1,
                  "target_id": 1,
                  "target_type": "Organization",
                  "permissions": {
                    "metadata": "read",
                    "contents": "read",
                    "issues": "write",
                    "single_file": "write"
                  },
                  "events": [
                    "push",
                    "pull_request"
                  ],
                  "single_file_name": "config.yml"
                },
                {
                  "id": 3,
                  "account": {
                    "login": "octocat",
                    "id": 2,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
                  "repositories_url": "https://api.github.com/installation/repositories",
                  "html_url": "https://github.com/organizations/github/settings/installations/1",
                  "app_id": 1,
                  "target_id": 1,
                  "target_type": "Organization",
                  "permissions": {
                    "metadata": "read",
                    "contents": "read",
                    "issues": "write",
                    "single_file": "write"
                  },
                  "events": [
                    "push",
                    "pull_request"
                  ],
                  "single_file_name": "config.yml"
                }
              ]
            },
            "description": "You can find the permissions for the installation under the `permissions` key."
          }
        ],
        "idName": "list-installations-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/apps/installations/#list-installations-for-a-user"
      },
      {
        "name": "List repositories accessible to the user for an installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/installations/:installation_id/repositories",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          },
          {
            "name": "mercy",
            "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mercy-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "installation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "total_count": 1,
              "repositories": [
                {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              ]
            },
            "description": "The access the user has to each repository is included in the hash under the `permissions` key."
          }
        ],
        "idName": "list-installation-repos-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation"
      },
      {
        "name": "Add repository to installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/user/installations/:installation_id/repositories/:repository_id",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "installation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repository_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Add a single repository to an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization)) or [Basic Authentication](https://developer.github.com/v3/auth/#basic-authentication) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "add-repo-to-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/installations/#add-repository-to-installation"
      },
      {
        "name": "Remove repository from installation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/installations/:installation_id/repositories/:repository_id",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
            "required": true
          }
        ],
        "params": [
          {
            "name": "installation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repository_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Remove a single repository from an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization)) or [Basic Authentication](https://developer.github.com/v3/auth/#basic-authentication) to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-repo-from-installation",
        "documentationUrl": "https://developer.github.com/v3/apps/installations/#remove-repository-from-installation"
      },
      {
        "name": "Create a content attachment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/content_references/:content_reference_id/attachments",
        "previews": [
          {
            "name": "corsair",
            "description": "**Note:** To access the Content Attachments API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.corsair-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "content_reference_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The title of the content attachment displayed in the body or comment of an issue or pull request.",
            "required": true,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The body text of the content attachment displayed in the body or comment of an issue or pull request. This parameter supports markdown.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "title": "[A-1234] Error found in core/models.py file",
            "body": "You have used an email that already exists for the user_email_uniq field.\n ## DETAILS:\n\nThe (email)=(Octocat@github.com) already exists.\n\n The error was found in core/models.py in get_or_create_user at line 62.\n\nself.save()"
          }
        ],
        "description": "Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://developer.github.com/v3/activity/events/types/#contentreferenceevent) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://developer.github.com/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nThis example creates a content attachment for the domain `https://errors.ai/`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 101,
              "title": "[A-1234] Error found in core/models.py file'",
              "body": "You have used an email that already exists for the user_email_uniq field.\n ## DETAILS:\n\nThe (email)=(Octocat@github.com) already exists.\n\n The error was found in core/models.py in get_or_create_user at line 62.\n\n self.save()"
            }
          }
        ],
        "idName": "create-content-attachment",
        "documentationUrl": "https://developer.github.com/v3/apps/installations/#create-a-content-attachment"
      },
      {
        "name": "List all plans for your Marketplace listing",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/marketplace_listing/plans",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "GitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/marketplace_listing/plans/1313",
                "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                "id": 1313,
                "number": 3,
                "name": "Pro",
                "description": "A professional-grade CI solution",
                "monthly_price_in_cents": 1099,
                "yearly_price_in_cents": 11870,
                "price_model": "flat-rate",
                "has_free_trial": true,
                "unit_name": null,
                "state": "published",
                "bullets": [
                  "Up to 25 private repositories",
                  "11 concurrent builds"
                ]
              }
            ]
          }
        ],
        "idName": "list-plans",
        "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing"
      },
      {
        "name": "List all plans for your Marketplace listing (stubbed)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/marketplace_listing/stubbed/plans",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "GitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/marketplace_listing/plans/1313",
                "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                "id": 1313,
                "number": 3,
                "name": "Pro",
                "description": "A professional-grade CI solution",
                "monthly_price_in_cents": 1099,
                "yearly_price_in_cents": 11870,
                "price_model": "flat-rate",
                "has_free_trial": true,
                "unit_name": null,
                "state": "published",
                "bullets": [
                  "Up to 25 private repositories",
                  "11 concurrent builds"
                ]
              }
            ]
          }
        ],
        "idName": "list-plans-stubbed",
        "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing"
      },
      {
        "name": "List all GitHub accounts (user or organization) on a specific plan",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/marketplace_listing/plans/:plan_id/accounts",
        "previews": [],
        "params": [
          {
            "name": "plan_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the GitHub accounts by the date they were created or last updated. Can be one of `created` or `updated`.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Returns any accounts associated with a plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/orgs/github",
                "type": "Organization",
                "id": 4,
                "login": "github",
                "email": null,
                "organization_billing_email": "billing@github.com",
                "marketplace_pending_change": {
                  "effective_date": "2017-11-11T00:00:00Z",
                  "unit_count": null,
                  "id": 77,
                  "plan": {
                    "url": "https://api.github.com/marketplace_listing/plans/1111",
                    "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                    "id": 1111,
                    "number": 2,
                    "name": "Startup",
                    "description": "A professional-grade CI solution",
                    "monthly_price_in_cents": 699,
                    "yearly_price_in_cents": 7870,
                    "price_model": "flat-rate",
                    "has_free_trial": true,
                    "state": "published",
                    "unit_name": null,
                    "bullets": [
                      "Up to 10 private repositories",
                      "3 concurrent builds"
                    ]
                  }
                },
                "marketplace_purchase": {
                  "billing_cycle": "monthly",
                  "next_billing_date": "2017-11-11T00:00:00Z",
                  "unit_count": null,
                  "on_free_trial": true,
                  "free_trial_ends_on": "2017-11-11T00:00:00Z",
                  "updated_at": "2017-11-02T01:12:12Z",
                  "plan": {
                    "url": "https://api.github.com/marketplace_listing/plans/1313",
                    "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                    "id": 1313,
                    "number": 3,
                    "name": "Pro",
                    "description": "A professional-grade CI solution",
                    "monthly_price_in_cents": 1099,
                    "yearly_price_in_cents": 11870,
                    "price_model": "flat-rate",
                    "has_free_trial": true,
                    "unit_name": null,
                    "state": "published",
                    "bullets": [
                      "Up to 25 private repositories",
                      "11 concurrent builds"
                    ]
                  }
                }
              }
            ]
          }
        ],
        "idName": "list-accounts-user-or-org-on-plan",
        "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan"
      },
      {
        "name": "List all GitHub accounts (user or organization) on a specific plan (stubbed)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/marketplace_listing/stubbed/plans/:plan_id/accounts",
        "previews": [],
        "params": [
          {
            "name": "plan_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the GitHub accounts by the date they were created or last updated. Can be one of `created` or `updated`.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Returns any accounts associated with a plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/orgs/github",
                "type": "Organization",
                "id": 4,
                "login": "github",
                "email": null,
                "organization_billing_email": "billing@github.com",
                "marketplace_pending_change": {
                  "effective_date": "2017-11-11T00:00:00Z",
                  "unit_count": null,
                  "id": 77,
                  "plan": {
                    "url": "https://api.github.com/marketplace_listing/plans/1111",
                    "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                    "id": 1111,
                    "number": 2,
                    "name": "Startup",
                    "description": "A professional-grade CI solution",
                    "monthly_price_in_cents": 699,
                    "yearly_price_in_cents": 7870,
                    "price_model": "flat-rate",
                    "has_free_trial": true,
                    "state": "published",
                    "unit_name": null,
                    "bullets": [
                      "Up to 10 private repositories",
                      "3 concurrent builds"
                    ]
                  }
                },
                "marketplace_purchase": {
                  "billing_cycle": "monthly",
                  "next_billing_date": "2017-11-11T00:00:00Z",
                  "unit_count": null,
                  "on_free_trial": true,
                  "free_trial_ends_on": "2017-11-11T00:00:00Z",
                  "updated_at": "2017-11-02T01:12:12Z",
                  "plan": {
                    "url": "https://api.github.com/marketplace_listing/plans/1313",
                    "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                    "id": 1313,
                    "number": 3,
                    "name": "Pro",
                    "description": "A professional-grade CI solution",
                    "monthly_price_in_cents": 1099,
                    "yearly_price_in_cents": 11870,
                    "price_model": "flat-rate",
                    "has_free_trial": true,
                    "unit_name": null,
                    "state": "published",
                    "bullets": [
                      "Up to 25 private repositories",
                      "11 concurrent builds"
                    ]
                  }
                }
              }
            ]
          }
        ],
        "idName": "list-accounts-user-or-org-on-plan-stubbed",
        "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan"
      },
      {
        "name": "Check if a GitHub account is associated with any Marketplace listing",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/marketplace_listing/accounts/:account_id",
        "previews": [],
        "params": [
          {
            "name": "account_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/orgs/github",
              "type": "Organization",
              "id": 4,
              "login": "github",
              "email": null,
              "organization_billing_email": "billing@github.com",
              "marketplace_pending_change": {
                "effective_date": "2017-11-11T00:00:00Z",
                "unit_count": null,
                "id": 77,
                "plan": {
                  "url": "https://api.github.com/marketplace_listing/plans/1111",
                  "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                  "id": 1111,
                  "number": 2,
                  "name": "Startup",
                  "description": "A professional-grade CI solution",
                  "monthly_price_in_cents": 699,
                  "yearly_price_in_cents": 7870,
                  "price_model": "flat-rate",
                  "has_free_trial": true,
                  "state": "published",
                  "unit_name": null,
                  "bullets": [
                    "Up to 10 private repositories",
                    "3 concurrent builds"
                  ]
                }
              },
              "marketplace_purchase": {
                "billing_cycle": "monthly",
                "next_billing_date": "2017-11-11T00:00:00Z",
                "unit_count": null,
                "on_free_trial": true,
                "free_trial_ends_on": "2017-11-11T00:00:00Z",
                "updated_at": "2017-11-02T01:12:12Z",
                "plan": {
                  "url": "https://api.github.com/marketplace_listing/plans/1313",
                  "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                  "id": 1313,
                  "number": 3,
                  "name": "Pro",
                  "description": "A professional-grade CI solution",
                  "monthly_price_in_cents": 1099,
                  "yearly_price_in_cents": 11870,
                  "price_model": "flat-rate",
                  "has_free_trial": true,
                  "unit_name": null,
                  "state": "published",
                  "bullets": [
                    "Up to 25 private repositories",
                    "11 concurrent builds"
                  ]
                }
              }
            }
          }
        ],
        "idName": "check-account-is-associated-with-any",
        "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing"
      },
      {
        "name": "Check if a GitHub account is associated with any Marketplace listing (stubbed)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/marketplace_listing/stubbed/accounts/:account_id",
        "previews": [],
        "params": [
          {
            "name": "account_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/orgs/github",
              "type": "Organization",
              "id": 4,
              "login": "github",
              "email": null,
              "organization_billing_email": "billing@github.com",
              "marketplace_pending_change": {
                "effective_date": "2017-11-11T00:00:00Z",
                "unit_count": null,
                "id": 77,
                "plan": {
                  "url": "https://api.github.com/marketplace_listing/plans/1111",
                  "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                  "id": 1111,
                  "number": 2,
                  "name": "Startup",
                  "description": "A professional-grade CI solution",
                  "monthly_price_in_cents": 699,
                  "yearly_price_in_cents": 7870,
                  "price_model": "flat-rate",
                  "has_free_trial": true,
                  "state": "published",
                  "unit_name": null,
                  "bullets": [
                    "Up to 10 private repositories",
                    "3 concurrent builds"
                  ]
                }
              },
              "marketplace_purchase": {
                "billing_cycle": "monthly",
                "next_billing_date": "2017-11-11T00:00:00Z",
                "unit_count": null,
                "on_free_trial": true,
                "free_trial_ends_on": "2017-11-11T00:00:00Z",
                "updated_at": "2017-11-02T01:12:12Z",
                "plan": {
                  "url": "https://api.github.com/marketplace_listing/plans/1313",
                  "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                  "id": 1313,
                  "number": 3,
                  "name": "Pro",
                  "description": "A professional-grade CI solution",
                  "monthly_price_in_cents": 1099,
                  "yearly_price_in_cents": 11870,
                  "price_model": "flat-rate",
                  "has_free_trial": true,
                  "unit_name": null,
                  "state": "published",
                  "bullets": [
                    "Up to 25 private repositories",
                    "11 concurrent builds"
                  ]
                }
              }
            }
          }
        ],
        "idName": "check-account-is-associated-with-any-stubbed",
        "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing"
      },
      {
        "name": "Get a user's Marketplace purchases",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/marketplace_purchases",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Returns only active subscriptions. You must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "billing_cycle": "monthly",
                "next_billing_date": "2017-11-11T00:00:00Z",
                "unit_count": null,
                "on_free_trial": true,
                "free_trial_ends_on": "2017-11-11T00:00:00Z",
                "updated_at": "2017-11-02T01:12:12Z",
                "account": {
                  "login": "github",
                  "id": 4,
                  "url": "https://api.github.com/orgs/github",
                  "email": null,
                  "organization_billing_email": "billing@github.com",
                  "type": "Organization"
                },
                "plan": {
                  "url": "https://api.github.com/marketplace_listing/plans/1313",
                  "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                  "id": 1313,
                  "number": 3,
                  "name": "Pro",
                  "description": "A professional-grade CI solution",
                  "monthly_price_in_cents": 1099,
                  "yearly_price_in_cents": 11870,
                  "price_model": "flat-rate",
                  "has_free_trial": true,
                  "unit_name": null,
                  "state": "published",
                  "bullets": [
                    "Up to 25 private repositories",
                    "11 concurrent builds"
                  ]
                }
              }
            ]
          }
        ],
        "idName": "list-marketplace-purchases-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases"
      },
      {
        "name": "Get a user's Marketplace purchases (stubbed)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/marketplace_purchases/stubbed",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Returns only active subscriptions. You must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "billing_cycle": "monthly",
                "next_billing_date": "2017-11-11T00:00:00Z",
                "unit_count": null,
                "on_free_trial": true,
                "free_trial_ends_on": "2017-11-11T00:00:00Z",
                "updated_at": "2017-11-02T01:12:12Z",
                "account": {
                  "login": "github",
                  "id": 4,
                  "url": "https://api.github.com/orgs/github",
                  "email": null,
                  "organization_billing_email": "billing@github.com",
                  "type": "Organization"
                },
                "plan": {
                  "url": "https://api.github.com/marketplace_listing/plans/1313",
                  "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                  "id": 1313,
                  "number": 3,
                  "name": "Pro",
                  "description": "A professional-grade CI solution",
                  "monthly_price_in_cents": 1099,
                  "yearly_price_in_cents": 11870,
                  "price_model": "flat-rate",
                  "has_free_trial": true,
                  "unit_name": null,
                  "state": "published",
                  "bullets": [
                    "Up to 25 private repositories",
                    "11 concurrent builds"
                  ]
                }
              }
            ]
          }
        ],
        "idName": "list-marketplace-purchases-for-authenticated-user-stubbed",
        "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases"
      }
    ],
    "checks": [
      {
        "name": "Create a check run",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/check-runs",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the check. For example, \"code-coverage\".",
            "required": true,
            "location": "body"
          },
          {
            "name": "head_sha",
            "type": "string",
            "description": "The SHA of the commit.",
            "required": true,
            "location": "body"
          },
          {
            "name": "details_url",
            "type": "string",
            "description": "The URL of the integrator's site that has the full details of the check.",
            "required": false,
            "location": "body"
          },
          {
            "name": "external_id",
            "type": "string",
            "description": "A reference for the run on the integrator's system.",
            "required": false,
            "location": "body"
          },
          {
            "name": "status",
            "type": "string",
            "description": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
            "default": "queued",
            "required": false,
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ],
            "location": "body"
          },
          {
            "name": "started_at",
            "type": "string",
            "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "conclusion",
            "type": "string",
            "description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, or `action_required`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`.",
            "required": false,
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "timed_out",
              "action_required"
            ],
            "location": "body"
          },
          {
            "name": "completed_at",
            "type": "string",
            "description": "**Required if you provide `conclusion`**. The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output",
            "type": "object",
            "description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](#output-object) description.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.title",
            "type": "string",
            "description": "The title of the check run.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.summary",
            "type": "string",
            "description": "The summary of the check run. This parameter supports Markdown.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.text",
            "type": "string",
            "description": "The details of the check run. This parameter supports Markdown.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations",
            "type": "object[]",
            "description": "Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://developer.github.com/v3/checks/runs/#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](#annotations-object) description for details about how to use this parameter.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations[].path",
            "type": "string",
            "description": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.annotations[].start_line",
            "type": "integer",
            "description": "The start line of the annotation.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.annotations[].end_line",
            "type": "integer",
            "description": "The end line of the annotation.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.annotations[].start_column",
            "type": "integer",
            "description": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations[].end_column",
            "type": "integer",
            "description": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations[].annotation_level",
            "type": "string",
            "description": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
            "required": true,
            "enum": [
              "notice",
              "warning",
              "failure"
            ],
            "location": "body"
          },
          {
            "name": "output.annotations[].message",
            "type": "string",
            "description": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.annotations[].title",
            "type": "string",
            "description": "The title that represents the annotation. The maximum size is 255 characters.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations[].raw_details",
            "type": "string",
            "description": "Details about this annotation. The maximum size is 64 KB.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.images",
            "type": "object[]",
            "description": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](#images-object) description for details.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.images[].alt",
            "type": "string",
            "description": "The alternative text for the image.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.images[].image_url",
            "type": "string",
            "description": "The full URL of the image.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.images[].caption",
            "type": "string",
            "description": "A short image description.",
            "required": false,
            "location": "body"
          },
          {
            "name": "actions",
            "type": "object[]",
            "description": "Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](#actions-object) description.",
            "required": false,
            "location": "body"
          },
          {
            "name": "actions[].label",
            "type": "string",
            "description": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
            "required": true,
            "location": "body"
          },
          {
            "name": "actions[].description",
            "type": "string",
            "description": "A short explanation of what this action would do. The maximum size is 40 characters.",
            "required": true,
            "location": "body"
          },
          {
            "name": "actions[].identifier",
            "type": "string",
            "description": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "mighty_readme",
            "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
            "status": "in_progress",
            "external_id": "42",
            "started_at": "2018-05-04T01:14:52Z",
            "output": {
              "title": "Mighty Readme report",
              "summary": "",
              "text": ""
            }
          }
        ],
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nCreates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 4,
              "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
              "node_id": "MDg6Q2hlY2tSdW40",
              "external_id": "42",
              "url": "https://api.github.com/repos/github/hello-world/check-runs/4",
              "html_url": "http://github.com/github/hello-world/runs/4",
              "details_url": "https://example.com",
              "status": "in_progress",
              "conclusion": null,
              "started_at": "2018-05-04T01:14:52Z",
              "completed_at": null,
              "output": {
                "title": "Mighty Readme Report",
                "summary": "",
                "text": ""
              },
              "name": "mighty_readme",
              "check_suite": {
                "id": 5
              },
              "app": {
                "id": 1,
                "node_id": "MDExOkludGVncmF0aW9uMQ==",
                "owner": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "name": "Super CI",
                "description": "",
                "external_url": "https://example.com",
                "html_url": "https://github.com/apps/super-ci",
                "created_at": "2017-07-08T16:18:44-04:00",
                "updated_at": "2017-07-08T16:18:44-04:00"
              },
              "pull_requests": [
                {
                  "url": "https://api.github.com/repos/github/hello-world/pulls/1",
                  "id": 1934,
                  "number": 3956,
                  "head": {
                    "ref": "say-hello",
                    "sha": "3dca65fa3e8d4b3da3f3d056c59aee1c50f41390",
                    "repo": {
                      "id": 526,
                      "url": "https://api.github.com/repos/github/hello-world",
                      "name": "hello-world"
                    }
                  },
                  "base": {
                    "ref": "master",
                    "sha": "e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f",
                    "repo": {
                      "id": 526,
                      "url": "https://api.github.com/repos/github/hello-world",
                      "name": "hello-world"
                    }
                  }
                }
              ]
            }
          }
        ],
        "idName": "create",
        "documentationUrl": "https://developer.github.com/v3/checks/runs/#create-a-check-run"
      },
      {
        "name": "Update a check run",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/check-runs/:check_run_id",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "check_run_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the check. For example, \"code-coverage\".",
            "required": false,
            "location": "body"
          },
          {
            "name": "details_url",
            "type": "string",
            "description": "The URL of the integrator's site that has the full details of the check.",
            "required": false,
            "location": "body"
          },
          {
            "name": "external_id",
            "type": "string",
            "description": "A reference for the run on the integrator's system.",
            "required": false,
            "location": "body"
          },
          {
            "name": "started_at",
            "type": "string",
            "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "status",
            "type": "string",
            "description": "The current status. Can be one of `queued`, `in_progress`, or `completed`.",
            "required": false,
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ],
            "location": "body"
          },
          {
            "name": "conclusion",
            "type": "string",
            "description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, or `action_required`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`.",
            "required": false,
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "timed_out",
              "action_required"
            ],
            "location": "body"
          },
          {
            "name": "completed_at",
            "type": "string",
            "description": "**Required if you provide `conclusion`**. The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output",
            "type": "object",
            "description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](#output-object-1) description.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.title",
            "type": "string",
            "description": "**Required**.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.summary",
            "type": "string",
            "description": "Can contain Markdown.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.text",
            "type": "string",
            "description": "Can contain Markdown.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations",
            "type": "object[]",
            "description": "Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://developer.github.com/v3/checks/runs/#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](#annotations-object-1) description for details.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations[].path",
            "type": "string",
            "description": "The path of the file to add an annotation to. For example, `assets/css/main.css`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.annotations[].start_line",
            "type": "integer",
            "description": "The start line of the annotation.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.annotations[].end_line",
            "type": "integer",
            "description": "The end line of the annotation.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.annotations[].start_column",
            "type": "integer",
            "description": "The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations[].end_column",
            "type": "integer",
            "description": "The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations[].annotation_level",
            "type": "string",
            "description": "The level of the annotation. Can be one of `notice`, `warning`, or `failure`.",
            "required": true,
            "enum": [
              "notice",
              "warning",
              "failure"
            ],
            "location": "body"
          },
          {
            "name": "output.annotations[].message",
            "type": "string",
            "description": "A short description of the feedback for these lines of code. The maximum size is 64 KB.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.annotations[].title",
            "type": "string",
            "description": "The title that represents the annotation. The maximum size is 255 characters.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.annotations[].raw_details",
            "type": "string",
            "description": "Details about this annotation. The maximum size is 64 KB.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.images",
            "type": "object[]",
            "description": "Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](#annotations-object-1) description for details.",
            "required": false,
            "location": "body"
          },
          {
            "name": "output.images[].alt",
            "type": "string",
            "description": "The alternative text for the image.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.images[].image_url",
            "type": "string",
            "description": "The full URL of the image.",
            "required": true,
            "location": "body"
          },
          {
            "name": "output.images[].caption",
            "type": "string",
            "description": "A short image description.",
            "required": false,
            "location": "body"
          },
          {
            "name": "actions",
            "type": "object[]",
            "description": "Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](#actions-object) description.",
            "required": false,
            "location": "body"
          },
          {
            "name": "actions[].label",
            "type": "string",
            "description": "The text to be displayed on a button in the web UI. The maximum size is 20 characters.",
            "required": true,
            "location": "body"
          },
          {
            "name": "actions[].description",
            "type": "string",
            "description": "A short explanation of what this action would do. The maximum size is 40 characters.",
            "required": true,
            "location": "body"
          },
          {
            "name": "actions[].identifier",
            "type": "string",
            "description": "A reference for the action on the integrator's system. The maximum size is 20 characters.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "mighty_readme",
            "started_at": "2018-05-04T01:14:52Z",
            "status": "completed",
            "completed_at": "2018-05-04T01:14:52Z",
            "output": {
              "title": "Mighty Readme report",
              "summary": "There are 0 failures, 2 warnings, and 1 notices.",
              "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
              "annotations": [
                {
                  "path": "README.md",
                  "annotation_level": "warning",
                  "title": "Spell Checker",
                  "message": "Check your spelling for 'banaas'.",
                  "raw_details": "Do you mean 'bananas' or 'banana'?",
                  "start_line": 2,
                  "end_line": 2
                },
                {
                  "path": "README.md",
                  "annotation_level": "warning",
                  "title": "Spell Checker",
                  "message": "Check your spelling for 'aples'",
                  "raw_details": "Do you mean 'apples' or 'Naples'",
                  "start_line": 4,
                  "end_line": 4
                }
              ],
              "images": [
                {
                  "alt": "Super bananas",
                  "image_url": "http://example.com/images/42"
                }
              ]
            }
          }
        ],
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nUpdates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 4,
              "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
              "node_id": "MDg6Q2hlY2tSdW40",
              "external_id": "",
              "url": "https://api.github.com/repos/github/hello-world/check-runs/4",
              "html_url": "http://github.com/github/hello-world/runs/4",
              "details_url": "https://example.com",
              "status": "completed",
              "conclusion": "neutral",
              "started_at": "2018-05-04T01:14:52Z",
              "completed_at": "2018-05-04T01:14:52Z",
              "output": {
                "title": "Mighty Readme report",
                "summary": "There are 0 failures, 2 warnings, and 1 notice.",
                "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
                "annotations_count": 2,
                "annotations_url": "https://api.github.com/repos/github/hello-world/check-runs/4/annotations"
              },
              "name": "mighty_readme",
              "check_suite": {
                "id": 5
              },
              "app": {
                "id": 1,
                "node_id": "MDExOkludGVncmF0aW9uMQ==",
                "owner": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "name": "Super CI",
                "description": "",
                "external_url": "https://example.com",
                "html_url": "https://github.com/apps/super-ci",
                "created_at": "2017-07-08T16:18:44-04:00",
                "updated_at": "2017-07-08T16:18:44-04:00"
              },
              "pull_requests": [
                {
                  "url": "https://api.github.com/repos/github/hello-world/pulls/1",
                  "id": 1934,
                  "number": 3956,
                  "head": {
                    "ref": "say-hello",
                    "sha": "3dca65fa3e8d4b3da3f3d056c59aee1c50f41390",
                    "repo": {
                      "id": 526,
                      "url": "https://api.github.com/repos/github/hello-world",
                      "name": "hello-world"
                    }
                  },
                  "base": {
                    "ref": "master",
                    "sha": "e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f",
                    "repo": {
                      "id": 526,
                      "url": "https://api.github.com/repos/github/hello-world",
                      "name": "hello-world"
                    }
                  }
                }
              ]
            }
          }
        ],
        "idName": "update",
        "documentationUrl": "https://developer.github.com/v3/checks/runs/#update-a-check-run"
      },
      {
        "name": "List check runs for a specific ref",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/check-runs",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "check_name",
            "type": "string",
            "description": "Returns check runs with the specified `name`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "status",
            "type": "string",
            "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
            "required": false,
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ],
            "location": "query"
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
            "default": "latest",
            "required": false,
            "enum": [
              "latest",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "total_count": 1,
              "check_runs": [
                {
                  "id": 4,
                  "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
                  "node_id": "MDg6Q2hlY2tSdW40",
                  "external_id": "",
                  "url": "https://api.github.com/repos/github/hello-world/check-runs/4",
                  "html_url": "http://github.com/github/hello-world/runs/4",
                  "details_url": "https://example.com",
                  "status": "completed",
                  "conclusion": "neutral",
                  "started_at": "2018-05-04T01:14:52Z",
                  "completed_at": "2018-05-04T01:14:52Z",
                  "output": {
                    "title": "Mighty Readme report",
                    "summary": "There are 0 failures, 2 warnings, and 1 notice.",
                    "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
                    "annotations_count": 2,
                    "annotations_url": "https://api.github.com/repos/github/hello-world/check-runs/4/annotations"
                  },
                  "name": "mighty_readme",
                  "check_suite": {
                    "id": 5
                  },
                  "app": {
                    "id": 1,
                    "node_id": "MDExOkludGVncmF0aW9uMQ==",
                    "owner": {
                      "login": "github",
                      "id": 1,
                      "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                      "url": "https://api.github.com/orgs/github",
                      "repos_url": "https://api.github.com/orgs/github/repos",
                      "events_url": "https://api.github.com/orgs/github/events",
                      "hooks_url": "https://api.github.com/orgs/github/hooks",
                      "issues_url": "https://api.github.com/orgs/github/issues",
                      "members_url": "https://api.github.com/orgs/github/members{/member}",
                      "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "description": "A great organization"
                    },
                    "name": "Super CI",
                    "description": "",
                    "external_url": "https://example.com",
                    "html_url": "https://github.com/apps/super-ci",
                    "created_at": "2017-07-08T16:18:44-04:00",
                    "updated_at": "2017-07-08T16:18:44-04:00"
                  },
                  "pull_requests": [
                    {
                      "url": "https://api.github.com/repos/github/hello-world/pulls/1",
                      "id": 1934,
                      "number": 3956,
                      "head": {
                        "ref": "say-hello",
                        "sha": "3dca65fa3e8d4b3da3f3d056c59aee1c50f41390",
                        "repo": {
                          "id": 526,
                          "url": "https://api.github.com/repos/github/hello-world",
                          "name": "hello-world"
                        }
                      },
                      "base": {
                        "ref": "master",
                        "sha": "e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f",
                        "repo": {
                          "id": 526,
                          "url": "https://api.github.com/repos/github/hello-world",
                          "name": "hello-world"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "idName": "list-for-ref",
        "documentationUrl": "https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref"
      },
      {
        "name": "List check runs in a check suite",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/check-suites/:check_suite_id/check-runs",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "check_suite_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "check_name",
            "type": "string",
            "description": "Returns check runs with the specified `name`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "status",
            "type": "string",
            "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
            "required": false,
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ],
            "location": "query"
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.",
            "default": "latest",
            "required": false,
            "enum": [
              "latest",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "total_count": 1,
              "check_runs": [
                {
                  "id": 4,
                  "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
                  "node_id": "MDg6Q2hlY2tSdW40",
                  "external_id": "",
                  "url": "https://api.github.com/repos/github/hello-world/check-runs/4",
                  "html_url": "http://github.com/github/hello-world/runs/4",
                  "details_url": "https://example.com",
                  "status": "completed",
                  "conclusion": "neutral",
                  "started_at": "2018-05-04T01:14:52Z",
                  "completed_at": "2018-05-04T01:14:52Z",
                  "output": {
                    "title": "Mighty Readme report",
                    "summary": "There are 0 failures, 2 warnings, and 1 notice.",
                    "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
                    "annotations_count": 2,
                    "annotations_url": "https://api.github.com/repos/github/hello-world/check-runs/4/annotations"
                  },
                  "name": "mighty_readme",
                  "check_suite": {
                    "id": 5
                  },
                  "app": {
                    "id": 1,
                    "node_id": "MDExOkludGVncmF0aW9uMQ==",
                    "owner": {
                      "login": "github",
                      "id": 1,
                      "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                      "url": "https://api.github.com/orgs/github",
                      "repos_url": "https://api.github.com/orgs/github/repos",
                      "events_url": "https://api.github.com/orgs/github/events",
                      "hooks_url": "https://api.github.com/orgs/github/hooks",
                      "issues_url": "https://api.github.com/orgs/github/issues",
                      "members_url": "https://api.github.com/orgs/github/members{/member}",
                      "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "description": "A great organization"
                    },
                    "name": "Super CI",
                    "description": "",
                    "external_url": "https://example.com",
                    "html_url": "https://github.com/apps/super-ci",
                    "created_at": "2017-07-08T16:18:44-04:00",
                    "updated_at": "2017-07-08T16:18:44-04:00"
                  },
                  "pull_requests": [
                    {
                      "url": "https://api.github.com/repos/github/hello-world/pulls/1",
                      "id": 1934,
                      "number": 3956,
                      "head": {
                        "ref": "say-hello",
                        "sha": "3dca65fa3e8d4b3da3f3d056c59aee1c50f41390",
                        "repo": {
                          "id": 526,
                          "url": "https://api.github.com/repos/github/hello-world",
                          "name": "hello-world"
                        }
                      },
                      "base": {
                        "ref": "master",
                        "sha": "e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f",
                        "repo": {
                          "id": 526,
                          "url": "https://api.github.com/repos/github/hello-world",
                          "name": "hello-world"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        ],
        "idName": "list-for-suite",
        "documentationUrl": "https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite"
      },
      {
        "name": "Get a single check run",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/check-runs/:check_run_id",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "check_run_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nGets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 4,
              "head_sha": "ce587453ced02b1526dfb4cb910479d431683101",
              "node_id": "MDg6Q2hlY2tSdW40",
              "external_id": "",
              "url": "https://api.github.com/repos/github/hello-world/check-runs/4",
              "html_url": "http://github.com/github/hello-world/runs/4",
              "details_url": "https://example.com",
              "status": "completed",
              "conclusion": "neutral",
              "started_at": "2018-05-04T01:14:52Z",
              "completed_at": "2018-05-04T01:14:52Z",
              "output": {
                "title": "Mighty Readme report",
                "summary": "There are 0 failures, 2 warnings, and 1 notice.",
                "text": "You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.",
                "annotations_count": 2,
                "annotations_url": "https://api.github.com/repos/github/hello-world/check-runs/4/annotations"
              },
              "name": "mighty_readme",
              "check_suite": {
                "id": 5
              },
              "app": {
                "id": 1,
                "node_id": "MDExOkludGVncmF0aW9uMQ==",
                "owner": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "name": "Super CI",
                "description": "",
                "external_url": "https://example.com",
                "html_url": "https://github.com/apps/super-ci",
                "created_at": "2017-07-08T16:18:44-04:00",
                "updated_at": "2017-07-08T16:18:44-04:00"
              },
              "pull_requests": [
                {
                  "url": "https://api.github.com/repos/github/hello-world/pulls/1",
                  "id": 1934,
                  "number": 3956,
                  "head": {
                    "ref": "say-hello",
                    "sha": "3dca65fa3e8d4b3da3f3d056c59aee1c50f41390",
                    "repo": {
                      "id": 526,
                      "url": "https://api.github.com/repos/github/hello-world",
                      "name": "hello-world"
                    }
                  },
                  "base": {
                    "ref": "master",
                    "sha": "e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f",
                    "repo": {
                      "id": 526,
                      "url": "https://api.github.com/repos/github/hello-world",
                      "name": "hello-world"
                    }
                  }
                }
              ]
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/checks/runs/#get-a-single-check-run"
      },
      {
        "name": "List annotations for a check run",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/check-runs/:check_run_id/annotations",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "check_run_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "path": "README.md",
                "start_line": 2,
                "end_line": 2,
                "start_column": 5,
                "end_column": 10,
                "annotation_level": "warning",
                "title": "Spell Checker",
                "message": "Check your spelling for 'banaas'.",
                "raw_details": "Do you mean 'bananas' or 'banana'?"
              }
            ]
          }
        ],
        "idName": "list-annotations",
        "documentationUrl": "https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run"
      },
      {
        "name": "Get a single check suite",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/check-suites/:check_suite_id",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "check_suite_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 5,
              "node_id": "MDEwOkNoZWNrU3VpdGU1",
              "head_branch": "master",
              "head_sha": "d6fde92930d4715a2b49857d24b940956b26d2d3",
              "status": "completed",
              "conclusion": "neutral",
              "url": "https://api.github.com/repos/github/hello-world/check-suites/5",
              "before": "146e867f55c26428e5f9fade55a9bbf5e95a7912",
              "after": "d6fde92930d4715a2b49857d24b940956b26d2d3",
              "pull_requests": [],
              "app": {
                "id": 1,
                "node_id": "MDExOkludGVncmF0aW9uMQ==",
                "owner": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "name": "Super CI",
                "description": "",
                "external_url": "https://example.com",
                "html_url": "https://github.com/apps/super-ci",
                "created_at": "2017-07-08T16:18:44-04:00",
                "updated_at": "2017-07-08T16:18:44-04:00"
              },
              "repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            }
          }
        ],
        "idName": "get-suite",
        "documentationUrl": "https://developer.github.com/v3/checks/suites/#get-a-single-check-suite"
      },
      {
        "name": "List check suites for a specific ref",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/check-suites",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "app_id",
            "type": "integer",
            "description": "Filters check suites by GitHub App `id`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "check_name",
            "type": "string",
            "description": "Filters checks suites by the name of the [check run](https://developer.github.com/v3/checks/runs/).",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "requests": [
          {
            "app_id": 1
          }
        ],
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "total_count": 1,
              "check_suites": [
                {
                  "id": 5,
                  "node_id": "MDEwOkNoZWNrU3VpdGU1",
                  "head_branch": "master",
                  "head_sha": "d6fde92930d4715a2b49857d24b940956b26d2d3",
                  "status": "completed",
                  "conclusion": "neutral",
                  "url": "https://api.github.com/repos/github/hello-world/check-suites/5",
                  "before": "146e867f55c26428e5f9fade55a9bbf5e95a7912",
                  "after": "d6fde92930d4715a2b49857d24b940956b26d2d3",
                  "pull_requests": [],
                  "app": {
                    "id": 1,
                    "node_id": "MDExOkludGVncmF0aW9uMQ==",
                    "owner": {
                      "login": "github",
                      "id": 1,
                      "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                      "url": "https://api.github.com/orgs/github",
                      "repos_url": "https://api.github.com/orgs/github/repos",
                      "events_url": "https://api.github.com/orgs/github/events",
                      "hooks_url": "https://api.github.com/orgs/github/hooks",
                      "issues_url": "https://api.github.com/orgs/github/issues",
                      "members_url": "https://api.github.com/orgs/github/members{/member}",
                      "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "description": "A great organization"
                    },
                    "name": "Super CI",
                    "description": "",
                    "external_url": "https://example.com",
                    "html_url": "https://github.com/apps/super-ci",
                    "created_at": "2017-07-08T16:18:44-04:00",
                    "updated_at": "2017-07-08T16:18:44-04:00"
                  },
                  "repository": {
                    "id": 1296269,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                    "name": "Hello-World",
                    "full_name": "octocat/Hello-World",
                    "owner": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    },
                    "private": false,
                    "html_url": "https://github.com/octocat/Hello-World",
                    "description": "This your first repo!",
                    "fork": false,
                    "url": "https://api.github.com/repos/octocat/Hello-World",
                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                    "git_url": "git:github.com/octocat/Hello-World.git",
                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                    "clone_url": "https://github.com/octocat/Hello-World.git",
                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                    "homepage": "https://github.com",
                    "language": null,
                    "forks_count": 9,
                    "stargazers_count": 80,
                    "watchers_count": 80,
                    "size": 108,
                    "default_branch": "master",
                    "open_issues_count": 0,
                    "topics": [
                      "octocat",
                      "atom",
                      "electron",
                      "api"
                    ],
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_downloads": true,
                    "archived": false,
                    "disabled": false,
                    "pushed_at": "2011-01-26T19:06:43Z",
                    "created_at": "2011-01-26T19:01:12Z",
                    "updated_at": "2011-01-26T19:14:43Z",
                    "permissions": {
                      "admin": false,
                      "push": false,
                      "pull": true
                    },
                    "allow_rebase_merge": true,
                    "allow_squash_merge": true,
                    "allow_merge_commit": true,
                    "subscribers_count": 42,
                    "network_count": 0
                  }
                }
              ]
            }
          }
        ],
        "idName": "list-suites-for-ref",
        "documentationUrl": "https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref"
      },
      {
        "name": "Set preferences for check suites on a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/check-suites/preferences",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "auto_trigger_checks",
            "type": "object[]",
            "description": "Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](#auto_trigger_checks-object) description for details.",
            "required": false,
            "location": "body"
          },
          {
            "name": "auto_trigger_checks[].app_id",
            "type": "integer",
            "description": "The `id` of the GitHub App.",
            "required": true,
            "location": "body"
          },
          {
            "name": "auto_trigger_checks[].setting",
            "type": "boolean",
            "description": "Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.",
            "default": true,
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "auto_trigger_checks": [
              {
                "app_id": 4,
                "setting": false
              }
            ]
          }
        ],
        "description": "Changes the default automatic flow when creating check suites. By default, the CheckSuiteEvent is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://developer.github.com/v3/checks/suites/#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "preferences": {
                "auto_trigger_checks": [
                  {
                    "app_id": 2,
                    "setting": true
                  },
                  {
                    "app_id": 4,
                    "setting": false
                  }
                ]
              },
              "repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            }
          }
        ],
        "idName": "set-suites-preferences",
        "documentationUrl": "https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository"
      },
      {
        "name": "Create a check suite",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/check-suites",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "head_sha",
            "type": "string",
            "description": "The sha of the head commit.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "head_sha": "d6fde92930d4715a2b49857d24b940956b26d2d3"
          }
        ],
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://developer.github.com/v3/checks/runs/). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Set preferences for check suites on a repository](https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository)\". Your GitHub App must have the `checks:write` permission to create check suites.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 5,
              "node_id": "MDEwOkNoZWNrU3VpdGU1",
              "head_branch": "master",
              "head_sha": "d6fde92930d4715a2b49857d24b940956b26d2d3",
              "status": "completed",
              "conclusion": "neutral",
              "url": "https://api.github.com/repos/github/hello-world/check-suites/5",
              "before": "146e867f55c26428e5f9fade55a9bbf5e95a7912",
              "after": "d6fde92930d4715a2b49857d24b940956b26d2d3",
              "pull_requests": [],
              "app": {
                "id": 1,
                "node_id": "MDExOkludGVncmF0aW9uMQ==",
                "owner": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "name": "Super CI",
                "description": "",
                "external_url": "https://example.com",
                "html_url": "https://github.com/apps/super-ci",
                "created_at": "2017-07-08T16:18:44-04:00",
                "updated_at": "2017-07-08T16:18:44-04:00"
              },
              "repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            }
          }
        ],
        "idName": "create-suite",
        "documentationUrl": "https://developer.github.com/v3/checks/suites/#create-a-check-suite"
      },
      {
        "name": "Rerequest check suite",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/check-suites/:check_suite_id/rerequest",
        "previews": [
          {
            "name": "antiope",
            "description": "The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.antiope-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "check_suite_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://developer.github.com/v3/activity/events/types/#checksuiteevent) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\nTo rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "rerequest-suite",
        "documentationUrl": "https://developer.github.com/v3/checks/suites/#rerequest-check-suite"
      }
    ],
    "codesOfConduct": [
      {
        "name": "List all codes of conduct",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/codes_of_conduct",
        "previews": [
          {
            "name": "scarlet-witch",
            "description": "**Note:** The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.scarlet-witch-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "key": "citizen_code_of_conduct",
                "name": "Citizen Code of Conduct",
                "url": "https://api.github.com/codes_of_conduct/citizen_code_of_conduct"
              },
              {
                "key": "contributor_covenant",
                "name": "Contributor Covenant",
                "url": "https://api.github.com/codes_of_conduct/contributor_covenant"
              }
            ]
          }
        ],
        "idName": "list-conduct-codes",
        "documentationUrl": "https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct"
      },
      {
        "name": "Get an individual code of conduct",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/codes_of_conduct/:key",
        "previews": [
          {
            "name": "scarlet-witch",
            "description": "**Note:** The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.scarlet-witch-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "key",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "key": "contributor_covenant",
              "name": "Contributor Covenant",
              "url": "https://api.github.com/codes_of_conduct/contributor_covenant",
              "body": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
            }
          }
        ],
        "idName": "get-conduct-code",
        "documentationUrl": "https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct"
      },
      {
        "name": "Get the contents of a repository's code of conduct",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/community/code_of_conduct",
        "previews": [
          {
            "name": "scarlet-witch",
            "description": "**Note:** The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.scarlet-witch-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "This method returns the contents of the repository's code of conduct file, if one is detected.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "key": "contributor_covenant",
              "name": "Contributor Covenant",
              "url": "https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md",
              "body": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include=>\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include=>\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\nto any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\nposting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at lindseyb@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
            }
          }
        ],
        "idName": "get-for-repo",
        "documentationUrl": "https://developer.github.com/v3/codes_of_conduct/#get-the-contents-of-a-repositorys-code-of-conduct"
      }
    ],
    "emojis": [
      {
        "name": "Get",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/emojis",
        "previews": [],
        "params": [],
        "description": "Lists all the emojis available to use on GitHub.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/emojis/#emojis"
      }
    ],
    "gists": [
      {
        "method": "GET",
        "path": "/users/:username/gists",
        "enabledForApps": false,
        "name": "List public gists for the specified user",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "since",
            "type": "string",
            "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/gists/aa5a315d61ae9438b18d",
                "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
                "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
                "id": "aa5a315d61ae9438b18d",
                "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
                "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
                "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
                "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
                "files": {
                  "hello_world.rb": {
                    "filename": "hello_world.rb",
                    "type": "application/x-ruby",
                    "language": "Ruby",
                    "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                    "size": 167
                  }
                },
                "public": true,
                "created_at": "2010-04-14T02:15:15Z",
                "updated_at": "2011-06-20T11:34:15Z",
                "description": "Hello World Examples",
                "comments": 0,
                "user": null,
                "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "truncated": false
              }
            ]
          }
        ],
        "idName": "list-public-for-user",
        "documentationUrl": "https://developer.github.com/v3/gists/#list-a-users-gists"
      },
      {
        "method": "GET",
        "path": "/gists",
        "enabledForApps": false,
        "name": "List the authenticated user's gists or if called anonymously, this will return all public gists",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "since",
            "type": "string",
            "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/gists/aa5a315d61ae9438b18d",
                "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
                "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
                "id": "aa5a315d61ae9438b18d",
                "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
                "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
                "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
                "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
                "files": {
                  "hello_world.rb": {
                    "filename": "hello_world.rb",
                    "type": "application/x-ruby",
                    "language": "Ruby",
                    "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                    "size": 167
                  }
                },
                "public": true,
                "created_at": "2010-04-14T02:15:15Z",
                "updated_at": "2011-06-20T11:34:15Z",
                "description": "Hello World Examples",
                "comments": 0,
                "user": null,
                "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "truncated": false
              }
            ]
          }
        ],
        "idName": "list",
        "documentationUrl": "https://developer.github.com/v3/gists/#list-a-users-gists"
      },
      {
        "name": "List all public gists",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/public",
        "previews": [],
        "params": [
          {
            "name": "since",
            "type": "string",
            "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://developer.github.com/v3/#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/gists/aa5a315d61ae9438b18d",
                "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
                "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
                "id": "aa5a315d61ae9438b18d",
                "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
                "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
                "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
                "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
                "files": {
                  "hello_world.rb": {
                    "filename": "hello_world.rb",
                    "type": "application/x-ruby",
                    "language": "Ruby",
                    "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                    "size": 167
                  }
                },
                "public": true,
                "created_at": "2010-04-14T02:15:15Z",
                "updated_at": "2011-06-20T11:34:15Z",
                "description": "Hello World Examples",
                "comments": 0,
                "user": null,
                "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "truncated": false
              }
            ]
          }
        ],
        "idName": "list-public",
        "documentationUrl": "https://developer.github.com/v3/gists/#list-all-public-gists"
      },
      {
        "name": "List starred gists",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/starred",
        "previews": [],
        "params": [
          {
            "name": "since",
            "type": "string",
            "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List the authenticated user's starred gists:",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/gists/aa5a315d61ae9438b18d",
                "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
                "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
                "id": "aa5a315d61ae9438b18d",
                "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
                "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
                "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
                "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
                "files": {
                  "hello_world.rb": {
                    "filename": "hello_world.rb",
                    "type": "application/x-ruby",
                    "language": "Ruby",
                    "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                    "size": 167
                  }
                },
                "public": true,
                "created_at": "2010-04-14T02:15:15Z",
                "updated_at": "2011-06-20T11:34:15Z",
                "description": "Hello World Examples",
                "comments": 0,
                "user": null,
                "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "truncated": false
              }
            ]
          }
        ],
        "idName": "list-starred",
        "documentationUrl": "https://developer.github.com/v3/gists/#list-starred-gists"
      },
      {
        "name": "Get a single gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/:gist_id",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/gists/aa5a315d61ae9438b18d",
              "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
              "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
              "id": "aa5a315d61ae9438b18d",
              "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
              "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
              "files": {
                "hello_world.rb": {
                  "filename": "hello_world.rb",
                  "type": "application/x-ruby",
                  "language": "Ruby",
                  "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                  "size": 167,
                  "truncated": false,
                  "content": "class HelloWorld\n   def initialize(name)\n      @name = name.capitalize\n   end\n   def sayHi\n      puts \"Hello !\"\n   end\nend\n\nhello = HelloWorld.new(\"World\")\nhello.sayHi"
                },
                "hello_world.py": {
                  "filename": "hello_world.py",
                  "type": "application/x-python",
                  "language": "Python",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/99c1bf3a345505c2e6195198d5f8c36267de570b/hello_world.py",
                  "size": 199,
                  "truncated": false,
                  "content": "class HelloWorld:\n\n    def __init__(self, name):\n        self.name = name.capitalize()\n       \n    def sayHi(self):\n        print \"Hello \" + self.name + \"!\"\n\nhello = HelloWorld(\"world\")\nhello.sayHi()"
                },
                "hello_world_ruby.txt": {
                  "filename": "hello_world_ruby.txt",
                  "type": "text/plain",
                  "language": "Text",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/9e4544db60e01a261aac098592b11333704e9082/hello_world_ruby.txt",
                  "size": 46,
                  "truncated": false,
                  "content": "Run `ruby hello_world.rb` to print Hello World"
                },
                "hello_world_python.txt": {
                  "filename": "hello_world_python.txt",
                  "type": "text/plain",
                  "language": "Text",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/076b4b78c10c9b7e1e0b73ffb99631bfc948de3b/hello_world_python.txt",
                  "size": 48,
                  "truncated": false,
                  "content": "Run `python hello_world.py` to print Hello World"
                }
              },
              "public": true,
              "created_at": "2010-04-14T02:15:15Z",
              "updated_at": "2011-06-20T11:34:15Z",
              "description": "Hello World Examples",
              "comments": 0,
              "user": null,
              "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "truncated": false,
              "forks": [
                {
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "url": "https://api.github.com/gists/dee9c42e4998ce2ea439",
                  "id": "dee9c42e4998ce2ea439",
                  "created_at": "2011-04-14T16:00:49Z",
                  "updated_at": "2011-04-14T16:00:49Z"
                }
              ],
              "history": [
                {
                  "url": "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f",
                  "version": "57a7f021a713b1c5a6a199b54cc514735d2d462f",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "change_status": {
                    "deletions": 0,
                    "additions": 180,
                    "total": 180
                  },
                  "committed_at": "2010-04-14T02:15:15Z"
                }
              ]
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/gists/#get-a-single-gist"
      },
      {
        "name": "Get a specific revision of a gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/:gist_id/:sha",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f",
              "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
              "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
              "id": "aa5a315d61ae9438b18d",
              "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
              "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
              "files": {
                "hello_world.rb": {
                  "filename": "hello_world.rb",
                  "type": "application/x-ruby",
                  "language": "Ruby",
                  "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                  "size": 167,
                  "truncated": false,
                  "content": "class HelloWorld\n   def initialize(name)\n      @name = name.capitalize\n   end\n   def sayHi\n      puts \"Hello !\"\n   end\nend\n\nhello = HelloWorld.new(\"World\")\nhello.sayHi"
                },
                "hello_world.py": {
                  "filename": "hello_world.py",
                  "type": "application/x-python",
                  "language": "Python",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/99c1bf3a345505c2e6195198d5f8c36267de570b/hello_world.py",
                  "size": 199,
                  "truncated": false,
                  "content": "class HelloWorld:\n\n    def __init__(self, name):\n        self.name = name.capitalize()\n       \n    def sayHi(self):\n        print \"Hello \" + self.name + \"!\"\n\nhello = HelloWorld(\"world\")\nhello.sayHi()"
                },
                "hello_world_ruby.txt": {
                  "filename": "hello_world_ruby.txt",
                  "type": "text/plain",
                  "language": "Text",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/9e4544db60e01a261aac098592b11333704e9082/hello_world_ruby.txt",
                  "size": 46,
                  "truncated": false,
                  "content": "Run `ruby hello_world.rb` to print Hello World"
                },
                "hello_world_python.txt": {
                  "filename": "hello_world_python.txt",
                  "type": "text/plain",
                  "language": "Text",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/076b4b78c10c9b7e1e0b73ffb99631bfc948de3b/hello_world_python.txt",
                  "size": 48,
                  "truncated": false,
                  "content": "Run `python hello_world.py` to print Hello World"
                }
              },
              "public": true,
              "created_at": "2010-04-14T02:15:15Z",
              "updated_at": "2011-06-20T11:34:15Z",
              "description": "Hello World Examples",
              "comments": 0,
              "user": null,
              "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "truncated": false,
              "forks": [
                {
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "url": "https://api.github.com/gists/dee9c42e4998ce2ea439",
                  "id": "dee9c42e4998ce2ea439",
                  "created_at": "2011-04-14T16:00:49Z",
                  "updated_at": "2011-04-14T16:00:49Z"
                }
              ],
              "history": [
                {
                  "url": "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f",
                  "version": "57a7f021a713b1c5a6a199b54cc514735d2d462f",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "change_status": {
                    "deletions": 0,
                    "additions": 180,
                    "total": 180
                  },
                  "committed_at": "2010-04-14T02:15:15Z"
                }
              ]
            }
          }
        ],
        "idName": "get-revision",
        "documentationUrl": "https://developer.github.com/v3/gists/#get-a-specific-revision-of-a-gist"
      },
      {
        "name": "Create a gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/gists",
        "previews": [],
        "params": [
          {
            "name": "files",
            "type": "object",
            "description": "The filenames and content of each file in the gist. The keys in the `files` object represent the filename and have the type `string`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "files.content",
            "type": "string",
            "description": "The content of the file.",
            "required": false,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A descriptive name for this gist.",
            "required": false,
            "location": "body"
          },
          {
            "name": "public",
            "type": "boolean",
            "description": "When `true`, the gist will be public and available for anyone to see.",
            "default": false,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "description": "Hello World Examples",
            "public": true,
            "files": {
              "hello_world.rb": {
                "content": "class HelloWorld\n   def initialize(name)\n      @name = name.capitalize\n   end\n   def sayHi\n      puts \"Hello !\"\n   end\nend\n\nhello = HelloWorld.new(\"World\")\nhello.sayHi"
              },
              "hello_world.py": {
                "content": "class HelloWorld:\n\n    def __init__(self, name):\n        self.name = name.capitalize()\n       \n    def sayHi(self):\n        print \"Hello \" + self.name + \"!\"\n\nhello = HelloWorld(\"world\")\nhello.sayHi()"
              },
              "hello_world_ruby.txt": {
                "content": "Run `ruby hello_world.rb` to print Hello World"
              },
              "hello_world_python.txt": {
                "content": "Run `python hello_world.py` to print Hello World"
              }
            }
          }
        ],
        "description": "Allows you to add a new gist with one or more files.\n\n**Note:** Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/gists/aa5a315d61ae9438b18d",
              "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
              "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
              "id": "aa5a315d61ae9438b18d",
              "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
              "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
              "files": {
                "hello_world.rb": {
                  "filename": "hello_world.rb",
                  "type": "application/x-ruby",
                  "language": "Ruby",
                  "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                  "size": 167,
                  "truncated": false,
                  "content": "class HelloWorld\n   def initialize(name)\n      @name = name.capitalize\n   end\n   def sayHi\n      puts \"Hello !\"\n   end\nend\n\nhello = HelloWorld.new(\"World\")\nhello.sayHi"
                },
                "hello_world.py": {
                  "filename": "hello_world.py",
                  "type": "application/x-python",
                  "language": "Python",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/99c1bf3a345505c2e6195198d5f8c36267de570b/hello_world.py",
                  "size": 199,
                  "truncated": false,
                  "content": "class HelloWorld:\n\n    def __init__(self, name):\n        self.name = name.capitalize()\n       \n    def sayHi(self):\n        print \"Hello \" + self.name + \"!\"\n\nhello = HelloWorld(\"world\")\nhello.sayHi()"
                },
                "hello_world_ruby.txt": {
                  "filename": "hello_world_ruby.txt",
                  "type": "text/plain",
                  "language": "Text",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/9e4544db60e01a261aac098592b11333704e9082/hello_world_ruby.txt",
                  "size": 46,
                  "truncated": false,
                  "content": "Run `ruby hello_world.rb` to print Hello World"
                },
                "hello_world_python.txt": {
                  "filename": "hello_world_python.txt",
                  "type": "text/plain",
                  "language": "Text",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/076b4b78c10c9b7e1e0b73ffb99631bfc948de3b/hello_world_python.txt",
                  "size": 48,
                  "truncated": false,
                  "content": "Run `python hello_world.py` to print Hello World"
                }
              },
              "public": true,
              "created_at": "2010-04-14T02:15:15Z",
              "updated_at": "2011-06-20T11:34:15Z",
              "description": "Hello World Examples",
              "comments": 0,
              "user": null,
              "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "truncated": false,
              "forks": [
                {
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "url": "https://api.github.com/gists/dee9c42e4998ce2ea439",
                  "id": "dee9c42e4998ce2ea439",
                  "created_at": "2011-04-14T16:00:49Z",
                  "updated_at": "2011-04-14T16:00:49Z"
                }
              ],
              "history": [
                {
                  "url": "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f",
                  "version": "57a7f021a713b1c5a6a199b54cc514735d2d462f",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "change_status": {
                    "deletions": 0,
                    "additions": 180,
                    "total": 180
                  },
                  "committed_at": "2010-04-14T02:15:15Z"
                }
              ]
            }
          }
        ],
        "idName": "create",
        "documentationUrl": "https://developer.github.com/v3/gists/#create-a-gist"
      },
      {
        "name": "Edit a gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/gists/:gist_id",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A descriptive name for this gist.",
            "required": false,
            "location": "body"
          },
          {
            "name": "files",
            "type": "object",
            "description": "The filenames and content that make up this gist.",
            "required": false,
            "location": "body"
          },
          {
            "name": "files.content",
            "type": "string",
            "description": "The updated content of the file.",
            "required": false,
            "location": "body"
          },
          {
            "name": "files.filename",
            "type": "string",
            "description": "The new name for this file. To delete a file, set the value of the filename to `null`.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "description": "Hello World Examples",
            "files": {
              "hello_world_ruby.txt": {
                "content": "Run `ruby hello_world.rb` or `python hello_world.py` to print Hello World",
                "filename": "hello_world.md"
              },
              "hello_world_python.txt": null,
              "new_file.txt": {
                "content": "This is a new placeholder file."
              }
            }
          }
        ],
        "description": "Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/gists/aa5a315d61ae9438b18d",
              "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
              "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
              "id": "aa5a315d61ae9438b18d",
              "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
              "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
              "files": {
                "hello_world.rb": {
                  "filename": "hello_world.rb",
                  "type": "application/x-ruby",
                  "language": "Ruby",
                  "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                  "size": 167,
                  "truncated": false,
                  "content": "class HelloWorld\n   def initialize(name)\n      @name = name.capitalize\n   end\n   def sayHi\n      puts \"Hello !\"\n   end\nend\n\nhello = HelloWorld.new(\"World\")\nhello.sayHi"
                },
                "hello_world.py": {
                  "filename": "hello_world.py",
                  "type": "application/x-python",
                  "language": "Python",
                  "raw_url": "https://gist.githubusercontent.com/octocat/e29f3839074953e1cc2934867fa5f2d2/raw/99c1bf3a345505c2e6195198d5f8c36267de570b/hello_world.py",
                  "size": 199,
                  "truncated": false,
                  "content": "class HelloWorld:\n\n    def __init__(self, name):\n        self.name = name.capitalize()\n       \n    def sayHi(self):\n        print \"Hello \" + self.name + \"!\"\n\nhello = HelloWorld(\"world\")\nhello.sayHi()"
                },
                "hello_world.md": {
                  "filename": "hello_world.md",
                  "type": "text/plain",
                  "language": "Markdown",
                  "raw_url": "https://gist.githubusercontent.com/octocat/8df0a8f642973cbda937bf542d37d4e9/raw/4221bb4b942568c4e3ab253022d2b7fec7844f21/hello_world.md",
                  "size": 73,
                  "truncated": false,
                  "content": "Run `ruby hello_world.rb` or `python hello_world.py` to print Hello World"
                },
                "new_file.txt": {
                  "filename": "new_file.txt",
                  "type": "text/plain",
                  "language": "Text",
                  "raw_url": "https://gist.githubusercontent.com/octocat/8df0a8f642973cbda937bf542d37d4e9/raw/56ab7bdf864fa11c1e16acce2a5116171514d2d1/new_file.txt",
                  "size": 31,
                  "truncated": false,
                  "content": "This is a new placeholder file."
                }
              },
              "public": true,
              "created_at": "2010-04-14T02:15:15Z",
              "updated_at": "2011-06-20T11:34:15Z",
              "description": "Hello World Examples",
              "comments": 0,
              "user": null,
              "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "truncated": false,
              "forks": [
                {
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "url": "https://api.github.com/gists/dee9c42e4998ce2ea439",
                  "id": "dee9c42e4998ce2ea439",
                  "created_at": "2011-04-14T16:00:49Z",
                  "updated_at": "2011-04-14T16:00:49Z"
                }
              ],
              "history": [
                {
                  "url": "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f",
                  "version": "57a7f021a713b1c5a6a199b54cc514735d2d462f",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "change_status": {
                    "deletions": 0,
                    "additions": 180,
                    "total": 180
                  },
                  "committed_at": "2010-04-14T02:15:15Z"
                }
              ]
            }
          }
        ],
        "idName": "update",
        "documentationUrl": "https://developer.github.com/v3/gists/#edit-a-gist"
      },
      {
        "name": "List gist commits",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/:gist_id/commits",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f",
                "version": "57a7f021a713b1c5a6a199b54cc514735d2d462f",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "change_status": {
                  "deletions": 0,
                  "additions": 180,
                  "total": 180
                },
                "committed_at": "2010-04-14T02:15:15Z"
              }
            ]
          }
        ],
        "idName": "list-commits",
        "documentationUrl": "https://developer.github.com/v3/gists/#list-gist-commits"
      },
      {
        "name": "Star a gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/gists/:gist_id/star",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "star",
        "documentationUrl": "https://developer.github.com/v3/gists/#star-a-gist"
      },
      {
        "name": "Unstar a gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/gists/:gist_id/star",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "unstar",
        "documentationUrl": "https://developer.github.com/v3/gists/#unstar-a-gist"
      },
      {
        "name": "Check if a gist is starred",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/:gist_id/star",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "idName": "check-is-starred",
        "documentationUrl": "https://developer.github.com/v3/gists/#check-if-a-gist-is-starred"
      },
      {
        "name": "Fork a gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/gists/:gist_id/forks",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "**Note**: This was previously `/gists/:gist_id/fork`.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/gists/aa5a315d61ae9438b18d",
              "forks_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/forks",
              "commits_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/commits",
              "id": "aa5a315d61ae9438b18d",
              "node_id": "MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk",
              "git_pull_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "git_push_url": "https://gist.github.com/aa5a315d61ae9438b18d.git",
              "html_url": "https://gist.github.com/aa5a315d61ae9438b18d",
              "files": {
                "hello_world.rb": {
                  "filename": "hello_world.rb",
                  "type": "application/x-ruby",
                  "language": "Ruby",
                  "raw_url": "https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb",
                  "size": 167
                }
              },
              "public": true,
              "created_at": "2010-04-14T02:15:15Z",
              "updated_at": "2011-06-20T11:34:15Z",
              "description": "Hello World Examples",
              "comments": 0,
              "user": null,
              "comments_url": "https://api.github.com/gists/aa5a315d61ae9438b18d/comments/",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "truncated": false
            }
          }
        ],
        "idName": "fork",
        "documentationUrl": "https://developer.github.com/v3/gists/#fork-a-gist"
      },
      {
        "name": "List gist forks",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/:gist_id/forks",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "url": "https://api.github.com/gists/dee9c42e4998ce2ea439",
                "id": "dee9c42e4998ce2ea439",
                "created_at": "2011-04-14T16:00:49Z",
                "updated_at": "2011-04-14T16:00:49Z"
              }
            ]
          }
        ],
        "idName": "list-forks",
        "documentationUrl": "https://developer.github.com/v3/gists/#list-gist-forks"
      },
      {
        "name": "Delete a gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/gists/:gist_id",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete",
        "documentationUrl": "https://developer.github.com/v3/gists/#delete-a-gist"
      },
      {
        "name": "List comments on a gist",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/:gist_id/comments",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDExOkdpc3RDb21tZW50MQ==",
                "url": "https://api.github.com/gists/a6db0bec360bb87e9418/comments/1",
                "body": "Just commenting for the sake of commenting",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-18T23:23:56Z",
                "updated_at": "2011-04-18T23:23:56Z"
              }
            ]
          }
        ],
        "idName": "list-comments",
        "documentationUrl": "https://developer.github.com/v3/gists/comments/#list-comments-on-a-gist"
      },
      {
        "name": "Get a single comment",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gists/:gist_id/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDExOkdpc3RDb21tZW50MQ==",
              "url": "https://api.github.com/gists/a6db0bec360bb87e9418/comments/1",
              "body": "Just commenting for the sake of commenting",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-18T23:23:56Z",
              "updated_at": "2011-04-18T23:23:56Z"
            }
          }
        ],
        "idName": "get-comment",
        "documentationUrl": "https://developer.github.com/v3/gists/comments/#get-a-single-comment"
      },
      {
        "name": "Create a comment",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/gists/:gist_id/comments",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The comment text.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "body": "Just commenting for the sake of commenting"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDExOkdpc3RDb21tZW50MQ==",
              "url": "https://api.github.com/gists/a6db0bec360bb87e9418/comments/1",
              "body": "Just commenting for the sake of commenting",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-18T23:23:56Z",
              "updated_at": "2011-04-18T23:23:56Z"
            }
          }
        ],
        "idName": "create-comment",
        "documentationUrl": "https://developer.github.com/v3/gists/comments/#create-a-comment"
      },
      {
        "name": "Edit a comment",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/gists/:gist_id/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The comment text.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "body": "Just commenting for the sake of commenting"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDExOkdpc3RDb21tZW50MQ==",
              "url": "https://api.github.com/gists/a6db0bec360bb87e9418/comments/1",
              "body": "Just commenting for the sake of commenting",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-18T23:23:56Z",
              "updated_at": "2011-04-18T23:23:56Z"
            }
          }
        ],
        "idName": "update-comment",
        "documentationUrl": "https://developer.github.com/v3/gists/comments/#edit-a-comment"
      },
      {
        "name": "Delete a comment",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/gists/:gist_id/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "gist_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-comment",
        "documentationUrl": "https://developer.github.com/v3/gists/comments/#delete-a-comment"
      }
    ],
    "git": [
      {
        "name": "Get a blob",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/git/blobs/:file_sha",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "file_sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "The `content` in the response will always be Base64 encoded.\n\n_Note_: This API supports blobs up to 100 megabytes in size.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "content": "Q29udGVudCBvZiB0aGUgYmxvYg==\n",
              "encoding": "base64",
              "url": "https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15",
              "sha": "3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15",
              "size": 19
            }
          }
        ],
        "idName": "get-blob",
        "documentationUrl": "https://developer.github.com/v3/git/blobs/#get-a-blob"
      },
      {
        "name": "Create a blob",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/git/blobs",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The new blob's content.",
            "required": true,
            "location": "body"
          },
          {
            "name": "encoding",
            "type": "string",
            "description": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported.",
            "default": "\"utf-8\"",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "content": "Content of the blob",
            "encoding": "utf-8"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15",
              "sha": "3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15"
            }
          }
        ],
        "idName": "create-blob",
        "documentationUrl": "https://developer.github.com/v3/git/blobs/#create-a-blob"
      },
      {
        "name": "Get a commit",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/git/commits/:commit_sha",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "commit_sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
              "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
              "author": {
                "date": "2014-11-07T22:01:45Z",
                "name": "Scott Chacon",
                "email": "schacon@gmail.com"
              },
              "committer": {
                "date": "2014-11-07T22:01:45Z",
                "name": "Scott Chacon",
                "email": "schacon@gmail.com"
              },
              "message": "added readme, because im a good github citizen",
              "tree": {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
                "sha": "691272480426f78a0138979dd3ce63b77f706feb"
              },
              "parents": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                  "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
                }
              ],
              "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
              }
            }
          }
        ],
        "idName": "get-commit",
        "documentationUrl": "https://developer.github.com/v3/git/commits/#get-a-commit"
      },
      {
        "name": "Create a commit",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/git/commits",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "message",
            "type": "string",
            "description": "The commit message",
            "required": true,
            "location": "body"
          },
          {
            "name": "tree",
            "type": "string",
            "description": "The SHA of the tree object this commit points to",
            "required": true,
            "location": "body"
          },
          {
            "name": "parents",
            "type": "string[]",
            "description": "The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.",
            "required": true,
            "location": "body"
          },
          {
            "name": "author",
            "type": "object",
            "description": "Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details.",
            "required": false,
            "location": "body"
          },
          {
            "name": "author.name",
            "type": "string",
            "description": "The name of the author (or committer) of the commit",
            "required": false,
            "location": "body"
          },
          {
            "name": "author.email",
            "type": "string",
            "description": "The email of the author (or committer) of the commit",
            "required": false,
            "location": "body"
          },
          {
            "name": "author.date",
            "type": "string",
            "description": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer",
            "type": "object",
            "description": "Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details.",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer.name",
            "type": "string",
            "description": "The name of the author (or committer) of the commit",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer.email",
            "type": "string",
            "description": "The email of the author (or committer) of the commit",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer.date",
            "type": "string",
            "description": "Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "signature",
            "type": "string",
            "description": "The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "message": "my commit message",
            "author": {
              "name": "Mona Octocat",
              "email": "octocat@github.com",
              "date": "2008-07-09T16:13:30+12:00"
            },
            "parents": [
              "7d1b31e74ee336d15cbd21741bc88a537ed063a0"
            ],
            "tree": "827efc6d56897b048c772eb4087f854f46256132",
            "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv\n7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI\nDkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n\n2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA\nOQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k\nnrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU\n+NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB\njHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ\n3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+\nUpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr\nX11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp\neSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=\n=5Io4\n-----END PGP SIGNATURE-----\n"
          }
        ],
        "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\nIn this example, the payload of the signature would be:\n\n\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
              "node_id": "MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==",
              "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
              "author": {
                "date": "2014-11-07T22:01:45Z",
                "name": "Scott Chacon",
                "email": "schacon@gmail.com"
              },
              "committer": {
                "date": "2014-11-07T22:01:45Z",
                "name": "Scott Chacon",
                "email": "schacon@gmail.com"
              },
              "message": "my commit message",
              "tree": {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132",
                "sha": "827efc6d56897b048c772eb4087f854f46256132"
              },
              "parents": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0",
                  "sha": "7d1b31e74ee336d15cbd21741bc88a537ed063a0"
                }
              ],
              "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
              }
            }
          }
        ],
        "idName": "create-commit",
        "documentationUrl": "https://developer.github.com/v3/git/commits/#create-a-commit"
      },
      {
        "name": "Get a reference",
        "enabledForApps": true,
        "method": "GET",
        "path": "/repos/:owner/:repo/git/refs/:ref",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "description": "Must be formatted as `heads/branch`, not just `branch`",
            "required": true,
            "location": "url"
          }
        ],
        "description": "Returns a branch or tag reference. Other than the [REST API](https://developer.github.com/v3/git/refs/#get-a-reference) it always returns a single reference. If the REST API returns with an array then the method responds with an error.",
        "idName": "get-ref",
        "documentationUrl": "https://developer.github.com/v3/git/refs/#get-a-reference",
        "isOverride": true
      },
      {
        "name": "Get all references",
        "enabledForApps": true,
        "method": "GET",
        "path": "/repos/:owner/:repo/git/refs/:namespace",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "namespace",
            "type": "string",
            "description": "Filter by sub-namespace (reference prefix). Most commen examples would be `'heads/'` and `'tags/'` to retrieve branches or tags",
            "required": false,
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "This will return an array of all the references on the system, including things like notes and stashes if they exist on the server",
        "idName": "list-refs",
        "documentationUrl": "https://developer.github.com/v3/git/refs/#get-all-references",
        "isOverride": true
      },
      {
        "name": "Create a reference",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/git/refs",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "description": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.",
            "required": true,
            "location": "body"
          },
          {
            "name": "sha",
            "type": "string",
            "description": "The SHA1 value for this reference.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "ref": "refs/heads/featureA",
            "sha": "aa218f56b14c9653891f9e74264a383fa43fefbd"
          }
        ],
        "description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "ref": "refs/heads/featureA",
              "node_id": "MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==",
              "url": "https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA",
              "object": {
                "type": "commit",
                "sha": "aa218f56b14c9653891f9e74264a383fa43fefbd",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd"
              }
            }
          }
        ],
        "idName": "create-ref",
        "documentationUrl": "https://developer.github.com/v3/git/refs/#create-a-reference"
      },
      {
        "name": "Update a reference",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/git/refs/:ref",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sha",
            "type": "string",
            "description": "The SHA1 value to set this reference to",
            "required": true,
            "location": "body"
          },
          {
            "name": "force",
            "type": "boolean",
            "description": "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to `false` will make sure you're not overwriting work.",
            "default": false,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "sha": "aa218f56b14c9653891f9e74264a383fa43fefbd",
            "force": true
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "ref": "refs/heads/featureA",
              "node_id": "MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==",
              "url": "https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA",
              "object": {
                "type": "commit",
                "sha": "aa218f56b14c9653891f9e74264a383fa43fefbd",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd"
              }
            }
          }
        ],
        "idName": "update-ref",
        "documentationUrl": "https://developer.github.com/v3/git/refs/#update-a-reference"
      },
      {
        "name": "Delete a reference",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/git/refs/:ref",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "```\nDELETE /repos/octocat/Hello-World/git/refs/heads/feature-a\n```\n\n```\nDELETE /repos/octocat/Hello-World/git/refs/tags/v1.0\n```",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-ref",
        "documentationUrl": "https://developer.github.com/v3/git/refs/#delete-a-reference"
      },
      {
        "name": "Get a tag",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/git/tags/:tag_sha",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "tag_sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "node_id": "MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==",
              "tag": "v0.0.1",
              "sha": "940bd336248efae0f9ee5bc7b2d5c985887b16ac",
              "url": "https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac",
              "message": "initial version",
              "tagger": {
                "name": "Scott Chacon",
                "email": "schacon@gmail.com",
                "date": "2014-11-07T22:01:45Z"
              },
              "object": {
                "type": "commit",
                "sha": "c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c"
              },
              "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
              }
            }
          }
        ],
        "idName": "get-tag",
        "documentationUrl": "https://developer.github.com/v3/git/tags/#get-a-tag"
      },
      {
        "name": "Create a tag object",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/git/tags",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "tag",
            "type": "string",
            "description": "The tag's name. This is typically a version (e.g., \"v0.0.1\").",
            "required": true,
            "location": "body"
          },
          {
            "name": "message",
            "type": "string",
            "description": "The tag message.",
            "required": true,
            "location": "body"
          },
          {
            "name": "object",
            "type": "string",
            "description": "The SHA of the git object this is tagging.",
            "required": true,
            "location": "body"
          },
          {
            "name": "type",
            "type": "string",
            "description": "The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.",
            "required": true,
            "enum": [
              "commit",
              "tree",
              "blob"
            ],
            "location": "body"
          },
          {
            "name": "tagger",
            "type": "object",
            "description": "An object with information about the individual creating the tag.",
            "required": false,
            "location": "body"
          },
          {
            "name": "tagger.name",
            "type": "string",
            "description": "The name of the author of the tag",
            "required": false,
            "location": "body"
          },
          {
            "name": "tagger.email",
            "type": "string",
            "description": "The email of the author of the tag",
            "required": false,
            "location": "body"
          },
          {
            "name": "tagger.date",
            "type": "string",
            "description": "When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "tag": "v0.0.1",
            "message": "initial version\n",
            "object": "c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c",
            "type": "commit",
            "tagger": {
              "name": "Scott Chacon",
              "email": "schacon@gmail.com",
              "date": "2011-06-17T14:53:35-07:00"
            }
          }
        ],
        "description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://developer.github.com/v3/git/refs/#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://developer.github.com/v3/git/refs/#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "node_id": "MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==",
              "tag": "v0.0.1",
              "sha": "940bd336248efae0f9ee5bc7b2d5c985887b16ac",
              "url": "https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac",
              "message": "initial version",
              "tagger": {
                "name": "Scott Chacon",
                "email": "schacon@gmail.com",
                "date": "2014-11-07T22:01:45Z"
              },
              "object": {
                "type": "commit",
                "sha": "c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c"
              },
              "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
              }
            }
          }
        ],
        "idName": "create-tag",
        "documentationUrl": "https://developer.github.com/v3/git/tags/#create-a-tag-object"
      },
      {
        "name": "Get a tree",
        "enabledForApps": true,
        "method": "GET",
        "path": "/repos/:owner/:repo/git/trees/:tree_sha",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "tree_sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "recursive",
            "type": "integer",
            "description": "",
            "enum": [
              1
            ],
            "location": "query"
          }
        ],
        "description": "If `truncated` in the response is `true`, the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, omit the `recursive` parameter, and fetch one sub-tree at a time. If you need to fetch even more items, you can clone the repository and iterate over the Git data locally.",
        "idName": "get-tree",
        "documentationUrl": "https://developer.github.com/v3/git/trees/#get-a-tree",
        "isOverride": true
      },
      {
        "name": "Create a tree",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/git/trees",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "tree",
            "type": "object[]",
            "description": "Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure.",
            "required": true,
            "location": "body"
          },
          {
            "name": "tree[].path",
            "type": "string",
            "description": "The file referenced in the tree.",
            "required": false,
            "location": "body"
          },
          {
            "name": "tree[].mode",
            "type": "string",
            "description": "The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink.",
            "required": false,
            "enum": [
              "100644",
              "100755",
              "040000",
              "160000",
              "120000"
            ],
            "location": "body"
          },
          {
            "name": "tree[].type",
            "type": "string",
            "description": "Either `blob`, `tree`, or `commit`.",
            "required": false,
            "enum": [
              "blob",
              "tree",
              "commit"
            ],
            "location": "body"
          },
          {
            "name": "tree[].sha",
            "type": "string",
            "description": "The SHA1 checksum ID of the object in the tree. Also called `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
            "required": false,
            "location": "body"
          },
          {
            "name": "tree[].content",
            "type": "string",
            "description": "The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error.",
            "required": false,
            "location": "body"
          },
          {
            "name": "base_tree",
            "type": "string",
            "description": "The SHA1 of the tree you want to update with new data. If you don't set this, the commit will be created on top of everything; however, it will only contain your change, the rest of your files will show up as deleted.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "base_tree": "9fb037999f264ba9a7fc6274d15fa3ae2ab98312",
            "tree": [
              {
                "path": "file.rb",
                "mode": "100644",
                "type": "blob",
                "sha": "44b4fc6d56897b048c772eb4087f854f46256132"
              }
            ]
          }
        ],
        "description": "The tree creation API will take nested entries as well. If both a tree and a nested path modifying that tree are specified, it will overwrite the contents of that tree with the new path contents and write a new tree out.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "sha": "cd8274d15fa3ae2ab983129fb037999f264ba9a7",
              "url": "https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7",
              "tree": [
                {
                  "path": "file.rb",
                  "mode": "100644",
                  "type": "blob",
                  "size": 132,
                  "sha": "7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b",
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b"
                }
              ]
            }
          }
        ],
        "idName": "create-tree",
        "documentationUrl": "https://developer.github.com/v3/git/trees/#create-a-tree"
      }
    ],
    "gitignore": [
      {
        "name": "Listing available templates",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gitignore/templates",
        "previews": [],
        "params": [],
        "description": "List all templates available to pass as an option when [creating a repository](https://developer.github.com/v3/repos/#create).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              "Actionscript",
              "Android",
              "AppceleratorTitanium",
              "Autotools",
              "Bancha",
              "C",
              "C++"
            ]
          }
        ],
        "idName": "list-templates",
        "documentationUrl": "https://developer.github.com/v3/gitignore/#listing-available-templates"
      },
      {
        "name": "Get a single template",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/gitignore/templates/:name",
        "previews": [],
        "params": [
          {
            "name": "name",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "The API also allows fetching the source of a single template.\n\nUse the raw [media type](https://developer.github.com/v3/media/) to get the raw contents.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "name": "C",
              "source": "# Object files\n*.o\n\n# Libraries\n*.lib\n*.a\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n"
            }
          },
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "description": "Use the raw [media type](/v3/media/) to get the raw contents."
          }
        ],
        "idName": "get-template",
        "documentationUrl": "https://developer.github.com/v3/gitignore/#get-a-single-template"
      }
    ],
    "interactions": [
      {
        "name": "Get interaction restrictions for an organization",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/interaction-limits",
        "previews": [
          {
            "name": "sombra",
            "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Shows which group of GitHub users can interact with this organization and when the restriction expires. If there are no restrictions, you will see an empty response.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "limit": "collaborators_only",
              "origin": "organization",
              "expires_at": "2018-08-17T04:18:39Z"
            }
          }
        ],
        "idName": "get-restrictions-for-org",
        "documentationUrl": "https://developer.github.com/v3/interactions/orgs/#get-interaction-restrictions-for-an-organization"
      },
      {
        "name": "Add or update interaction restrictions for an organization",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/orgs/:org/interaction-limits",
        "previews": [
          {
            "name": "sombra",
            "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "limit",
            "type": "string",
            "description": "Specifies the group of GitHub users who can comment, open issues, or create pull requests in public repositories for the given organization. Must be one of: `existing_users`, `contributors_only`, or `collaborators_only`.",
            "required": true,
            "enum": [
              "existing_users",
              "contributors_only",
              "collaborators_only"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "limit": "collaborators_only"
          }
        ],
        "description": "Temporarily restricts interactions to certain GitHub users in any public repository in the given organization. You must be an organization owner to set these restrictions.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "limit": "collaborators_only",
              "origin": "organization",
              "expires_at": "2018-08-17T04:18:39Z"
            }
          }
        ],
        "idName": "add-or-update-restrictions-for-org",
        "documentationUrl": "https://developer.github.com/v3/interactions/orgs/#add-or-update-interaction-restrictions-for-an-organization"
      },
      {
        "name": "Remove interaction restrictions for an organization",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/interaction-limits",
        "previews": [
          {
            "name": "sombra",
            "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-restrictions-for-org",
        "documentationUrl": "https://developer.github.com/v3/interactions/orgs/#remove-interaction-restrictions-for-an-organization"
      },
      {
        "name": "Get interaction restrictions for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/interaction-limits",
        "previews": [
          {
            "name": "sombra",
            "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Shows which group of GitHub users can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "limit": "collaborators_only",
              "origin": "repository",
              "expires_at": "2018-08-17T04:18:39Z"
            }
          }
        ],
        "idName": "get-restrictions-for-repo",
        "documentationUrl": "https://developer.github.com/v3/interactions/repos/#get-interaction-restrictions-for-a-repository"
      },
      {
        "name": "Add or update interaction restrictions for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/interaction-limits",
        "previews": [
          {
            "name": "sombra",
            "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "limit",
            "type": "string",
            "description": "Specifies the group of GitHub users who can comment, open issues, or create pull requests for the given repository. Must be one of: `existing_users`, `contributors_only`, or `collaborators_only`.",
            "required": true,
            "enum": [
              "existing_users",
              "contributors_only",
              "collaborators_only"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "limit": "collaborators_only"
          }
        ],
        "description": "Temporarily restricts interactions to certain GitHub users within the given repository. You must have owner or admin access to set restrictions.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "limit": "collaborators_only",
              "origin": "repository",
              "expires_at": "2018-08-17T04:18:39Z"
            }
          }
        ],
        "idName": "add-or-update-restrictions-for-repo",
        "documentationUrl": "https://developer.github.com/v3/interactions/repos/#add-or-update-interaction-restrictions-for-a-repository"
      },
      {
        "name": "Remove interaction restrictions for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/interaction-limits",
        "previews": [
          {
            "name": "sombra",
            "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-restrictions-for-repo",
        "documentationUrl": "https://developer.github.com/v3/interactions/repos/#remove-interaction-restrictions-for-a-repository"
      }
    ],
    "issues": [
      {
        "method": "GET",
        "path": "/issues",
        "enabledForApps": false,
        "name": "List all issues assigned to the authenticated user across all visible repositories including owned repositories, member repositories, and organization repositories",
        "githubCloudOnly": false,
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "machine-man",
            "description": "**Note:** If an issue is opened via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
            "required": false
          },
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the issue payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "filter",
            "type": "string",
            "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
            "default": "assigned",
            "required": false,
            "enum": [
              "assigned",
              "created",
              "mentioned",
              "subscribed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "labels",
            "type": "string",
            "description": "A list of comma separated label names. Example: `bug,ui,@high`",
            "required": false,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated",
              "comments"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "The direction of the sort. Can be either `asc` or `desc`.",
            "default": "desc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDU6SXNzdWUx",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                "repository_url": "https://api.github.com/repos/octocat/Hello-World",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
                "html_url": "https://github.com/octocat/Hello-World/issues/1347",
                "number": 1347,
                "state": "open",
                "title": "Found a bug",
                "body": "I'm having a problem with this.",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "labels": [
                  {
                    "id": 208045946,
                    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                    "name": "bug",
                    "description": "Something isn't working",
                    "color": "f29513",
                    "default": true
                  }
                ],
                "assignee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "assignees": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "milestone": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                  "id": 1002604,
                  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                  "number": 1,
                  "state": "open",
                  "title": "v1.0",
                  "description": "Tracking milestone for version 1.0",
                  "creator": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "open_issues": 4,
                  "closed_issues": 8,
                  "created_at": "2011-04-10T20:09:31Z",
                  "updated_at": "2014-03-03T18:58:10Z",
                  "closed_at": "2013-02-12T13:22:01Z",
                  "due_on": "2012-10-09T23:39:01Z"
                },
                "locked": true,
                "active_lock_reason": "too heated",
                "comments": 0,
                "pull_request": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                  "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                  "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                  "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
                },
                "closed_at": null,
                "created_at": "2011-04-22T13:33:48Z",
                "updated_at": "2011-04-22T13:33:48Z",
                "repository": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              }
            ]
          }
        ],
        "idName": "list",
        "documentationUrl": "https://developer.github.com/v3/issues/#list-issues"
      },
      {
        "method": "GET",
        "path": "/user/issues",
        "enabledForApps": false,
        "name": "List all issues across owned and member repositories assigned to the authenticated user",
        "githubCloudOnly": false,
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "machine-man",
            "description": "**Note:** If an issue is opened via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
            "required": false
          },
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the issue payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "filter",
            "type": "string",
            "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
            "default": "assigned",
            "required": false,
            "enum": [
              "assigned",
              "created",
              "mentioned",
              "subscribed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "labels",
            "type": "string",
            "description": "A list of comma separated label names. Example: `bug,ui,@high`",
            "required": false,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated",
              "comments"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "The direction of the sort. Can be either `asc` or `desc`.",
            "default": "desc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDU6SXNzdWUx",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                "repository_url": "https://api.github.com/repos/octocat/Hello-World",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
                "html_url": "https://github.com/octocat/Hello-World/issues/1347",
                "number": 1347,
                "state": "open",
                "title": "Found a bug",
                "body": "I'm having a problem with this.",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "labels": [
                  {
                    "id": 208045946,
                    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                    "name": "bug",
                    "description": "Something isn't working",
                    "color": "f29513",
                    "default": true
                  }
                ],
                "assignee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "assignees": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "milestone": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                  "id": 1002604,
                  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                  "number": 1,
                  "state": "open",
                  "title": "v1.0",
                  "description": "Tracking milestone for version 1.0",
                  "creator": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "open_issues": 4,
                  "closed_issues": 8,
                  "created_at": "2011-04-10T20:09:31Z",
                  "updated_at": "2014-03-03T18:58:10Z",
                  "closed_at": "2013-02-12T13:22:01Z",
                  "due_on": "2012-10-09T23:39:01Z"
                },
                "locked": true,
                "active_lock_reason": "too heated",
                "comments": 0,
                "pull_request": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                  "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                  "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                  "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
                },
                "closed_at": null,
                "created_at": "2011-04-22T13:33:48Z",
                "updated_at": "2011-04-22T13:33:48Z",
                "repository": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              }
            ]
          }
        ],
        "idName": "list-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/issues/#list-issues"
      },
      {
        "method": "GET",
        "path": "/orgs/:org/issues",
        "enabledForApps": false,
        "name": "List all issues for a given organization assigned to the authenticated user",
        "githubCloudOnly": false,
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "machine-man",
            "description": "**Note:** If an issue is opened via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
            "required": false
          },
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the issue payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
            "default": "assigned",
            "required": false,
            "enum": [
              "assigned",
              "created",
              "mentioned",
              "subscribed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "labels",
            "type": "string",
            "description": "A list of comma separated label names. Example: `bug,ui,@high`",
            "required": false,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated",
              "comments"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "The direction of the sort. Can be either `asc` or `desc`.",
            "default": "desc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDU6SXNzdWUx",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                "repository_url": "https://api.github.com/repos/octocat/Hello-World",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
                "html_url": "https://github.com/octocat/Hello-World/issues/1347",
                "number": 1347,
                "state": "open",
                "title": "Found a bug",
                "body": "I'm having a problem with this.",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "labels": [
                  {
                    "id": 208045946,
                    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                    "name": "bug",
                    "description": "Something isn't working",
                    "color": "f29513",
                    "default": true
                  }
                ],
                "assignee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "assignees": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "milestone": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                  "id": 1002604,
                  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                  "number": 1,
                  "state": "open",
                  "title": "v1.0",
                  "description": "Tracking milestone for version 1.0",
                  "creator": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "open_issues": 4,
                  "closed_issues": 8,
                  "created_at": "2011-04-10T20:09:31Z",
                  "updated_at": "2014-03-03T18:58:10Z",
                  "closed_at": "2013-02-12T13:22:01Z",
                  "due_on": "2012-10-09T23:39:01Z"
                },
                "locked": true,
                "active_lock_reason": "too heated",
                "comments": 0,
                "pull_request": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                  "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                  "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                  "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
                },
                "closed_at": null,
                "created_at": "2011-04-22T13:33:48Z",
                "updated_at": "2011-04-22T13:33:48Z",
                "repository": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              }
            ]
          }
        ],
        "idName": "list-for-org",
        "documentationUrl": "https://developer.github.com/v3/issues/#list-issues"
      },
      {
        "name": "List issues for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "machine-man",
            "description": "**Note:** If an issue is opened via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
            "required": false
          },
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the issue payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "milestone",
            "type": "string",
            "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.",
            "required": false,
            "location": "query"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "assignee",
            "type": "string",
            "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.",
            "required": false,
            "location": "query"
          },
          {
            "name": "creator",
            "type": "string",
            "description": "The user that created the issue.",
            "required": false,
            "location": "query"
          },
          {
            "name": "mentioned",
            "type": "string",
            "description": "A user that's mentioned in the issue.",
            "required": false,
            "location": "query"
          },
          {
            "name": "labels",
            "type": "string",
            "description": "A list of comma separated label names. Example: `bug,ui,@high`",
            "required": false,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated",
              "comments"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "The direction of the sort. Can be either `asc` or `desc`.",
            "default": "desc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDU6SXNzdWUx",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                "repository_url": "https://api.github.com/repos/octocat/Hello-World",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
                "html_url": "https://github.com/octocat/Hello-World/issues/1347",
                "number": 1347,
                "state": "open",
                "title": "Found a bug",
                "body": "I'm having a problem with this.",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "labels": [
                  {
                    "id": 208045946,
                    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                    "name": "bug",
                    "description": "Something isn't working",
                    "color": "f29513",
                    "default": true
                  }
                ],
                "assignee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "assignees": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "milestone": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                  "id": 1002604,
                  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                  "number": 1,
                  "state": "open",
                  "title": "v1.0",
                  "description": "Tracking milestone for version 1.0",
                  "creator": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "open_issues": 4,
                  "closed_issues": 8,
                  "created_at": "2011-04-10T20:09:31Z",
                  "updated_at": "2014-03-03T18:58:10Z",
                  "closed_at": "2013-02-12T13:22:01Z",
                  "due_on": "2012-10-09T23:39:01Z"
                },
                "locked": true,
                "active_lock_reason": "too heated",
                "comments": 0,
                "pull_request": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                  "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                  "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                  "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
                },
                "closed_at": null,
                "created_at": "2011-04-22T13:33:48Z",
                "updated_at": "2011-04-22T13:33:48Z"
              }
            ]
          }
        ],
        "idName": "list-for-repo",
        "documentationUrl": "https://developer.github.com/v3/issues/#list-issues-for-a-repository"
      },
      {
        "name": "Get a single issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issue_number",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the issue payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "The API returns a [`301 Moved Permanently` status](https://developer.github.com/v3/#http-redirects) if the issue was [transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe to the [`issues`](https://developer.github.com/v3/activity/events/types/#issuesevent) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDU6SXNzdWUx",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "repository_url": "https://api.github.com/repos/octocat/Hello-World",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
              "html_url": "https://github.com/octocat/Hello-World/issues/1347",
              "number": 1347,
              "state": "open",
              "title": "Found a bug",
              "body": "I'm having a problem with this.",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "locked": true,
              "active_lock_reason": "too heated",
              "comments": 0,
              "pull_request": {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
              },
              "closed_at": null,
              "created_at": "2011-04-22T13:33:48Z",
              "updated_at": "2011-04-22T13:33:48Z",
              "closed_by": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/issues/#get-a-single-issue"
      },
      {
        "name": "Create an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/issues",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The title of the issue.",
            "required": true,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The contents of the issue.",
            "required": false,
            "location": "body"
          },
          {
            "name": "assignee",
            "type": "string",
            "description": "Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_",
            "required": false,
            "location": "body"
          },
          {
            "name": "milestone",
            "type": "integer",
            "description": "The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._",
            "required": false,
            "location": "body"
          },
          {
            "name": "labels",
            "type": "string[]",
            "description": "Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._",
            "required": false,
            "location": "body"
          },
          {
            "name": "assignees",
            "type": "string[]",
            "description": "Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "title": "Found a bug",
            "body": "I'm having a problem with this.",
            "assignees": [
              "octocat"
            ],
            "milestone": 1,
            "labels": [
              "bug"
            ]
          }
        ],
        "description": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDU6SXNzdWUx",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "repository_url": "https://api.github.com/repos/octocat/Hello-World",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
              "html_url": "https://github.com/octocat/Hello-World/issues/1347",
              "number": 1347,
              "state": "open",
              "title": "Found a bug",
              "body": "I'm having a problem with this.",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "locked": true,
              "active_lock_reason": "too heated",
              "comments": 0,
              "pull_request": {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
              },
              "closed_at": null,
              "created_at": "2011-04-22T13:33:48Z",
              "updated_at": "2011-04-22T13:33:48Z",
              "closed_by": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create",
        "documentationUrl": "https://developer.github.com/v3/issues/#create-an-issue"
      },
      {
        "name": "Edit an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/issues/:issue_number",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The title of the issue.",
            "required": false,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The contents of the issue.",
            "required": false,
            "location": "body"
          },
          {
            "name": "assignee",
            "type": "string",
            "description": "Login for the user that this issue should be assigned to. **This field is deprecated.**",
            "required": false,
            "location": "body"
          },
          {
            "name": "state",
            "type": "string",
            "description": "State of the issue. Either `open` or `closed`.",
            "required": false,
            "enum": [
              "open",
              "closed"
            ],
            "location": "body"
          },
          {
            "name": "milestone",
            "type": "integer",
            "description": "The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._",
            "required": false,
            "allowNull": true,
            "location": "body"
          },
          {
            "name": "labels",
            "type": "string[]",
            "description": "Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._",
            "required": false,
            "location": "body"
          },
          {
            "name": "assignees",
            "type": "string[]",
            "description": "Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
            "required": false,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "requests": [
          {
            "title": "Found a bug",
            "body": "I'm having a problem with this.",
            "assignees": [
              "octocat"
            ],
            "milestone": 1,
            "state": "open",
            "labels": [
              "bug"
            ]
          }
        ],
        "description": "Issue owners and users with push access can edit an issue.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDU6SXNzdWUx",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "repository_url": "https://api.github.com/repos/octocat/Hello-World",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
              "html_url": "https://github.com/octocat/Hello-World/issues/1347",
              "number": 1347,
              "state": "open",
              "title": "Found a bug",
              "body": "I'm having a problem with this.",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "locked": true,
              "active_lock_reason": "too heated",
              "comments": 0,
              "pull_request": {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
              },
              "closed_at": null,
              "created_at": "2011-04-22T13:33:48Z",
              "updated_at": "2011-04-22T13:33:48Z",
              "closed_by": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "update",
        "documentationUrl": "https://developer.github.com/v3/issues/#edit-an-issue"
      },
      {
        "name": "Lock an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/issues/:issue_number/lock",
        "previews": [
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "lock_reason",
            "type": "string",
            "description": "The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  \n\\* `off-topic`  \n\\* `too heated`  \n\\* `resolved`  \n\\* `spam`",
            "required": false,
            "enum": [
              "off-topic",
              "too heated",
              "resolved",
              "spam"
            ],
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "requests": [
          {
            "locked": true,
            "active_lock_reason": "too heated"
          }
        ],
        "description": "Users with push access can lock an issue or pull request's conversation.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "lock",
        "documentationUrl": "https://developer.github.com/v3/issues/#lock-an-issue"
      },
      {
        "name": "Unlock an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issue_number/lock",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "Users with push access can unlock an issue's conversation.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "unlock",
        "documentationUrl": "https://developer.github.com/v3/issues/#unlock-an-issue"
      },
      {
        "name": "List assignees",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/assignees",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-assignees",
        "documentationUrl": "https://developer.github.com/v3/issues/assignees/#list-assignees"
      },
      {
        "name": "Check assignee",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/assignees/:assignee",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "assignee",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            },
            "description": "If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned."
          },
          {
            "headers": {
              "status": "404 Not Found",
              "content-type": "application/json; charset=utf-8"
            },
            "description": "Otherwise a `404` status code is returned."
          }
        ],
        "idName": "check-assignee",
        "documentationUrl": "https://developer.github.com/v3/issues/assignees/#check-assignee"
      },
      {
        "name": "Add assignees to an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issue_number/assignees",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "assignees",
            "type": "string[]",
            "description": "Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._",
            "required": false,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "requests": [
          {
            "assignees": [
              "hubot",
              "other_user"
            ]
          }
        ],
        "description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.\n\nThis example adds two assignees to the existing `octocat` assignee.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDU6SXNzdWUx",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "repository_url": "https://api.github.com/repos/octocat/Hello-World",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
              "html_url": "https://github.com/octocat/Hello-World/issues/1347",
              "number": 1347,
              "state": "open",
              "title": "Found a bug",
              "body": "I'm having a problem with this.",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                {
                  "login": "hubot",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/hubot",
                  "html_url": "https://github.com/hubot",
                  "followers_url": "https://api.github.com/users/hubot/followers",
                  "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                  "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                  "organizations_url": "https://api.github.com/users/hubot/orgs",
                  "repos_url": "https://api.github.com/users/hubot/repos",
                  "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/hubot/received_events",
                  "type": "User",
                  "site_admin": true
                },
                {
                  "login": "other_user",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/other_user",
                  "html_url": "https://github.com/other_user",
                  "followers_url": "https://api.github.com/users/other_user/followers",
                  "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                  "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                  "organizations_url": "https://api.github.com/users/other_user/orgs",
                  "repos_url": "https://api.github.com/users/other_user/repos",
                  "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/other_user/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "locked": true,
              "active_lock_reason": "too heated",
              "comments": 0,
              "pull_request": {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
              },
              "closed_at": null,
              "created_at": "2011-04-22T13:33:48Z",
              "updated_at": "2011-04-22T13:33:48Z"
            }
          }
        ],
        "idName": "add-assignees",
        "documentationUrl": "https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue"
      },
      {
        "name": "Remove assignees from an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issue_number/assignees",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "assignees",
            "type": "string[]",
            "description": "Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._",
            "required": false,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "requests": [
          {
            "assignees": [
              "hubot",
              "other_user"
            ]
          }
        ],
        "description": "Removes one or more assignees from an issue.\n\nThis example removes two of three assignees, leaving the `octocat` assignee.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDU6SXNzdWUx",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "repository_url": "https://api.github.com/repos/octocat/Hello-World",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
              "html_url": "https://github.com/octocat/Hello-World/issues/1347",
              "number": 1347,
              "state": "open",
              "title": "Found a bug",
              "body": "I'm having a problem with this.",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "locked": true,
              "active_lock_reason": "too heated",
              "comments": 0,
              "pull_request": {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
              },
              "closed_at": null,
              "created_at": "2011-04-22T13:33:48Z",
              "updated_at": "2011-04-22T13:33:48Z"
            }
          }
        ],
        "idName": "remove-assignees",
        "documentationUrl": "https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue"
      },
      {
        "name": "List comments on an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issue_number/comments",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only comments updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "Issue Comments are ordered by ascending ID.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
                "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
                "body": "Me too",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-14T16:00:49Z",
                "updated_at": "2011-04-14T16:00:49Z"
              }
            ]
          }
        ],
        "idName": "list-comments",
        "documentationUrl": "https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue"
      },
      {
        "name": "List comments in a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Either `created` or `updated`.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "Either `asc` or `desc`. Ignored without the `sort` parameter.",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only comments updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          }
        ],
        "description": "By default, Issue Comments are ordered by ascending ID.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
                "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
                "body": "Me too",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-14T16:00:49Z",
                "updated_at": "2011-04-14T16:00:49Z"
              }
            ]
          }
        ],
        "idName": "list-comments-for-repo",
        "documentationUrl": "https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository"
      },
      {
        "name": "Get a single comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments/:comment_id",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** If an issue comment is created via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
            "required": false
          },
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
              "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
              "body": "Me too",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z"
            }
          }
        ],
        "idName": "get-comment",
        "documentationUrl": "https://developer.github.com/v3/issues/comments/#get-a-single-comment"
      },
      {
        "name": "Create a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issue_number/comments",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The contents of the comment.",
            "required": true,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "requests": [
          {
            "body": "Me too"
          }
        ],
        "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
              "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
              "body": "Me too",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z"
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-comment",
        "documentationUrl": "https://developer.github.com/v3/issues/comments/#create-a-comment"
      },
      {
        "name": "Edit a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/issues/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The contents of the comment.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "body": "Me too"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDEyOklzc3VlQ29tbWVudDE=",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/comments/1",
              "html_url": "https://github.com/octocat/Hello-World/issues/1347#issuecomment-1",
              "body": "Me too",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z"
            }
          }
        ],
        "idName": "update-comment",
        "documentationUrl": "https://developer.github.com/v3/issues/comments/#edit-a-comment"
      },
      {
        "name": "Delete a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-comment",
        "documentationUrl": "https://developer.github.com/v3/issues/comments/#delete-a-comment"
      },
      {
        "name": "List events for an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issue_number/events",
        "previews": [
          {
            "name": "starfox",
            "description": "Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](/changes/2018-09-05-project-card-events).\n\nTo receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n application/vnd.github.starfox-preview+json\n\n```",
            "required": false
          },
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDEwOklzc3VlRXZlbnQx",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
                "actor": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "event": "closed",
                "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "created_at": "2011-04-14T16:00:49Z"
              }
            ]
          }
        ],
        "idName": "list-events",
        "documentationUrl": "https://developer.github.com/v3/issues/events/#list-events-for-an-issue"
      },
      {
        "name": "List events for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/events",
        "previews": [
          {
            "name": "starfox",
            "description": "Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](/changes/2018-09-05-project-card-events).\n\nTo receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n application/vnd.github.starfox-preview+json\n\n```",
            "required": false
          },
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDEwOklzc3VlRXZlbnQx",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
                "actor": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "event": "closed",
                "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "created_at": "2011-04-14T16:00:49Z",
                "issue": {
                  "id": 1,
                  "node_id": "MDU6SXNzdWUx",
                  "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                  "repository_url": "https://api.github.com/repos/octocat/Hello-World",
                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
                  "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                  "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
                  "html_url": "https://github.com/octocat/Hello-World/issues/1347",
                  "number": 1347,
                  "state": "open",
                  "title": "Found a bug",
                  "body": "I'm having a problem with this.",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "labels": [
                    {
                      "id": 208045946,
                      "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                      "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                      "name": "bug",
                      "description": "Something isn't working",
                      "color": "f29513",
                      "default": true
                    }
                  ],
                  "assignee": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "assignees": [
                    {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    }
                  ],
                  "milestone": {
                    "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                    "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                    "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                    "id": 1002604,
                    "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                    "number": 1,
                    "state": "open",
                    "title": "v1.0",
                    "description": "Tracking milestone for version 1.0",
                    "creator": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    },
                    "open_issues": 4,
                    "closed_issues": 8,
                    "created_at": "2011-04-10T20:09:31Z",
                    "updated_at": "2014-03-03T18:58:10Z",
                    "closed_at": "2013-02-12T13:22:01Z",
                    "due_on": "2012-10-09T23:39:01Z"
                  },
                  "locked": true,
                  "active_lock_reason": "too heated",
                  "comments": 0,
                  "pull_request": {
                    "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                    "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                    "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                    "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
                  },
                  "closed_at": null,
                  "created_at": "2011-04-22T13:33:48Z",
                  "updated_at": "2011-04-22T13:33:48Z"
                }
              }
            ]
          }
        ],
        "idName": "list-events-for-repo",
        "documentationUrl": "https://developer.github.com/v3/issues/events/#list-events-for-a-repository"
      },
      {
        "name": "Get a single event",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/events/:event_id",
        "previews": [
          {
            "name": "starfox",
            "description": "Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](/changes/2018-09-05-project-card-events).\n\nTo receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n application/vnd.github.starfox-preview+json\n\n```",
            "required": false
          },
          {
            "name": "machine-man",
            "description": "**Note:** If an issue event is created via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
            "required": false
          },
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "event_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDEwOklzc3VlRXZlbnQx",
              "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
              "actor": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "event": "closed",
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "created_at": "2011-04-14T16:00:49Z",
              "issue": {
                "id": 1,
                "node_id": "MDU6SXNzdWUx",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                "repository_url": "https://api.github.com/repos/octocat/Hello-World",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events",
                "html_url": "https://github.com/octocat/Hello-World/issues/1347",
                "number": 1347,
                "state": "open",
                "title": "Found a bug",
                "body": "I'm having a problem with this.",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "labels": [
                  {
                    "id": 208045946,
                    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                    "name": "bug",
                    "description": "Something isn't working",
                    "color": "f29513",
                    "default": true
                  }
                ],
                "assignee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "assignees": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "milestone": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                  "id": 1002604,
                  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                  "number": 1,
                  "state": "open",
                  "title": "v1.0",
                  "description": "Tracking milestone for version 1.0",
                  "creator": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "open_issues": 4,
                  "closed_issues": 8,
                  "created_at": "2011-04-10T20:09:31Z",
                  "updated_at": "2014-03-03T18:58:10Z",
                  "closed_at": "2013-02-12T13:22:01Z",
                  "due_on": "2012-10-09T23:39:01Z"
                },
                "locked": true,
                "active_lock_reason": "too heated",
                "comments": 0,
                "pull_request": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                  "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                  "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                  "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch"
                },
                "closed_at": null,
                "created_at": "2011-04-22T13:33:48Z",
                "updated_at": "2011-04-22T13:33:48Z"
              }
            }
          }
        ],
        "idName": "get-event",
        "documentationUrl": "https://developer.github.com/v3/issues/events/#get-a-single-event"
      },
      {
        "name": "List all labels for this repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/labels",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 208045946,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                "name": "bug",
                "description": "Something isn't working",
                "color": "f29513",
                "default": true
              },
              {
                "id": 208045947,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
                "name": "enhancement",
                "description": "New feature or request",
                "color": "a2eeef",
                "default": false
              }
            ]
          }
        ],
        "idName": "list-labels-for-repo",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository"
      },
      {
        "name": "Get a single label",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/labels/:name",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 208045946,
              "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
              "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
              "name": "bug",
              "description": "Something isn't working",
              "color": "f29513",
              "default": true
            }
          }
        ],
        "idName": "get-label",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#get-a-single-label"
      },
      {
        "name": "Create a label",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/labels",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).",
            "required": true,
            "location": "body"
          },
          {
            "name": "color",
            "type": "string",
            "description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A short description of the label.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "bug",
            "description": "Something isn't working",
            "color": "f29513"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 208045946,
              "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
              "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
              "name": "bug",
              "description": "Something isn't working",
              "color": "f29513",
              "default": true
            }
          }
        ],
        "idName": "create-label",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#create-a-label"
      },
      {
        "name": "Update a label",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/labels/:current_name",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "current_name",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).",
            "required": false,
            "location": "body"
          },
          {
            "name": "color",
            "type": "string",
            "description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A short description of the label.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "bug :bug:",
            "description": "Small bug fix required",
            "color": "b01f26"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 208045946,
              "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
              "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:",
              "name": "bug :bug:",
              "description": "Small bug fix required",
              "color": "b01f26",
              "default": true
            }
          }
        ],
        "idName": "update-label",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#update-a-label"
      },
      {
        "name": "Delete a label",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/labels/:name",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-label",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#delete-a-label"
      },
      {
        "name": "List labels on an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issue_number/labels",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 208045946,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                "name": "bug",
                "description": "Something isn't working",
                "color": "f29513",
                "default": true
              },
              {
                "id": 208045947,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
                "name": "enhancement",
                "description": "New feature or request",
                "color": "a2eeef",
                "default": false
              }
            ]
          }
        ],
        "idName": "list-labels-on-issue",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue"
      },
      {
        "name": "Add labels to an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issue_number/labels",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "labels",
            "type": "string[]",
            "description": "The name of the label to add to the issue. Must contain at least one label. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key.",
            "required": true,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "requests": [
          {
            "labels": [
              "bug",
              "enhancement"
            ]
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 208045946,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                "name": "bug",
                "description": "Something isn't working",
                "color": "f29513",
                "default": true
              },
              {
                "id": 208045947,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
                "name": "enhancement",
                "description": "New feature or request",
                "color": "a2eeef",
                "default": false
              }
            ]
          }
        ],
        "idName": "add-labels",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue"
      },
      {
        "name": "Remove a label from an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issue_number/labels/:name",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 208045946,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                "name": "bug",
                "description": "Something isn't working",
                "color": "f29513",
                "default": true
              }
            ]
          }
        ],
        "idName": "remove-label",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue"
      },
      {
        "name": "Replace all labels for an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/issues/:issue_number/labels",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "labels",
            "type": "string[]",
            "description": "The names of the labels to add to the issue. You can pass an empty array to remove all labels. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key.",
            "required": false,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "requests": [
          {
            "labels": [
              "bug",
              "enhancement"
            ]
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 208045946,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                "name": "bug",
                "description": "Something isn't working",
                "color": "f29513",
                "default": true
              },
              {
                "id": 208045947,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
                "name": "enhancement",
                "description": "New feature or request",
                "color": "a2eeef",
                "default": false
              }
            ]
          }
        ],
        "idName": "replace-labels",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue"
      },
      {
        "name": "Remove all labels from an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/issues/:issue_number/labels",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-labels",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue"
      },
      {
        "name": "Get labels for every issue in a milestone",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones/:milestone_number/labels",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "milestone_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"milestone_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "milestone_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 208045946,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                "name": "bug",
                "description": "Something isn't working",
                "color": "f29513",
                "default": true
              },
              {
                "id": 208045947,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDc=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/enhancement",
                "name": "enhancement",
                "description": "New feature or request",
                "color": "a2eeef",
                "default": false
              }
            ]
          }
        ],
        "idName": "list-labels-for-milestone",
        "documentationUrl": "https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone"
      },
      {
        "name": "List milestones for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "The state of the milestone. Either `open`, `closed`, or `all`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "What to sort results by. Either `due_on` or `completeness`.",
            "default": "due_on",
            "required": false,
            "enum": [
              "due_on",
              "completeness"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "The direction of the sort. Either `asc` or `desc`.",
            "default": "asc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              }
            ]
          }
        ],
        "idName": "list-milestones-for-repo",
        "documentationUrl": "https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository"
      },
      {
        "name": "Get a single milestone",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/milestones/:milestone_number",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "milestone_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"milestone_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "milestone_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
              "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
              "id": 1002604,
              "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
              "number": 1,
              "state": "open",
              "title": "v1.0",
              "description": "Tracking milestone for version 1.0",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "open_issues": 4,
              "closed_issues": 8,
              "created_at": "2011-04-10T20:09:31Z",
              "updated_at": "2014-03-03T18:58:10Z",
              "closed_at": "2013-02-12T13:22:01Z",
              "due_on": "2012-10-09T23:39:01Z"
            }
          }
        ],
        "idName": "get-milestone",
        "documentationUrl": "https://developer.github.com/v3/issues/milestones/#get-a-single-milestone"
      },
      {
        "name": "Create a milestone",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/milestones",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The title of the milestone.",
            "required": true,
            "location": "body"
          },
          {
            "name": "state",
            "type": "string",
            "description": "The state of the milestone. Either `open` or `closed`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed"
            ],
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A description of the milestone.",
            "required": false,
            "location": "body"
          },
          {
            "name": "due_on",
            "type": "string",
            "description": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "title": "v1.0",
            "state": "open",
            "description": "Tracking milestone for version 1.0",
            "due_on": "2012-10-09T23:39:01Z"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
              "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
              "id": 1002604,
              "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
              "number": 1,
              "state": "open",
              "title": "v1.0",
              "description": "Tracking milestone for version 1.0",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "open_issues": 4,
              "closed_issues": 8,
              "created_at": "2011-04-10T20:09:31Z",
              "updated_at": "2014-03-03T18:58:10Z",
              "closed_at": "2013-02-12T13:22:01Z",
              "due_on": "2012-10-09T23:39:01Z"
            }
          }
        ],
        "idName": "create-milestone",
        "documentationUrl": "https://developer.github.com/v3/issues/milestones/#create-a-milestone"
      },
      {
        "name": "Update a milestone",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/milestones/:milestone_number",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "milestone_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The title of the milestone.",
            "required": false,
            "location": "body"
          },
          {
            "name": "state",
            "type": "string",
            "description": "The state of the milestone. Either `open` or `closed`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed"
            ],
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A description of the milestone.",
            "required": false,
            "location": "body"
          },
          {
            "name": "due_on",
            "type": "string",
            "description": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"milestone_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "milestone_number"
              }
            }
          }
        ],
        "requests": [
          {
            "title": "v1.0",
            "state": "open",
            "description": "Tracking milestone for version 1.0",
            "due_on": "2012-10-09T23:39:01Z"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
              "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
              "id": 1002604,
              "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
              "number": 1,
              "state": "open",
              "title": "v1.0",
              "description": "Tracking milestone for version 1.0",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "open_issues": 4,
              "closed_issues": 8,
              "created_at": "2011-04-10T20:09:31Z",
              "updated_at": "2014-03-03T18:58:10Z",
              "closed_at": "2013-02-12T13:22:01Z",
              "due_on": "2012-10-09T23:39:01Z"
            }
          }
        ],
        "idName": "update-milestone",
        "documentationUrl": "https://developer.github.com/v3/issues/milestones/#update-a-milestone"
      },
      {
        "name": "Delete a milestone",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/milestones/:milestone_number",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "milestone_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"milestone_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "milestone_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-milestone",
        "documentationUrl": "https://developer.github.com/v3/issues/milestones/#delete-a-milestone"
      },
      {
        "name": "List events for an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issue_number/timeline",
        "previews": [
          {
            "name": "mockingbird",
            "description": "The API to get issue timeline events is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-23-timeline-preview-api/) for full details. To access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mockingbird-preview\n\n```",
            "required": true
          },
          {
            "name": "starfox",
            "description": "Project card details are now shown in REST API v3 responses for project-related issue and timeline events. This feature is now available for developers to preview. For details, see the [blog post](/changes/2018-09-05-project-card-events).\n\nTo receive the `project_card` attribute, project boards must be [enabled](https://help.github.com/articles/disabling-project-boards-in-a-repository) for a repository, and you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n application/vnd.github.starfox-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDEwOklzc3VlRXZlbnQx",
                "url": "https://api.github.com/repos/octocat/Hello-World/issues/events/1",
                "actor": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "event": "closed",
                "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "commit_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "created_at": "2011-04-14T16:00:49Z"
              }
            ]
          }
        ],
        "idName": "list-events-for-timeline",
        "documentationUrl": "https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue"
      }
    ],
    "licenses": [
      {
        "name": "List commonly used licenses",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/licenses",
        "previews": [],
        "params": [],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "key": "mit",
                "name": "MIT License",
                "spdx_id": "MIT",
                "url": "https://api.github.com/licenses/mit",
                "node_id": "MDc6TGljZW5zZW1pdA=="
              },
              {
                "key": "lgpl-3.0",
                "name": "GNU Lesser General Public License v3.0",
                "spdx_id": "LGPL-3.0",
                "url": "https://api.github.com/licenses/lgpl-3.0"
              },
              {
                "key": "mpl-2.0",
                "name": "Mozilla Public License 2.0",
                "spdx_id": "MPL-2.0",
                "url": "https://api.github.com/licenses/mpl-2.0"
              },
              {
                "key": "agpl-3.0",
                "name": "GNU Affero General Public License v3.0",
                "spdx_id": "AGPL-3.0",
                "url": "https://api.github.com/licenses/agpl-3.0"
              },
              {
                "key": "unlicense",
                "name": "The Unlicense",
                "spdx_id": "Unlicense",
                "url": "https://api.github.com/licenses/unlicense"
              },
              {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
              },
              {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
              }
            ]
          }
        ],
        "idName": "list-commonly-used",
        "documentationUrl": "https://developer.github.com/v3/licenses/#list-commonly-used-licenses"
      },
      {
        "name": "List all licenses",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/licenses",
        "previews": [],
        "params": [],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "key": "mit",
                "name": "MIT License",
                "spdx_id": "MIT",
                "url": "https://api.github.com/licenses/mit",
                "node_id": "MDc6TGljZW5zZW1pdA=="
              },
              {
                "key": "lgpl-3.0",
                "name": "GNU Lesser General Public License v3.0",
                "spdx_id": "LGPL-3.0",
                "url": "https://api.github.com/licenses/lgpl-3.0"
              },
              {
                "key": "mpl-2.0",
                "name": "Mozilla Public License 2.0",
                "spdx_id": "MPL-2.0",
                "url": "https://api.github.com/licenses/mpl-2.0"
              },
              {
                "key": "agpl-3.0",
                "name": "GNU Affero General Public License v3.0",
                "spdx_id": "AGPL-3.0",
                "url": "https://api.github.com/licenses/agpl-3.0"
              },
              {
                "key": "unlicense",
                "name": "The Unlicense",
                "spdx_id": "Unlicense",
                "url": "https://api.github.com/licenses/unlicense"
              },
              {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
              },
              {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
              }
            ]
          }
        ],
        "idName": "list",
        "documentationUrl": "https://developer.github.com/v3/licenses/#list-commonly-used-licenses",
        "deprecated": {
          "date": "2019-03-05",
          "message": "\"List all licenses\" renamed to \"List commonly used licenses\"",
          "before": {
            "idName": "list"
          },
          "after": {
            "idName": "list-commonly-used"
          }
        }
      },
      {
        "name": "Get an individual license",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/licenses/:license",
        "previews": [],
        "params": [
          {
            "name": "license",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "key": "mit",
              "name": "MIT License",
              "spdx_id": "MIT",
              "url": "https://api.github.com/licenses/mit",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "http://choosealicense.com/licenses/mit/",
              "description": "A permissive license that is short and to the point. It lets people do anything with your code with proper attribution and without warranty.",
              "implementation": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
              "permissions": [
                "commercial-use",
                "modifications",
                "distribution",
                "sublicense",
                "private-use"
              ],
              "conditions": [
                "include-copyright"
              ],
              "limitations": [
                "no-liability"
              ],
              "body": "\n\nThe MIT License (MIT)\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
              "featured": true
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/licenses/#get-an-individual-license"
      },
      {
        "name": "Get the contents of a repository's license",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/license",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [the repository contents API](https://developer.github.com/v3/repos/contents/#get-contents), this method also supports [custom media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for retrieving the raw license content or rendered license HTML.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "name": "LICENSE",
              "path": "LICENSE",
              "sha": "401c59dcc4570b954dd6d345e76199e1f4e76266",
              "size": 1077,
              "url": "https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master",
              "html_url": "https://github.com/benbalter/gman/blob/master/LICENSE",
              "git_url": "https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266",
              "download_url": "https://raw.githubusercontent.com/benbalter/gman/master/LICENSE?lab=true",
              "type": "file",
              "content": "VGhlIE1JVCBMaWNlbnNlIChNSVQpCgpDb3B5cmlnaHQgKGMpIDIwMTMgQmVu\nIEJhbHRlcgoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv\nZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZgp0\naGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmls\nZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbgp0aGUgU29mdHdhcmUg\nd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh\ndGlvbiB0aGUgcmlnaHRzIHRvCnVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwg\ncHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwg\nY29waWVzIG9mCnRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25z\nIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywK\nc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJv\ndmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGlj\nZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1YnN0YW50\naWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJ\nUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBL\nSU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJ\nTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBG\nSVRORVNTCkZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklO\nR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUgpDT1BZ\nUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdF\nUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIKSU4gQU4gQUNUSU9OIE9G\nIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBP\nVVQgT0YgT1IgSU4KQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBU\nSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4K\n",
              "encoding": "base64",
              "_links": {
                "self": "https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master",
                "git": "https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266",
                "html": "https://github.com/benbalter/gman/blob/master/LICENSE"
              },
              "license": {
                "key": "mit",
                "name": "MIT License",
                "spdx_id": "MIT",
                "url": "https://api.github.com/licenses/mit",
                "node_id": "MDc6TGljZW5zZW1pdA=="
              }
            }
          }
        ],
        "idName": "get-for-repo",
        "documentationUrl": "https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license"
      }
    ],
    "markdown": [
      {
        "name": "Render an arbitrary Markdown document",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/markdown",
        "previews": [],
        "params": [
          {
            "name": "text",
            "type": "string",
            "description": "The Markdown text to render in HTML. Markdown content must be 400 KB or less.",
            "required": true,
            "location": "body"
          },
          {
            "name": "mode",
            "type": "string",
            "description": "The rendering mode. Can be either:  \n\\* `markdown` to render a document in plain Markdown, just like README.md files are rendered.  \n\\* `gfm` to render a document in [GitHub Flavored Markdown](https://github.github.com/gfm/), which creates links for user mentions as well as references to SHA-1 hashes, issues, and pull requests.",
            "default": "markdown",
            "required": false,
            "enum": [
              "markdown",
              "gfm"
            ],
            "location": "body"
          },
          {
            "name": "context",
            "type": "string",
            "description": "The repository context to use when creating references in `gfm` mode. Omit this parameter when using `markdown` mode.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "text": "Hello world github/linguist#1 **cool**, and #1!",
            "mode": "gfm",
            "context": "github/gollum"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "render",
        "documentationUrl": "https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document"
      },
      {
        "name": "Render a Markdown document in raw mode",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/markdown/raw",
        "previews": [],
        "params": [
          {
            "mapTo": "input",
            "name": "data",
            "type": "string",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "description": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "headers": {
          "content-type": "text/plain; charset=utf-8"
        },
        "idName": "render-raw",
        "documentationUrl": "https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode"
      }
    ],
    "meta": [
      {
        "name": "Get",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/meta",
        "previews": [],
        "params": [],
        "description": "This endpoint provides a list of GitHub's IP addresses. For more information, see \"[About GitHub's IP addresses](https://help.github.com/articles/about-github-s-ip-addresses/).\"",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "verifiable_password_authentication": true,
              "hooks": [
                "127.0.0.1/32"
              ],
              "git": [
                "127.0.0.1/32"
              ],
              "pages": [
                "192.30.252.153/32",
                "192.30.252.154/32"
              ],
              "importer": [
                "54.158.161.132",
                "54.226.70.38"
              ]
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/meta/#meta"
      }
    ],
    "migrations": [
      {
        "name": "Start an organization migration",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/orgs/:org/migrations",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repositories",
            "type": "string[]",
            "description": "A list of arrays indicating which repositories should be migrated.",
            "required": true,
            "location": "body"
          },
          {
            "name": "lock_repositories",
            "type": "boolean",
            "description": "Indicates whether repositories should be locked (to prevent manipulation) while migrating data.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "exclude_attachments",
            "type": "boolean",
            "description": "Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).",
            "default": false,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "repositories": [
              "github/Hello-World"
            ],
            "lock_repositories": true
          }
        ],
        "description": "Initiates the generation of a migration archive.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 79,
              "owner": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              },
              "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
              "state": "pending",
              "lock_repositories": true,
              "exclude_attachments": false,
              "repositories": [
                {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              ],
              "url": "https://api.github.com/orgs/octo-org/migrations/79",
              "created_at": "2015-07-06T15:33:38-07:00",
              "updated_at": "2015-07-06T15:33:38-07:00"
            }
          }
        ],
        "idName": "start-for-org",
        "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#start-an-organization-migration"
      },
      {
        "name": "Get a list of organization migrations",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/migrations",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the most recent migrations.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 79,
                "owner": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                "state": "pending",
                "lock_repositories": true,
                "exclude_attachments": false,
                "repositories": [
                  {
                    "id": 1296269,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                    "name": "Hello-World",
                    "full_name": "octocat/Hello-World",
                    "owner": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    },
                    "private": false,
                    "html_url": "https://github.com/octocat/Hello-World",
                    "description": "This your first repo!",
                    "fork": false,
                    "url": "https://api.github.com/repos/octocat/Hello-World",
                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                    "git_url": "git:github.com/octocat/Hello-World.git",
                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                    "clone_url": "https://github.com/octocat/Hello-World.git",
                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                    "homepage": "https://github.com",
                    "language": null,
                    "forks_count": 9,
                    "stargazers_count": 80,
                    "watchers_count": 80,
                    "size": 108,
                    "default_branch": "master",
                    "open_issues_count": 0,
                    "topics": [
                      "octocat",
                      "atom",
                      "electron",
                      "api"
                    ],
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_downloads": true,
                    "archived": false,
                    "disabled": false,
                    "pushed_at": "2011-01-26T19:06:43Z",
                    "created_at": "2011-01-26T19:01:12Z",
                    "updated_at": "2011-01-26T19:14:43Z",
                    "permissions": {
                      "admin": false,
                      "push": false,
                      "pull": true
                    },
                    "allow_rebase_merge": true,
                    "allow_squash_merge": true,
                    "allow_merge_commit": true,
                    "subscribers_count": 42,
                    "network_count": 0
                  }
                ],
                "url": "https://api.github.com/orgs/octo-org/migrations/79",
                "created_at": "2015-07-06T15:33:38-07:00",
                "updated_at": "2015-07-06T15:33:38-07:00"
              }
            ]
          }
        ],
        "idName": "list-for-org",
        "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#get-a-list-of-organization-migrations"
      },
      {
        "name": "Get the status of an organization migration",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/migrations/:migration_id",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "migration_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Fetches the status of a migration.\n\nThe `state` of a migration can be one of the following values:\n\n*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 79,
              "owner": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              },
              "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
              "state": "exported",
              "lock_repositories": true,
              "exclude_attachments": false,
              "repositories": [
                {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              ],
              "url": "https://api.github.com/orgs/octo-org/migrations/79",
              "created_at": "2015-07-06T15:33:38-07:00",
              "updated_at": "2015-07-06T15:33:38-07:00"
            },
            "description": "*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed."
          }
        ],
        "idName": "get-status-for-org",
        "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#get-the-status-of-an-organization-migration"
      },
      {
        "name": "Download an organization migration archive",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/migrations/:migration_id/archive",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "migration_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Fetches the URL to a migration archive.\n\n",
        "responses": [
          {
            "headers": {
              "status": "302 Found",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "get-archive-for-org",
        "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#download-an-organization-migration-archive"
      },
      {
        "name": "Delete an organization migration archive",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/migrations/:migration_id/archive",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "migration_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Deletes a previous migration archive. Migration archives are automatically deleted after seven days.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-archive-for-org",
        "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#delete-an-organization-migration-archive"
      },
      {
        "name": "Unlock an organization repository",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/migrations/:migration_id/repos/:repo_name/lock",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "migration_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo_name",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://developer.github.com/v3/repos/#delete-a-repository) when the migration is complete and you no longer need the source data.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "unlock-repo-for-org",
        "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#unlock-an-organization-repository"
      },
      {
        "name": "Start an import",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/import",
        "previews": [
          {
            "name": "barred-rock",
            "description": "The source import APIs are currently in public preview. See the [source import](/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "vcs_url",
            "type": "string",
            "description": "The URL of the originating repository.",
            "required": true,
            "location": "body"
          },
          {
            "name": "vcs",
            "type": "string",
            "description": "The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.",
            "required": false,
            "enum": [
              "subversion",
              "git",
              "mercurial",
              "tfvc"
            ],
            "location": "body"
          },
          {
            "name": "vcs_username",
            "type": "string",
            "description": "If authentication is required, the username to provide to `vcs_url`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "vcs_password",
            "type": "string",
            "description": "If authentication is required, the password to provide to `vcs_url`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "tfvc_project",
            "type": "string",
            "description": "For a tfvc import, the name of the project that is being imported.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "vcs": "subversion",
            "vcs_url": "http://svn.mycompany.com/svn/myproject",
            "vcs_username": "octocat",
            "vcs_password": "secret"
          }
        ],
        "description": "Start a source import to a GitHub repository using GitHub Importer.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "vcs": "subversion",
              "use_lfs": "undecided",
              "vcs_url": "http://svn.mycompany.com/svn/myproject",
              "status": "importing",
              "status_text": "Importing...",
              "has_large_files": false,
              "large_files_size": 0,
              "large_files_count": 0,
              "authors_count": 0,
              "percent": 42,
              "commit_count": 1042,
              "url": "https://api.github.com/repos/octocat/socm/import",
              "html_url": "https://import.github.com/octocat/socm/import",
              "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
              "repository_url": "https://api.github.com/repos/octocat/socm"
            }
          }
        ],
        "idName": "start-import",
        "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#start-an-import"
      },
      {
        "name": "Get import progress",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/import",
        "previews": [
          {
            "name": "barred-rock",
            "description": "The source import APIs are currently in public preview. See the [source import](/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "requests": [
          [
            {
              "vcs": "tfvc",
              "tfvc_project": "project0",
              "human_name": "project0 (tfs)"
            },
            {
              "vcs": "tfvc",
              "tfvc_project": "project1",
              "human_name": "project1 (tfs)"
            },
            {
              "vcs": "tfvc",
              "tfvc_project": "project2",
              "human_name": "project2 (tfs)"
            },
            {
              "vcs": "tfvc",
              "tfvc_project": "project3",
              "human_name": "project3 (tfs)"
            }
          ]
        ],
        "description": "View the progress of an import.\n\n**Import status**\n\nThis section includes details about the possible values of the `status` field of the Import Progress response.\n\nAn import that does not have errors will progress through these steps:\n\n*   `detecting` - the \"detection\" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.\n*   `importing` - the \"raw\" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).\n*   `mapping` - the \"rewrite\" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.\n*   `pushing` - the \"push\" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is \"Writing objects\".\n*   `complete` - the import is complete, and the repository is ready on GitHub.\n\nIf there are problems, you will see one of these in the `status` field:\n\n*   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update Existing Import](#update-existing-import) section.\n*   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://github.com/contact) for more information.\n*   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update Existing Import](#update-existing-import) section.\n*   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](#cancel-an-import) and [retry](#start-an-import) with the correct URL.\n*   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update Existing Import](#update-existing-import) section.\n\n**The project_choices field**\n\nWhen multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.\n\n**Git LFS related fields**\n\nThis section includes details about Git LFS related fields that may be present in the Import Progress response.\n\n*   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.\n*   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.\n*   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.\n*   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a \"Get Large Files\" request.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "vcs": "subversion",
              "use_lfs": "opt_in",
              "vcs_url": "http://svn.mycompany.com/svn/myproject",
              "status": "complete",
              "status_text": "Done",
              "has_large_files": true,
              "large_files_size": 132331036,
              "large_files_count": 1,
              "authors_count": 4,
              "url": "https://api.github.com/repos/octocat/socm/import",
              "html_url": "https://import.github.com/octocat/socm/import",
              "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
              "repository_url": "https://api.github.com/repos/octocat/socm"
            }
          }
        ],
        "idName": "get-import-progress",
        "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#get-import-progress"
      },
      {
        "name": "Update existing import",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/import",
        "previews": [
          {
            "name": "barred-rock",
            "description": "The source import APIs are currently in public preview. See the [source import](/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "vcs_username",
            "type": "string",
            "description": "The username to provide to the originating repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "vcs_password",
            "type": "string",
            "description": "The password to provide to the originating repository.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "vcs_username": "octocat",
            "vcs_password": "secret"
          }
        ],
        "description": "An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API request. If no parameters are provided, the import will be restarted.\n\nSome servers (e.g. TFS servers) can have several projects at a single URL. In those cases the import progress will have the status `detection_found_multiple` and the Import Progress response will include a `project_choices` array. You can select the project to import by providing one of the objects in the `project_choices` array in the update request.\n\nThe following example demonstrates the workflow for updating an import with \"project1\" as the project choice. Given a `project_choices` array like such:\n\nTo restart an import, no parameters are provided in the update request.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "vcs": "subversion",
              "use_lfs": "undecided",
              "vcs_url": "http://svn.mycompany.com/svn/myproject",
              "status": "detecting",
              "url": "https://api.github.com/repos/octocat/socm/import",
              "html_url": "https://import.github.com/octocat/socm/import",
              "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
              "repository_url": "https://api.github.com/repos/octocat/socm"
            }
          }
        ],
        "idName": "update-import",
        "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#update-existing-import"
      },
      {
        "name": "Get commit authors",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/import/authors",
        "previews": [
          {
            "name": "barred-rock",
            "description": "The source import APIs are currently in public preview. See the [source import](/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only authors found after this id are returned. Provide the highest author ID you've seen so far. New authors may be added to the list at any point while the importer is performing the `raw` step.",
            "required": false,
            "location": "query"
          }
        ],
        "description": "Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.\n\nThis API method and the \"Map a commit author\" method allow you to provide correct Git author information.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 2268557,
                "remote_id": "nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                "remote_name": "nobody",
                "email": "hubot@github.com",
                "name": "Hubot",
                "url": "https://api.github.com/repos/octocat/socm/import/authors/2268557",
                "import_url": "https://api.github.com/repos/octocat/socm/import"
              },
              {
                "id": 2268558,
                "remote_id": "svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                "remote_name": "svner",
                "email": "svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                "name": "svner",
                "url": "https://api.github.com/repos/octocat/socm/import/authors/2268558",
                "import_url": "https://api.github.com/repos/octocat/socm/import"
              },
              {
                "id": 2268559,
                "remote_id": "svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                "remote_name": "svner@example.com",
                "email": "svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                "name": "svner@example.com",
                "url": "https://api.github.com/repos/octocat/socm/import/authors/2268559",
                "import_url": "https://api.github.com/repos/octocat/socm/import"
              }
            ]
          }
        ],
        "idName": "get-commit-authors",
        "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#get-commit-authors"
      },
      {
        "name": "Map a commit author",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/import/authors/:author_id",
        "previews": [
          {
            "name": "barred-rock",
            "description": "The source import APIs are currently in public preview. See the [source import](/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "author_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "email",
            "type": "string",
            "description": "The new Git author email.",
            "required": false,
            "location": "body"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The new Git author name.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "email": "hubot@github.com",
            "name": "Hubot the Robot"
          }
        ],
        "description": "Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 2268557,
              "remote_id": "nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
              "remote_name": "nobody",
              "email": "hubot@github.com",
              "name": "Hubot",
              "url": "https://api.github.com/repos/octocat/socm/import/authors/2268557",
              "import_url": "https://api.github.com/repos/octocat/socm/import"
            }
          }
        ],
        "idName": "map-commit-author",
        "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#map-a-commit-author"
      },
      {
        "name": "Set Git LFS preference",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/import/lfs",
        "previews": [
          {
            "name": "barred-rock",
            "description": "The source import APIs are currently in public preview. See the [source import](/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "use_lfs",
            "type": "string",
            "description": "Can be one of `opt_in` (large files will be stored using Git LFS) or `opt_out` (large files will be removed during the import).",
            "required": true,
            "enum": [
              "opt_in",
              "opt_out"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "use_lfs": "opt_in"
          }
        ],
        "description": "You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "vcs": "subversion",
              "use_lfs": "opt_in",
              "vcs_url": "http://svn.mycompany.com/svn/myproject",
              "status": "complete",
              "status_text": "Done",
              "has_large_files": true,
              "large_files_size": 132331036,
              "large_files_count": 1,
              "authors_count": 4,
              "url": "https://api.github.com/repos/octocat/socm/import",
              "html_url": "https://import.github.com/octocat/socm/import",
              "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
              "repository_url": "https://api.github.com/repos/octocat/socm"
            }
          }
        ],
        "idName": "set-lfs-preference",
        "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#set-git-lfs-preference"
      },
      {
        "name": "Get large files",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/import/large_files",
        "previews": [
          {
            "name": "barred-rock",
            "description": "The source import APIs are currently in public preview. See the [source import](/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "List files larger than 100MB found during the import",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "ref_name": "refs/heads/master",
                "path": "foo/bar/1",
                "oid": "d3d9446802a44259755d38e6d163e820",
                "size": 10485760
              },
              {
                "ref_name": "refs/heads/master",
                "path": "foo/bar/2",
                "oid": "6512bd43d9caa6e02c990b0a82652dca",
                "size": 11534336
              },
              {
                "ref_name": "refs/heads/master",
                "path": "foo/bar/3",
                "oid": "c20ad4d76fe97759aa27a0c99bff6710",
                "size": 12582912
              }
            ]
          }
        ],
        "idName": "get-large-files",
        "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#get-large-files"
      },
      {
        "name": "Cancel an import",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/import",
        "previews": [
          {
            "name": "barred-rock",
            "description": "The source import APIs are currently in public preview. See the [source import](/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Stop an import for a repository.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "cancel-import",
        "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#cancel-an-import"
      },
      {
        "name": "Start a user migration",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/user/migrations",
        "previews": [],
        "params": [
          {
            "name": "repositories",
            "type": "string[]",
            "description": "An array of repositories to include in the migration.",
            "required": true,
            "location": "body"
          },
          {
            "name": "lock_repositories",
            "type": "boolean",
            "description": "Locks the `repositories` to prevent changes during the migration when set to `true`.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "exclude_attachments",
            "type": "boolean",
            "description": "Does not include attachments uploaded to GitHub.com in the migration data when set to `true`. Excluding attachments will reduce the migration archive file size.",
            "default": false,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "repositories": [
              "octocat/Hello-World"
            ],
            "lock_repositories": true
          }
        ],
        "description": "Initiates the generation of a user migration archive.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 79,
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
              "state": "pending",
              "lock_repositories": true,
              "exclude_attachments": false,
              "repositories": [
                {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              ],
              "url": "https://api.github.com/orgs/octo-org/migrations/79",
              "created_at": "2015-07-06T15:33:38-07:00",
              "updated_at": "2015-07-06T15:33:38-07:00"
            }
          }
        ],
        "idName": "start-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/migrations/users/#start-a-user-migration"
      },
      {
        "name": "Get a list of user migrations",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/migrations",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists all migrations a user has started.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 79,
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                "state": "pending",
                "lock_repositories": true,
                "exclude_attachments": false,
                "repositories": [
                  {
                    "id": 1296269,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                    "name": "Hello-World",
                    "full_name": "octocat/Hello-World",
                    "owner": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    },
                    "private": false,
                    "html_url": "https://github.com/octocat/Hello-World",
                    "description": "This your first repo!",
                    "fork": false,
                    "url": "https://api.github.com/repos/octocat/Hello-World",
                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                    "git_url": "git:github.com/octocat/Hello-World.git",
                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                    "clone_url": "https://github.com/octocat/Hello-World.git",
                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                    "homepage": "https://github.com",
                    "language": null,
                    "forks_count": 9,
                    "stargazers_count": 80,
                    "watchers_count": 80,
                    "size": 108,
                    "default_branch": "master",
                    "open_issues_count": 0,
                    "topics": [
                      "octocat",
                      "atom",
                      "electron",
                      "api"
                    ],
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_downloads": true,
                    "archived": false,
                    "disabled": false,
                    "pushed_at": "2011-01-26T19:06:43Z",
                    "created_at": "2011-01-26T19:01:12Z",
                    "updated_at": "2011-01-26T19:14:43Z",
                    "permissions": {
                      "admin": false,
                      "push": false,
                      "pull": true
                    },
                    "allow_rebase_merge": true,
                    "allow_squash_merge": true,
                    "allow_merge_commit": true,
                    "subscribers_count": 42,
                    "network_count": 0
                  }
                ],
                "url": "https://api.github.com/orgs/octo-org/migrations/79",
                "created_at": "2015-07-06T15:33:38-07:00",
                "updated_at": "2015-07-06T15:33:38-07:00"
              }
            ]
          }
        ],
        "idName": "list-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/migrations/users/#get-a-list-of-user-migrations"
      },
      {
        "name": "Get the status of a user migration",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/migrations/:migration_id",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "migration_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:\n\n*   `pending` - the migration hasn't started yet.\n*   `exporting` - the migration is in progress.\n*   `exported` - the migration finished successfully.\n*   `failed` - the migration failed.\n\nOnce the migration has been `exported` you can [download the migration archive](#download-a-user-migration-archive).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 79,
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
              "state": "exported",
              "lock_repositories": true,
              "exclude_attachments": false,
              "repositories": [
                {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              ],
              "url": "https://api.github.com/orgs/octo-org/migrations/79",
              "created_at": "2015-07-06T15:33:38-07:00",
              "updated_at": "2015-07-06T15:33:38-07:00"
            }
          }
        ],
        "idName": "get-status-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/migrations/users/#get-the-status-of-a-user-migration"
      },
      {
        "name": "Download a user migration archive",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/migrations/:migration_id/archive",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "migration_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:\n\n*   attachments\n*   bases\n*   commit\\_comments\n*   issue\\_comments\n*   issue\\_events\n*   issues\n*   milestones\n*   organizations\n*   projects\n*   protected\\_branches\n*   pull\\_request\\_reviews\n*   pull\\_requests\n*   releases\n*   repositories\n*   review\\_comments\n*   schema\n*   users\n\nThe archive will also contain an `attachments` directory that includes all attachment files uploaded to GitHub.com and a `repositories` directory that contains the repository's Git data.\n\n",
        "responses": [
          {
            "headers": {
              "status": "302 Found",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "get-archive-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/migrations/users/#download-a-user-migration-archive"
      },
      {
        "name": "Delete a user migration archive",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/migrations/:migration_id/archive",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "migration_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migration metadata, which is returned in the [Get a list of user migrations](#get-a-list-of-user-migrations) and [Get the status of a user migration](#get-the-status-of-a-user-migration) endpoints, will continue to be available even after an archive is deleted.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-archive-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/migrations/users/#delete-a-user-migration-archive"
      },
      {
        "name": "Unlock a user repository",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/migrations/:migration_id/repos/:repo_name/lock",
        "previews": [
          {
            "name": "wyandotte",
            "description": "To access the Migrations API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "migration_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo_name",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Unlocks a repository. You can lock repositories when you [start a user migration](#start-a-user-migration). Once the migration is complete you can unlock each repository to begin using it again or [delete the repository](https://developer.github.com/v3/repos/#delete-a-repository) if you no longer need the source data. Returns a status of `404 Not Found` if the repository is not locked.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "unlock-repo-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/migrations/users/#unlock-a-user-repository"
      }
    ],
    "oauthAuthorizations": [
      {
        "name": "List your grants",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/applications/grants",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "url": "https://api.github.com/applications/grants/1",
                "app": {
                  "url": "http://my-github-app.com",
                  "name": "my github app",
                  "client_id": "abcde12345fghij67890"
                },
                "created_at": "2011-09-06T17:26:27Z",
                "updated_at": "2011-09-06T20:39:23Z",
                "scopes": [
                  "public_repo"
                ]
              }
            ]
          }
        ],
        "idName": "list-grants",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#list-your-grants"
      },
      {
        "name": "Get a single grant",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/applications/grants/:grant_id",
        "previews": [],
        "params": [
          {
            "name": "grant_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/applications/grants/1",
              "app": {
                "url": "http://my-github-app.com",
                "name": "my github app",
                "client_id": "abcde12345fghij67890"
              },
              "created_at": "2011-09-06T17:26:27Z",
              "updated_at": "2011-09-06T20:39:23Z",
              "scopes": [
                "public_repo"
              ]
            }
          }
        ],
        "idName": "get-grant",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-a-single-grant"
      },
      {
        "name": "Delete a grant",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/applications/grants/:grant_id",
        "previews": [],
        "params": [
          {
            "name": "grant_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-grant",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#delete-a-grant"
      },
      {
        "name": "List your authorizations",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/authorizations",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "url": "https://api.github.com/authorizations/1",
                "scopes": [
                  "public_repo"
                ],
                "token": "",
                "token_last_eight": "12345678",
                "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                "app": {
                  "url": "http://my-github-app.com",
                  "name": "my github app",
                  "client_id": "abcde12345fghij67890"
                },
                "note": "optional note",
                "note_url": "http://optional/note/url",
                "updated_at": "2011-09-06T20:39:23Z",
                "created_at": "2011-09-06T17:26:27Z",
                "fingerprint": "jklmnop12345678"
              }
            ]
          }
        ],
        "idName": "list-authorizations",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations"
      },
      {
        "name": "Get a single authorization",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/authorizations/:authorization_id",
        "previews": [],
        "params": [
          {
            "name": "authorization_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/authorizations/1",
              "scopes": [
                "public_repo"
              ],
              "token": "",
              "token_last_eight": "12345678",
              "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
              "app": {
                "url": "http://my-github-app.com",
                "name": "my github app",
                "client_id": "abcde12345fghij67890"
              },
              "note": "optional note",
              "note_url": "http://optional/note/url",
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z",
              "fingerprint": "jklmnop12345678"
            }
          }
        ],
        "idName": "get-authorization",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-a-single-authorization"
      },
      {
        "name": "Create a new authorization",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/authorizations",
        "previews": [],
        "params": [
          {
            "name": "scopes",
            "type": "string[]",
            "description": "A list of scopes that this authorization is in.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note",
            "type": "string",
            "description": "A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note.",
            "required": true,
            "location": "body"
          },
          {
            "name": "note_url",
            "type": "string",
            "description": "A URL to remind you what app the OAuth token is for.",
            "required": false,
            "location": "body"
          },
          {
            "name": "client_id",
            "type": "string",
            "description": "The 20 character OAuth app client key for which to create the token.",
            "required": false,
            "location": "body"
          },
          {
            "name": "client_secret",
            "type": "string",
            "description": "The 40 character OAuth app client secret for which to create the token.",
            "required": false,
            "location": "body"
          },
          {
            "name": "fingerprint",
            "type": "string",
            "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "scopes": [
              "public_repo"
            ],
            "note": "admin script"
          }
        ],
        "description": "Creates OAuth tokens using [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can use this endpoint to create multiple OAuth tokens instead of implementing the [web flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/).\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be whitelisted. Read more about whitelisting tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/authorizations/1",
              "scopes": [
                "public_repo"
              ],
              "token": "abcdefgh12345678",
              "token_last_eight": "12345678",
              "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
              "app": {
                "url": "http://my-github-app.com",
                "name": "my github app",
                "client_id": "abcde12345fghij67890"
              },
              "note": "optional note",
              "note_url": "http://optional/note/url",
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z",
              "fingerprint": ""
            }
          }
        ],
        "idName": "create-authorization",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization"
      },
      {
        "name": "Get-or-create an authorization for a specific app",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/authorizations/clients/:client_id",
        "previews": [],
        "params": [
          {
            "name": "client_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "client_secret",
            "type": "string",
            "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
            "required": true,
            "location": "body"
          },
          {
            "name": "scopes",
            "type": "string[]",
            "description": "A list of scopes that this authorization is in.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note",
            "type": "string",
            "description": "A note to remind you what the OAuth token is for.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note_url",
            "type": "string",
            "description": "A URL to remind you what app the OAuth token is for.",
            "required": false,
            "location": "body"
          },
          {
            "name": "fingerprint",
            "type": "string",
            "description": "A unique string to distinguish an authorization from others created for the same client and user. If provided, this API is functionally equivalent to [Get-or-create an authorization for a specific app and fingerprint](https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint).",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "client_secret": "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd",
            "scopes": [
              "public_repo"
            ],
            "note": "admin script"
          }
        ],
        "description": "Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"",
        "idName": "get-or-create-authorization-for-app",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app"
      },
      {
        "name": "Get-or-create an authorization for a specific app and fingerprint",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/authorizations/clients/:client_id/:fingerprint",
        "previews": [],
        "params": [
          {
            "name": "client_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "fingerprint",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "client_secret",
            "type": "string",
            "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
            "required": true,
            "location": "body"
          },
          {
            "name": "scopes",
            "type": "string[]",
            "description": "A list of scopes that this authorization is in.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note",
            "type": "string",
            "description": "A note to remind you what the OAuth token is for.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note_url",
            "type": "string",
            "description": "A URL to remind you what app the OAuth token is for.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "client_secret": "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd",
            "scopes": [
              "public_repo"
            ],
            "note": "admin script"
          }
        ],
        "description": "This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"",
        "idName": "get-or-create-authorization-for-app-and-fingerprint",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint"
      },
      {
        "name": "Get-or-create an authorization for a specific app and fingerprint",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/authorizations/clients/:client_id/:fingerprint",
        "previews": [],
        "params": [
          {
            "name": "client_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "fingerprint",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "client_secret",
            "type": "string",
            "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
            "required": true,
            "location": "body"
          },
          {
            "name": "scopes",
            "type": "string[]",
            "description": "A list of scopes that this authorization is in.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note",
            "type": "string",
            "description": "A note to remind you what the OAuth token is for.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note_url",
            "type": "string",
            "description": "A URL to remind you what app the OAuth token is for.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "client_secret": "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd",
            "scopes": [
              "public_repo"
            ],
            "note": "admin script"
          }
        ],
        "description": "This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"",
        "idName": "get-or-create-authorization-for-app-fingerprint",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
        "deprecated": {
          "date": "2018-12-27",
          "message": "`idName` changed for \"Get-or-create an authorization for a specific app and fingerprint\". It now includes `-and-`",
          "before": {
            "idName": "get-or-create-authorization-for-app-fingerprint"
          },
          "after": {
            "idName": "get-or-create-authorization-for-app-and-fingerprint"
          }
        }
      },
      {
        "name": "Update an existing authorization",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/authorizations/:authorization_id",
        "previews": [],
        "params": [
          {
            "name": "authorization_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "scopes",
            "type": "string[]",
            "description": "Replaces the authorization scopes with these.",
            "required": false,
            "location": "body"
          },
          {
            "name": "add_scopes",
            "type": "string[]",
            "description": "A list of scopes to add to this authorization.",
            "required": false,
            "location": "body"
          },
          {
            "name": "remove_scopes",
            "type": "string[]",
            "description": "A list of scopes to remove from this authorization.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note",
            "type": "string",
            "description": "A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note.",
            "required": false,
            "location": "body"
          },
          {
            "name": "note_url",
            "type": "string",
            "description": "A URL to remind you what app the OAuth token is for.",
            "required": false,
            "location": "body"
          },
          {
            "name": "fingerprint",
            "type": "string",
            "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "add_scopes": [
              "repo"
            ],
            "note": "admin script"
          }
        ],
        "description": "If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/authorizations/1",
              "scopes": [
                "public_repo"
              ],
              "token": "",
              "token_last_eight": "12345678",
              "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
              "app": {
                "url": "http://my-github-app.com",
                "name": "my github app",
                "client_id": "abcde12345fghij67890"
              },
              "note": "optional note",
              "note_url": "http://optional/note/url",
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z",
              "fingerprint": "jklmnop12345678"
            }
          }
        ],
        "idName": "update-authorization",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#update-an-existing-authorization"
      },
      {
        "name": "Delete an authorization",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/authorizations/:authorization_id",
        "previews": [],
        "params": [
          {
            "name": "authorization_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-authorization",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#delete-an-authorization"
      },
      {
        "name": "Check an authorization",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/applications/:client_id/tokens/:access_token",
        "previews": [],
        "params": [
          {
            "name": "client_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "access_token",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "OAuth applications can use a special API method for checking OAuth token validity without running afoul of normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/authorizations/1",
              "scopes": [
                "public_repo"
              ],
              "token": "abcdefgh12345678",
              "token_last_eight": "12345678",
              "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
              "app": {
                "url": "http://my-github-app.com",
                "name": "my github app",
                "client_id": "abcde12345fghij67890"
              },
              "note": "optional note",
              "note_url": "http://optional/note/url",
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z",
              "fingerprint": "jklmnop12345678",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "check-authorization",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#check-an-authorization"
      },
      {
        "name": "Reset an authorization",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/applications/:client_id/tokens/:access_token",
        "previews": [],
        "params": [
          {
            "name": "client_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "access_token",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "OAuth applications can use this API method to reset a valid OAuth token without end user involvement. Applications must save the \"token\" property in the response, because changes take effect immediately. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/authorizations/1",
              "scopes": [
                "public_repo"
              ],
              "token": "abcdefgh12345678",
              "token_last_eight": "12345678",
              "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
              "app": {
                "url": "http://my-github-app.com",
                "name": "my github app",
                "client_id": "abcde12345fghij67890"
              },
              "note": "optional note",
              "note_url": "http://optional/note/url",
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z",
              "fingerprint": "jklmnop12345678",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "reset-authorization",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization"
      },
      {
        "name": "Revoke an authorization for an application",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/applications/:client_id/tokens/:access_token",
        "previews": [],
        "params": [
          {
            "name": "client_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "access_token",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "revoke-authorization-for-application",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application"
      },
      {
        "name": "Revoke a grant for an application",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/applications/:client_id/grants/:access_token",
        "previews": [],
        "params": [
          {
            "name": "client_id",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "access_token",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "revoke-grant-for-application",
        "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#revoke-a-grant-for-an-application"
      }
    ],
    "orgs": [
      {
        "name": "List your organizations",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/orgs",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List organizations for the authenticated user.\n\n**OAuth scope requirements**\n\nThis only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              }
            ]
          }
        ],
        "idName": "list-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/orgs/#list-your-organizations"
      },
      {
        "name": "List all organizations",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/organizations",
        "previews": [],
        "params": [
          {
            "name": "since",
            "type": "string",
            "description": "The integer ID of the last Organization that you've seen.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists all organizations, in the order that they were created on GitHub.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of organizations.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              }
            ]
          }
        ],
        "idName": "list",
        "documentationUrl": "https://developer.github.com/v3/orgs/#list-all-organizations"
      },
      {
        "name": "List user organizations",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/orgs",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List your organizations](#list-your-organizations) API instead.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              }
            ]
          }
        ],
        "idName": "list-for-user",
        "documentationUrl": "https://developer.github.com/v3/orgs/#list-user-organizations"
      },
      {
        "name": "Get an organization",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org",
        "previews": [
          {
            "name": "surtur",
            "description": "**Note:** New repository creation permissions are available to preview. You can now set the `members_allowed_repository_creation_type` parameter to configure whether organization members can create repositories and the type of repositories they can create.\n\nTo access this new parameter during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.surtur-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"[Authenticating with GitHub Apps](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see \"[Response with GitHub plan information](#response-with-github-plan-information).\"",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "login": "github",
              "id": 1,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
              "url": "https://api.github.com/orgs/github",
              "repos_url": "https://api.github.com/orgs/github/repos",
              "events_url": "https://api.github.com/orgs/github/events",
              "hooks_url": "https://api.github.com/orgs/github/hooks",
              "issues_url": "https://api.github.com/orgs/github/issues",
              "members_url": "https://api.github.com/orgs/github/members{/member}",
              "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "description": "A great organization",
              "name": "github",
              "company": "GitHub",
              "blog": "https://github.com/blog",
              "location": "San Francisco",
              "email": "octocat@github.com",
              "is_verified": true,
              "has_organization_projects": true,
              "has_repository_projects": true,
              "public_repos": 2,
              "public_gists": 1,
              "followers": 20,
              "following": 0,
              "html_url": "https://github.com/octocat",
              "created_at": "2008-01-14T04:33:35Z",
              "type": "Organization",
              "total_private_repos": 100,
              "owned_private_repos": 100,
              "private_gists": 81,
              "disk_usage": 10000,
              "collaborators": 8,
              "billing_email": "support@github.com",
              "plan": {
                "name": "Medium",
                "space": 400,
                "private_repos": 20
              },
              "default_repository_settings": "read",
              "members_can_create_repositories": true,
              "two_factor_requirement_enabled": true,
              "members_allowed_repository_creation_type": "all"
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/orgs/#get-an-organization"
      },
      {
        "name": "Edit an organization",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/orgs/:org",
        "previews": [
          {
            "name": "surtur",
            "description": "**Note:** New repository creation permissions are available to preview. You can now set the `members_allowed_repository_creation_type` parameter to configure whether organization members can create repositories and the type of repositories they can create.\n\nTo access this new parameter during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.surtur-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "billing_email",
            "type": "string",
            "description": "Billing email address. This address is not publicized.",
            "required": false,
            "location": "body"
          },
          {
            "name": "company",
            "type": "string",
            "description": "The company name.",
            "required": false,
            "location": "body"
          },
          {
            "name": "email",
            "type": "string",
            "description": "The publicly visible email address.",
            "required": false,
            "location": "body"
          },
          {
            "name": "location",
            "type": "string",
            "description": "The location.",
            "required": false,
            "location": "body"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The shorthand name of the company.",
            "required": false,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "The description of the company.",
            "required": false,
            "location": "body"
          },
          {
            "name": "has_organization_projects",
            "type": "boolean",
            "description": "Toggles whether organization projects are enabled for the organization.",
            "required": false,
            "location": "body"
          },
          {
            "name": "has_repository_projects",
            "type": "boolean",
            "description": "Toggles whether repository projects are enabled for repositories that belong to the organization.",
            "required": false,
            "location": "body"
          },
          {
            "name": "default_repository_permission",
            "type": "string",
            "description": "Default permission level members have for organization repositories:  \n\\* `read` - can pull, but not push to or administer this repository.  \n\\* `write` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push, and administer this repository.  \n\\* `none` - no permissions granted by default.",
            "default": "read",
            "required": false,
            "enum": [
              "read",
              "write",
              "admin",
              "none"
            ],
            "location": "body"
          },
          {
            "name": "members_can_create_repositories",
            "type": "boolean",
            "description": "Toggles the ability of non-admin organization members to create repositories. Can be one of:  \n\\* `true` - all organization members can create repositories.  \n\\* `false` - only admin members can create repositories.  \nDefault: `true`  \n**Note:** Another parameter can override the this parameter. See [this note](#members_can_create_repositories) for details. **Note:** Another parameter can override the this parameter. See [this note](#members_can_create_repositories) for details.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "members_allowed_repository_creation_type",
            "type": "string",
            "description": "Specifies which types of repositories non-admin organization members can create. Can be one of:  \n\\* `all` - all organization members can create public and private repositories.  \n\\* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on [GitHub Business Cloud](https://github.com/pricing/business-cloud).  \n\\* `none` - only admin members can create repositories.  \n**Note:** Using this parameter will override values set in `members_can_create_repositories`. See [this note](#members_can_create_repositories) for details.",
            "required": false,
            "enum": [
              "all",
              "private",
              "none"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "billing_email": "support@github.com",
            "blog": "https://github.com/blog",
            "company": "GitHub",
            "email": "support@github.com",
            "location": "San Francisco",
            "name": "github",
            "description": "GitHub, the company.",
            "default_repository_permission": "read",
            "members_can_create_repositories": true,
            "members_allowed_repository_creation_type": "all"
          }
        ],
        "description": "**Note:** The new `members_allowed_repository_creation_type` replaces the functionality of `members_can_create_repositories`.\n\nSetting `members_allowed_repository_creation_type` will override the value of `members_can_create_repositories` in the following ways:\n\n*   Setting `members_allowed_repository_creation_type` to `all` or `private` sets `members_can_create_repositories` to `true`.\n*   Setting `members_allowed_repository_creation_type` to `none` sets `members_can_create_repositories` to `false`.\n*   If you omit `members_allowed_repository_creation_type`, `members_can_create_repositories` is not modified.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "login": "github",
              "id": 1,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
              "url": "https://api.github.com/orgs/github",
              "repos_url": "https://api.github.com/orgs/github/repos",
              "events_url": "https://api.github.com/orgs/github/events",
              "hooks_url": "https://api.github.com/orgs/github/hooks",
              "issues_url": "https://api.github.com/orgs/github/issues",
              "members_url": "https://api.github.com/orgs/github/members{/member}",
              "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "description": "A great organization",
              "name": "github",
              "company": "GitHub",
              "blog": "https://github.com/blog",
              "location": "San Francisco",
              "email": "octocat@github.com",
              "is_verified": true,
              "has_organization_projects": true,
              "has_repository_projects": true,
              "public_repos": 2,
              "public_gists": 1,
              "followers": 20,
              "following": 0,
              "html_url": "https://github.com/octocat",
              "created_at": "2008-01-14T04:33:35Z",
              "type": "Organization",
              "total_private_repos": 100,
              "owned_private_repos": 100,
              "private_gists": 81,
              "disk_usage": 10000,
              "collaborators": 8,
              "billing_email": "support@github.com",
              "plan": {
                "name": "Medium",
                "space": 400,
                "private_repos": 20
              },
              "default_repository_settings": "read",
              "members_can_create_repositories": true,
              "two_factor_requirement_enabled": true,
              "members_allowed_repository_creation_type": "all"
            }
          }
        ],
        "idName": "update",
        "documentationUrl": "https://developer.github.com/v3/orgs/#edit-an-organization"
      },
      {
        "name": "List credential authorizations for an organization",
        "enabledForApps": false,
        "githubCloudOnly": true,
        "method": "GET",
        "path": "/orgs/:org/credential-authorizations",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://help.github.com/en/articles/about-authentication-with-saml-single-sign-on).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "credential_id": "161195",
                "credential_type": "personal access token",
                "token_last_eight": "71c3fc11",
                "credential_authorized_at": "2011-01-26T19:06:43Z",
                "scopes": [
                  "user",
                  "repo"
                ]
              },
              {
                "login": "hubot",
                "credential_id": "161196",
                "credential_type": "personal access token",
                "token_last_eight": "12345678",
                "credential_authorized_at": "2019-03-29T19:06:43Z",
                "scopes": [
                  "repo"
                ]
              }
            ]
          }
        ],
        "idName": "list-credential-authorizations",
        "documentationUrl": "https://developer.github.com/v3/orgs/#list-credential-authorizations-for-an-organization"
      },
      {
        "name": "Remove a credential authorization for an organization",
        "enabledForApps": false,
        "githubCloudOnly": true,
        "method": "DELETE",
        "path": "/orgs/:org/credential-authorizations/:credential_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "credential_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-credential-authorization",
        "documentationUrl": "https://developer.github.com/v3/orgs/#remove-a-credential-authorization-for-an-organization"
      },
      {
        "name": "List blocked users",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/blocks",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "List the users blocked by an organization.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-blocked-users",
        "documentationUrl": "https://developer.github.com/v3/orgs/blocking/#list-blocked-users"
      },
      {
        "name": "Check whether a user is blocked from an organization",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/blocks/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "If the user is blocked:\n\nIf the user is not blocked:",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            },
            "description": "If the user is blocked:"
          },
          {
            "headers": {
              "status": "404 Not Found",
              "content-type": "application/json; charset=utf-8"
            },
            "description": "If the user is not blocked:"
          }
        ],
        "idName": "check-blocked-user",
        "documentationUrl": "https://developer.github.com/v3/orgs/blocking/#check-whether-a-user-is-blocked-from-an-organization"
      },
      {
        "name": "Block a user",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/orgs/:org/blocks/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "block-user",
        "documentationUrl": "https://developer.github.com/v3/orgs/blocking/#block-a-user"
      },
      {
        "name": "Unblock a user",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/blocks/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "unblock-user",
        "documentationUrl": "https://developer.github.com/v3/orgs/blocking/#unblock-a-user"
      },
      {
        "name": "List hooks",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/hooks",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "url": "https://api.github.com/orgs/octocat/hooks/1",
                "ping_url": "https://api.github.com/orgs/octocat/hooks/1/pings",
                "name": "web",
                "events": [
                  "push",
                  "pull_request"
                ],
                "active": true,
                "config": {
                  "url": "http://example.com",
                  "content_type": "json"
                },
                "updated_at": "2011-09-06T20:39:23Z",
                "created_at": "2011-09-06T17:26:27Z"
              }
            ]
          }
        ],
        "idName": "list-hooks",
        "documentationUrl": "https://developer.github.com/v3/orgs/hooks/#list-hooks"
      },
      {
        "name": "Get single hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/hooks/:hook_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/orgs/octocat/hooks/1",
              "ping_url": "https://api.github.com/orgs/octocat/hooks/1/pings",
              "name": "web",
              "events": [
                "push",
                "pull_request"
              ],
              "active": true,
              "config": {
                "url": "http://example.com",
                "content_type": "json"
              },
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z"
            }
          }
        ],
        "idName": "get-hook",
        "documentationUrl": "https://developer.github.com/v3/orgs/hooks/#get-single-hook"
      },
      {
        "name": "Create a hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/orgs/:org/hooks",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "Must be passed as \"web\".",
            "required": true,
            "location": "body"
          },
          {
            "name": "config",
            "type": "object",
            "description": "Key/value pairs to provide settings for this webhook. [These are defined below](#create-hook-config-params).",
            "required": true,
            "location": "body"
          },
          {
            "name": "config.url",
            "type": "string",
            "description": "The URL to which the payloads will be delivered.",
            "required": true,
            "location": "body"
          },
          {
            "name": "config.content_type",
            "type": "string",
            "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.secret",
            "type": "string",
            "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header.",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.insecure_ssl",
            "type": "string",
            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
            "required": false,
            "location": "body"
          },
          {
            "name": "events",
            "type": "string[]",
            "description": "Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.",
            "default": "[\"push\"]",
            "required": false,
            "location": "body"
          },
          {
            "name": "active",
            "type": "boolean",
            "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
            "default": true,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "web",
            "active": true,
            "events": [
              "push",
              "pull_request"
            ],
            "config": {
              "url": "http://example.com/webhook",
              "content_type": "json"
            }
          }
        ],
        "description": "Here's how you can create a hook that posts payloads in JSON format:",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/orgs/octocat/hooks/1",
              "ping_url": "https://api.github.com/orgs/octocat/hooks/1/pings",
              "name": "web",
              "events": [
                "push",
                "pull_request"
              ],
              "active": true,
              "config": {
                "url": "http://example.com",
                "content_type": "json"
              },
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z"
            }
          }
        ],
        "idName": "create-hook",
        "documentationUrl": "https://developer.github.com/v3/orgs/hooks/#create-a-hook"
      },
      {
        "name": "Edit a hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/orgs/:org/hooks/:hook_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "config",
            "type": "object",
            "description": "Key/value pairs to provide settings for this webhook. [These are defined below](#update-hook-config-params).",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.url",
            "type": "string",
            "description": "The URL to which the payloads will be delivered.",
            "required": true,
            "location": "body"
          },
          {
            "name": "config.content_type",
            "type": "string",
            "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.secret",
            "type": "string",
            "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header.",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.insecure_ssl",
            "type": "string",
            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
            "required": false,
            "location": "body"
          },
          {
            "name": "events",
            "type": "string[]",
            "description": "Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.",
            "default": "[\"push\"]",
            "required": false,
            "location": "body"
          },
          {
            "name": "active",
            "type": "boolean",
            "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
            "default": true,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "active": true,
            "events": [
              "pull_request"
            ]
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/orgs/octocat/hooks/1",
              "ping_url": "https://api.github.com/orgs/octocat/hooks/1/pings",
              "name": "web",
              "events": [
                "pull_request"
              ],
              "active": true,
              "config": {
                "url": "http://example.com",
                "content_type": "json"
              },
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z"
            }
          }
        ],
        "idName": "update-hook",
        "documentationUrl": "https://developer.github.com/v3/orgs/hooks/#edit-a-hook"
      },
      {
        "name": "Ping a hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/orgs/:org/hooks/:hook_id/pings",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "ping-hook",
        "documentationUrl": "https://developer.github.com/v3/orgs/hooks/#ping-a-hook"
      },
      {
        "name": "Delete a hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/hooks/:hook_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-hook",
        "documentationUrl": "https://developer.github.com/v3/orgs/hooks/#delete-a-hook"
      },
      {
        "name": "Members list",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/members",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Filter members returned in the list. Can be one of:  \n\\* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  \n\\* `all` - All members the authenticated user can see.",
            "default": "all",
            "required": false,
            "enum": [
              "2fa_disabled",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "role",
            "type": "string",
            "description": "Filter members returned by their role. Can be one of:  \n\\* `all` - All members of the organization, regardless of role.  \n\\* `admin` - Organization owners.  \n\\* `member` - Non-owner organization members.",
            "default": "all",
            "required": false,
            "enum": [
              "all",
              "admin",
              "member"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-members",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#members-list"
      },
      {
        "name": "Check membership",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/members/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Check if a user is, publicly or privately, a member of the organization.",
        "idName": "check-membership",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#check-membership"
      },
      {
        "name": "Remove a member",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/members/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-member",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#remove-a-member"
      },
      {
        "name": "Public members list",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/public_members",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Members of an organization can choose to have their membership publicized or not.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-public-members",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#public-members-list"
      },
      {
        "name": "Check public membership",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/public_members/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "idName": "check-public-membership",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#check-public-membership"
      },
      {
        "name": "Publicize a user's membership",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/orgs/:org/public_members/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "publicize-membership",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#publicize-a-users-membership"
      },
      {
        "name": "Conceal a user's membership",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/public_members/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "conceal-membership",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#conceal-a-users-membership"
      },
      {
        "name": "Get organization membership",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/memberships/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "In order to get a user's membership with an organization, the authenticated user must be an organization member.",
        "idName": "get-membership",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#get-organization-membership"
      },
      {
        "name": "Add or update organization membership",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/orgs/:org/memberships/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "role",
            "type": "string",
            "description": "The role to give the user in the organization. Can be one of:  \n\\* `admin` - The user will become an owner of the organization.  \n\\* `member` - The user will become a non-owner member of the organization.",
            "default": "member",
            "required": false,
            "enum": [
              "admin",
              "member"
            ],
            "location": "body"
          }
        ],
        "description": "Only authenticated organization owners can add a member to the organization or update the member's role.\n\n*   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](#get-organization-membership) will be `pending` until they accept the invitation.\n    \n*   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.",
        "idName": "add-or-update-membership",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership"
      },
      {
        "name": "Remove organization membership",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/memberships/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\nIf the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-membership",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#remove-organization-membership"
      },
      {
        "name": "List organization invitation teams",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/invitations/:invitation_id/teams",
        "previews": [
          {
            "name": "dazzler",
            "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dazzler-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "invitation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          }
        ],
        "idName": "list-invitation-teams",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#list-organization-invitation-teams"
      },
      {
        "name": "List pending organization invitations",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/invitations",
        "previews": [
          {
            "name": "dazzler",
            "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dazzler-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "login": "monalisa",
                "email": "octocat@github.com",
                "role": "direct_member",
                "created_at": "2016-11-30T06:46:10-08:00",
                "inviter": {
                  "login": "other_user",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/other_user",
                  "html_url": "https://github.com/other_user",
                  "followers_url": "https://api.github.com/users/other_user/followers",
                  "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                  "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                  "organizations_url": "https://api.github.com/users/other_user/orgs",
                  "repos_url": "https://api.github.com/users/other_user/repos",
                  "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/other_user/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "team_count": 2,
                "invitation_team_url": "https://api.github.com/organizations/2/invitations/1/teams"
              }
            ]
          }
        ],
        "idName": "list-pending-invitations",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations"
      },
      {
        "name": "Create organization invitation",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/orgs/:org/invitations",
        "previews": [
          {
            "name": "dazzler",
            "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dazzler-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "invitee_id",
            "type": "integer",
            "description": "**Required unless you provide `email`**. GitHub user ID for the person you are inviting.",
            "required": false,
            "location": "body"
          },
          {
            "name": "email",
            "type": "string",
            "description": "**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "role",
            "type": "string",
            "description": "Specify role for new member. Can be one of:  \n\\* `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  \n\\* `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  \n\\* `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.",
            "default": "direct_member",
            "required": false,
            "enum": [
              "admin",
              "direct_member",
              "billing_manager"
            ],
            "location": "body"
          },
          {
            "name": "team_ids",
            "type": "integer[]",
            "description": "Specify IDs for the teams you want to invite new members to.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "email": "octocat@github.com",
            "role": "direct_member",
            "team_ids": [
              12,
              26
            ]
          }
        ],
        "description": "Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "login": "monalisa",
              "email": "octocat@github.com",
              "role": "direct_member",
              "created_at": "2016-11-30T06:46:10-08:00",
              "inviter": {
                "login": "other_user",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/other_user",
                "html_url": "https://github.com/other_user",
                "followers_url": "https://api.github.com/users/other_user/followers",
                "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                "organizations_url": "https://api.github.com/users/other_user/orgs",
                "repos_url": "https://api.github.com/users/other_user/repos",
                "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                "received_events_url": "https://api.github.com/users/other_user/received_events",
                "type": "User",
                "site_admin": false
              },
              "team_count": 2,
              "invitation_team_url": "https://api.github.com/organizations/2/invitations/1/teams"
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-invitation",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#create-organization-invitation"
      },
      {
        "name": "List your organization memberships",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/memberships/orgs",
        "previews": [],
        "params": [
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the memberships to return. Can be either `active` or `pending`. If not specified, the API returns both active and pending memberships.",
            "required": false,
            "enum": [
              "active",
              "pending"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/orgs/octocat/memberships/defunkt",
                "state": "active",
                "role": "admin",
                "organization_url": "https://api.github.com/orgs/octocat",
                "organization": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              },
              {
                "url": "https://api.github.com/orgs/invitocat/memberships/defunkt",
                "state": "pending",
                "role": "admin",
                "organization_url": "https://api.github.com/orgs/invitocat",
                "organization": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization"
                },
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              }
            ]
          }
        ],
        "idName": "list-memberships",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#list-your-organization-memberships"
      },
      {
        "name": "Get your organization membership",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/memberships/orgs/:org",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/orgs/invitocat/memberships/defunkt",
              "state": "pending",
              "role": "admin",
              "organization_url": "https://api.github.com/orgs/invitocat",
              "organization": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              },
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "get-membership-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#get-your-organization-membership"
      },
      {
        "name": "Edit your organization membership",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/user/memberships/orgs/:org",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "The state that the membership should be in. Only `\"active\"` will be accepted.",
            "required": true,
            "enum": [
              "active"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "state": "active"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/orgs/octocat/memberships/defunkt",
              "state": "active",
              "role": "admin",
              "organization_url": "https://api.github.com/orgs/octocat",
              "organization": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization"
              },
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "update-membership",
        "documentationUrl": "https://developer.github.com/v3/orgs/members/#edit-your-organization-membership"
      },
      {
        "name": "List outside collaborators",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/outside_collaborators",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Filter the list of outside collaborators. Can be one of:  \n\\* `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.  \n\\* `all`: All outside collaborators.",
            "default": "all",
            "required": false,
            "enum": [
              "2fa_disabled",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all users who are outside collaborators of an organization.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-outside-collaborators",
        "documentationUrl": "https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators"
      },
      {
        "name": "Remove outside collaborator",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/orgs/:org/outside_collaborators/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Removing a user from this list will remove them from all the organization's repositories.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-outside-collaborator",
        "documentationUrl": "https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator"
      },
      {
        "name": "Convert member to outside collaborator",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/orgs/:org/outside_collaborators/:username",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "convert-member-to-outside-collaborator",
        "documentationUrl": "https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator"
      }
    ],
    "projects": [
      {
        "name": "List repository projects",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/projects",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "owner_url": "https://api.github.com/repos/api-playground/projects-test",
                "url": "https://api.github.com/projects/1002604",
                "html_url": "https://github.com/api-playground/projects-test/projects/1",
                "columns_url": "https://api.github.com/projects/1002604/columns",
                "id": 1002604,
                "node_id": "MDc6UHJvamVjdDEwMDI2MDQ=",
                "name": "Projects Documentation",
                "body": "Developer documentation project for the developer site.",
                "number": 1,
                "state": "open",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z"
              }
            ]
          }
        ],
        "idName": "list-for-repo",
        "documentationUrl": "https://developer.github.com/v3/projects/#list-repository-projects"
      },
      {
        "name": "List organization projects",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/projects",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\ns",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "owner_url": "https://api.github.com/orgs/octocat",
                "url": "https://api.github.com/projects/1002605",
                "html_url": "https://github.com/orgs/api-playground/projects/1",
                "columns_url": "https://api.github.com/projects/1002605/columns",
                "id": 1002605,
                "node_id": "MDc6UHJvamVjdDEwMDI2MDU=",
                "name": "Organization Roadmap",
                "body": "High-level roadmap for the upcoming year.",
                "number": 1,
                "state": "open",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-11T20:09:31Z",
                "updated_at": "2014-03-04T18:58:10Z"
              }
            ]
          }
        ],
        "idName": "list-for-org",
        "documentationUrl": "https://developer.github.com/v3/projects/#list-organization-projects"
      },
      {
        "name": "List user projects",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/projects",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "owner_url": "https://api.github.com/users/octocat",
                "url": "https://api.github.com/projects/1002603",
                "html_url": "https://github.com/users/octocat/projects/1",
                "columns_url": "https://api.github.com/projects/1002603/columns",
                "id": 1002603,
                "node_id": "MDc6UHJvamVjdDEwMDI2MDM=",
                "name": "My Projects",
                "body": "A board to manage my personal projects.",
                "number": 1,
                "state": "open",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z"
              }
            ]
          }
        ],
        "idName": "list-for-user",
        "documentationUrl": "https://developer.github.com/v3/projects/#list-user-projects"
      },
      {
        "name": "Get a project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/projects/:project_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "owner_url": "https://api.github.com/repos/api-playground/projects-test",
              "url": "https://api.github.com/projects/1002604",
              "html_url": "https://github.com/api-playground/projects-test/projects/1",
              "columns_url": "https://api.github.com/projects/1002604/columns",
              "id": 1002604,
              "node_id": "MDc6UHJvamVjdDEwMDI2MDQ=",
              "name": "Projects Documentation",
              "body": "Developer documentation project for the developer site.",
              "number": 1,
              "state": "open",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-10T20:09:31Z",
              "updated_at": "2014-03-03T18:58:10Z"
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/projects/#get-a-project"
      },
      {
        "name": "Create a repository project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/projects",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the project.",
            "required": true,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The description of the project.",
            "required": false,
            "location": "body"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "requests": [
          {
            "name": "Projects Documentation",
            "body": "Developer documentation project for the developer site."
          }
        ],
        "description": "Creates a repository project board. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "owner_url": "https://api.github.com/repos/api-playground/projects-test",
              "url": "https://api.github.com/projects/1002604",
              "html_url": "https://github.com/api-playground/projects-test/projects/1",
              "columns_url": "https://api.github.com/projects/1002604/columns",
              "id": 1002604,
              "node_id": "MDc6UHJvamVjdDEwMDI2MDQ=",
              "name": "Projects Documentation",
              "body": "Developer documentation project for the developer site.",
              "number": 1,
              "state": "open",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-10T20:09:31Z",
              "updated_at": "2014-03-03T18:58:10Z"
            }
          }
        ],
        "idName": "create-for-repo",
        "documentationUrl": "https://developer.github.com/v3/projects/#create-a-repository-project"
      },
      {
        "name": "Create an organization project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/orgs/:org/projects",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the project.",
            "required": true,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The description of the project.",
            "required": false,
            "location": "body"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "requests": [
          {
            "name": "Organization Roadmap",
            "body": "High-level roadmap for the upcoming year."
          }
        ],
        "description": "Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "owner_url": "https://api.github.com/orgs/octocat",
              "url": "https://api.github.com/projects/1002605",
              "html_url": "https://github.com/orgs/api-playground/projects/1",
              "columns_url": "https://api.github.com/projects/1002605/columns",
              "id": 1002605,
              "node_id": "MDc6UHJvamVjdDEwMDI2MDU=",
              "name": "Organization Roadmap",
              "body": "High-level roadmap for the upcoming year.",
              "number": 1,
              "state": "open",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-11T20:09:31Z",
              "updated_at": "2014-03-04T18:58:10Z"
            }
          }
        ],
        "idName": "create-for-org",
        "documentationUrl": "https://developer.github.com/v3/projects/#create-an-organization-project"
      },
      {
        "name": "Create a user project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/user/projects",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "The name of the project.",
            "required": true,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The description of the project.",
            "required": false,
            "location": "body"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "requests": [
          {
            "name": "Projects Documentation",
            "body": "Developer documentation project for the developer site."
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "owner_url": "https://api.github.com/users/octocat",
              "url": "https://api.github.com/projects/1002603",
              "html_url": "https://github.com/users/octocat/projects/1",
              "columns_url": "https://api.github.com/projects/1002603/columns",
              "id": 1002603,
              "node_id": "MDc6UHJvamVjdDEwMDI2MDM=",
              "name": "My Projects",
              "body": "A board to manage my personal projects.",
              "number": 1,
              "state": "open",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-10T20:09:31Z",
              "updated_at": "2014-03-03T18:58:10Z"
            }
          }
        ],
        "idName": "create-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/projects/#create-a-user-project"
      },
      {
        "name": "Update a project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/projects/:project_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the project.",
            "required": false,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The description of the project.",
            "required": false,
            "location": "body"
          },
          {
            "name": "state",
            "type": "string",
            "description": "State of the project. Either `open` or `closed`.",
            "required": false,
            "enum": [
              "open",
              "closed"
            ],
            "location": "body"
          },
          {
            "name": "organization_permission",
            "type": "string",
            "description": "The permission level that determines whether all members of the project's organization can see and/or make changes to the project. Setting `organization_permission` is only available for organization projects. If an organization member belongs to a team with a higher level of access or is a collaborator with a higher level of access, their permission level is not lowered by `organization_permission`. For information on changing access for a team or collaborator, see [Add or update team project](https://developer.github.com/v3/teams/#add-or-update-team-project) or [Add user as a collaborator](https://developer.github.com/v3/projects/collaborators/#add-user-as-a-collaborator).  \n  \n**Note:** Updating a project's `organization_permission` requires `admin` access to the project.  \n  \nCan be one of:  \n\\* `read` - Organization members can read, but not write to or administer this project.  \n\\* `write` - Organization members can read and write, but not administer this project.  \n\\* `admin` - Organization members can read, write and administer this project.  \n\\* `none` - Organization members can only see this project if it is public.",
            "required": false,
            "location": "body"
          },
          {
            "name": "private",
            "type": "boolean",
            "description": "Sets the visibility of a project board. Setting `private` is only available for organization and user projects. **Note:** Updating a project's visibility requires `admin` access to the project.  \n  \nCan be one of:  \n\\* `false` - Anyone can see the project.  \n\\* `true` - Only the user can view a project board created on a user account. Organization members with the appropriate `organization_permission` can see project boards in an organization account.",
            "required": false,
            "location": "body"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "requests": [
          {
            "name": "Outcomes Tracker",
            "body": "The board to track work for the Outcomes application."
          }
        ],
        "description": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "owner_url": "https://api.github.com/repos/api-playground/projects-test",
              "url": "https://api.github.com/projects/1002604",
              "html_url": "https://github.com/api-playground/projects-test/projects/1",
              "columns_url": "https://api.github.com/projects/1002604/columns",
              "id": 1002604,
              "node_id": "MDc6UHJvamVjdDEwMDI2MDQ=",
              "name": "Projects Documentation",
              "body": "Developer documentation project for the developer site.",
              "number": 1,
              "state": "open",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-10T20:09:31Z",
              "updated_at": "2014-03-03T18:58:10Z"
            }
          }
        ],
        "idName": "update",
        "documentationUrl": "https://developer.github.com/v3/projects/#update-a-project"
      },
      {
        "name": "Delete a project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/projects/:project_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled.",
        "idName": "delete",
        "documentationUrl": "https://developer.github.com/v3/projects/#delete-a-project"
      },
      {
        "name": "List project cards",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/projects/columns/:column_id/cards",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "column_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "archived_state",
            "type": "string",
            "description": "Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.",
            "default": "not_archived",
            "required": false,
            "enum": [
              "all",
              "archived",
              "not_archived"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/projects/columns/cards/1478",
                "id": 1478,
                "node_id": "MDExOlByb2plY3RDYXJkMTQ3OA==",
                "note": "Add payload for delete Project column",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2016-09-05T14:21:06Z",
                "updated_at": "2016-09-05T14:20:22Z",
                "archived": false,
                "column_url": "https://api.github.com/projects/columns/367",
                "content_url": "https://api.github.com/repos/api-playground/projects-test/issues/3",
                "project_url": "https://api.github.com/projects/120"
              }
            ]
          }
        ],
        "idName": "list-cards",
        "documentationUrl": "https://developer.github.com/v3/projects/cards/#list-project-cards"
      },
      {
        "name": "Get a project card",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/projects/columns/cards/:card_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "card_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "idName": "get-card",
        "documentationUrl": "https://developer.github.com/v3/projects/cards/#get-a-project-card"
      },
      {
        "name": "Create a project card",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/projects/columns/:column_id/cards",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "column_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "note",
            "type": "string",
            "description": "The card's note content. Only valid for cards without another type of content, so you must omit when specifying `content_id` and `content_type`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "content_id",
            "type": "integer",
            "description": "The issue or pull request id you want to associate with this card. You can use the [List issues for a repository](https://developer.github.com/v3/issues/#list-issues-for-a-repository) and [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests) endpoints to find this id.  \n**Note:** Depending on whether you use the issue id or pull request id, you will need to specify `Issue` or `PullRequest` as the `content_type`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "content_type",
            "type": "string",
            "description": "**Required if you provide `content_id`**. The type of content you want to associate with this card. Use `Issue` when `content_id` is an issue id and use `PullRequest` when `content_id` is a pull request id.",
            "required": false,
            "location": "body"
          }
        ],
        "description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/projects/columns/cards/1478",
              "id": 1478,
              "node_id": "MDExOlByb2plY3RDYXJkMTQ3OA==",
              "note": "Add payload for delete Project column",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2016-09-05T14:21:06Z",
              "updated_at": "2016-09-05T14:20:22Z",
              "archived": false,
              "column_url": "https://api.github.com/projects/columns/367",
              "content_url": "https://api.github.com/repos/api-playground/projects-test/issues/3",
              "project_url": "https://api.github.com/projects/120"
            }
          }
        ],
        "idName": "create-card",
        "documentationUrl": "https://developer.github.com/v3/projects/cards/#create-a-project-card"
      },
      {
        "name": "Update a project card",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/projects/columns/cards/:card_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "card_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "note",
            "type": "string",
            "description": "The card's note content. Only valid for cards without another type of content, so this cannot be specified if the card already has a `content_id` and `content_type`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "archived",
            "type": "boolean",
            "description": "Use `true` to archive a project card. Specify `false` if you need to restore a previously archived project card.",
            "required": false,
            "location": "body"
          }
        ],
        "description": "",
        "idName": "update-card",
        "documentationUrl": "https://developer.github.com/v3/projects/cards/#update-a-project-card"
      },
      {
        "name": "Delete a project card",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/projects/columns/cards/:card_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "card_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-card",
        "documentationUrl": "https://developer.github.com/v3/projects/cards/#delete-a-project-card"
      },
      {
        "name": "Move a project card",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/projects/columns/cards/:card_id/moves",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "card_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "position",
            "type": "string",
            "description": "Can be one of `top`, `bottom`, or `after:<card_id>`, where `<card_id>` is the `id` value of a card in the same column, or in the new column specified by `column_id`.",
            "required": true,
            "regex": "^(top|bottom|after:\\d+)$",
            "location": "body"
          },
          {
            "name": "column_id",
            "type": "integer",
            "description": "The `id` value of a column in the same project.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "position": "after:3",
            "column_id": 5
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "move-card",
        "documentationUrl": "https://developer.github.com/v3/projects/cards/#move-a-project-card"
      },
      {
        "name": "List collaborators",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/projects/:project_id/collaborators",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "affiliation",
            "type": "string",
            "description": "Filters the collaborators by their affiliation. Can be one of:  \n\\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  \n\\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
            "default": "all",
            "required": false,
            "enum": [
              "outside",
              "direct",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-collaborators",
        "documentationUrl": "https://developer.github.com/v3/projects/collaborators/#list-collaborators"
      },
      {
        "name": "Review a user's permission level",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/projects/:project_id/collaborators/:username/permission",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "permission": "admin",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "review-user-permission-level",
        "documentationUrl": "https://developer.github.com/v3/projects/collaborators/#review-a-users-permission-level"
      },
      {
        "name": "Add user as a collaborator",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/projects/:project_id/collaborators/:username",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "permission",
            "type": "string",
            "description": "The permission to grant the collaborator. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\" Can be one of:  \n\\* `read` - can read, but not write to or administer this project.  \n\\* `write` - can read and write, but not administer this project.  \n\\* `admin` - can read, write and administer this project.",
            "default": "write",
            "required": false,
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "location": "body"
          }
        ],
        "description": "Adds a collaborator to a an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "add-collaborator",
        "documentationUrl": "https://developer.github.com/v3/projects/collaborators/#add-user-as-a-collaborator"
      },
      {
        "name": "Remove user as a collaborator",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/projects/:project_id/collaborators/:username",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-collaborator",
        "documentationUrl": "https://developer.github.com/v3/projects/collaborators/#remove-user-as-a-collaborator"
      },
      {
        "name": "List project columns",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/projects/:project_id/columns",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/projects/columns/367",
                "project_url": "https://api.github.com/projects/120",
                "cards_url": "https://api.github.com/projects/columns/367/cards",
                "id": 367,
                "node_id": "MDEzOlByb2plY3RDb2x1bW4zNjc=",
                "name": "To Do",
                "created_at": "2016-09-05T14:18:44Z",
                "updated_at": "2016-09-05T14:22:28Z"
              }
            ]
          }
        ],
        "idName": "list-columns",
        "documentationUrl": "https://developer.github.com/v3/projects/columns/#list-project-columns"
      },
      {
        "name": "Get a project column",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/projects/columns/:column_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "column_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "idName": "get-column",
        "documentationUrl": "https://developer.github.com/v3/projects/columns/#get-a-project-column"
      },
      {
        "name": "Create a project column",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/projects/:project_id/columns",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the column.",
            "required": true,
            "location": "body"
          }
        ],
        "description": "",
        "idName": "create-column",
        "documentationUrl": "https://developer.github.com/v3/projects/columns/#create-a-project-column"
      },
      {
        "name": "Update a project column",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/projects/columns/:column_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "column_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The new name of the column.",
            "required": true,
            "location": "body"
          }
        ],
        "description": "",
        "idName": "update-column",
        "documentationUrl": "https://developer.github.com/v3/projects/columns/#update-a-project-column"
      },
      {
        "name": "Delete a project column",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/projects/columns/:column_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "column_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-column",
        "documentationUrl": "https://developer.github.com/v3/projects/columns/#delete-a-project-column"
      },
      {
        "name": "Move a project column",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/projects/columns/:column_id/moves",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "column_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "position",
            "type": "string",
            "description": "Can be one of `first`, `last`, or `after:<column_id>`, where `<column_id>` is the `id` value of a column in the same project.",
            "required": true,
            "regex": "^(first|last|after:\\d+)$",
            "location": "body"
          }
        ],
        "requests": [
          {
            "position": "after:3"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "move-column",
        "documentationUrl": "https://developer.github.com/v3/projects/columns/#move-a-project-column"
      }
    ],
    "pulls": [
      {
        "name": "List pull requests",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls",
        "previews": [
          {
            "name": "shadow-cat",
            "description": "**Note:** The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the [blog post](/changes/2019-02-14-draft-pull-requests) preview for more details. To access the new `draft` parameter during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.shadow-cat-preview\n\n```",
            "required": false
          },
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Either `open`, `closed`, or `all` to filter by state.",
            "default": "open",
            "required": false,
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "head",
            "type": "string",
            "description": "Filter pulls by head user and branch name in the format of `user:ref-name`. Example: `github:new-script-format`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "base",
            "type": "string",
            "description": "Filter pulls by base branch name. Example: `gh-pages`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "What to sort results by. Can be either `created`, `updated`, `popularity` (comment count) or `long-running` (age, filtering by pulls updated in the last month).",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated",
              "popularity",
              "long-running"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "The direction of the sort. Can be either `asc` or `desc`.",
            "default": "`desc` when sort is `created` or sort is not specified, otherwise `asc`",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                "id": 1,
                "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
                "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
                "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
                "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
                "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "number": 1347,
                "state": "open",
                "locked": true,
                "title": "new-feature",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "body": "Please pull these awesome changes",
                "labels": [
                  {
                    "id": 208045946,
                    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                    "name": "bug",
                    "description": "Something isn't working",
                    "color": "f29513",
                    "default": true
                  }
                ],
                "milestone": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                  "id": 1002604,
                  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                  "number": 1,
                  "state": "open",
                  "title": "v1.0",
                  "description": "Tracking milestone for version 1.0",
                  "creator": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "open_issues": 4,
                  "closed_issues": 8,
                  "created_at": "2011-04-10T20:09:31Z",
                  "updated_at": "2014-03-03T18:58:10Z",
                  "closed_at": "2013-02-12T13:22:01Z",
                  "due_on": "2012-10-09T23:39:01Z"
                },
                "active_lock_reason": "too heated",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:01:12Z",
                "closed_at": "2011-01-26T19:01:12Z",
                "merged_at": "2011-01-26T19:01:12Z",
                "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
                "assignee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "assignees": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  {
                    "login": "hubot",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/hubot",
                    "html_url": "https://github.com/hubot",
                    "followers_url": "https://api.github.com/users/hubot/followers",
                    "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                    "organizations_url": "https://api.github.com/users/hubot/orgs",
                    "repos_url": "https://api.github.com/users/hubot/repos",
                    "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/hubot/received_events",
                    "type": "User",
                    "site_admin": true
                  }
                ],
                "requested_reviewers": [
                  {
                    "login": "other_user",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/other_user",
                    "html_url": "https://github.com/other_user",
                    "followers_url": "https://api.github.com/users/other_user/followers",
                    "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                    "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                    "organizations_url": "https://api.github.com/users/other_user/orgs",
                    "repos_url": "https://api.github.com/users/other_user/repos",
                    "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/other_user/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "requested_teams": [
                  {
                    "id": 1,
                    "node_id": "MDQ6VGVhbTE=",
                    "url": "https://api.github.com/teams/1",
                    "name": "Justice League",
                    "slug": "justice-league",
                    "description": "A great team.",
                    "privacy": "closed",
                    "permission": "admin",
                    "members_url": "https://api.github.com/teams/1/members{/member}",
                    "repositories_url": "https://api.github.com/teams/1/repos",
                    "parent": null
                  }
                ],
                "head": {
                  "label": "octocat:new-topic",
                  "ref": "new-topic",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "repo": {
                    "id": 1296269,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                    "name": "Hello-World",
                    "full_name": "octocat/Hello-World",
                    "owner": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    },
                    "private": false,
                    "html_url": "https://github.com/octocat/Hello-World",
                    "description": "This your first repo!",
                    "fork": false,
                    "url": "https://api.github.com/repos/octocat/Hello-World",
                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                    "git_url": "git:github.com/octocat/Hello-World.git",
                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                    "clone_url": "https://github.com/octocat/Hello-World.git",
                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                    "homepage": "https://github.com",
                    "language": null,
                    "forks_count": 9,
                    "stargazers_count": 80,
                    "watchers_count": 80,
                    "size": 108,
                    "default_branch": "master",
                    "open_issues_count": 0,
                    "topics": [
                      "octocat",
                      "atom",
                      "electron",
                      "api"
                    ],
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_downloads": true,
                    "archived": false,
                    "disabled": false,
                    "pushed_at": "2011-01-26T19:06:43Z",
                    "created_at": "2011-01-26T19:01:12Z",
                    "updated_at": "2011-01-26T19:14:43Z",
                    "permissions": {
                      "admin": false,
                      "push": false,
                      "pull": true
                    },
                    "allow_rebase_merge": true,
                    "allow_squash_merge": true,
                    "allow_merge_commit": true,
                    "subscribers_count": 42,
                    "network_count": 0
                  }
                },
                "base": {
                  "label": "octocat:master",
                  "ref": "master",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "repo": {
                    "id": 1296269,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                    "name": "Hello-World",
                    "full_name": "octocat/Hello-World",
                    "owner": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    },
                    "private": false,
                    "html_url": "https://github.com/octocat/Hello-World",
                    "description": "This your first repo!",
                    "fork": false,
                    "url": "https://api.github.com/repos/octocat/Hello-World",
                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                    "git_url": "git:github.com/octocat/Hello-World.git",
                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                    "clone_url": "https://github.com/octocat/Hello-World.git",
                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                    "homepage": "https://github.com",
                    "language": null,
                    "forks_count": 9,
                    "stargazers_count": 80,
                    "watchers_count": 80,
                    "size": 108,
                    "default_branch": "master",
                    "open_issues_count": 0,
                    "topics": [
                      "octocat",
                      "atom",
                      "electron",
                      "api"
                    ],
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_downloads": true,
                    "archived": false,
                    "disabled": false,
                    "pushed_at": "2011-01-26T19:06:43Z",
                    "created_at": "2011-01-26T19:01:12Z",
                    "updated_at": "2011-01-26T19:14:43Z",
                    "permissions": {
                      "admin": false,
                      "push": false,
                      "pull": true
                    },
                    "allow_rebase_merge": true,
                    "allow_squash_merge": true,
                    "allow_merge_commit": true,
                    "subscribers_count": 42,
                    "network_count": 0
                  }
                },
                "_links": {
                  "self": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
                  },
                  "html": {
                    "href": "https://github.com/octocat/Hello-World/pull/1347"
                  },
                  "issue": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                  },
                  "comments": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
                  },
                  "review_comments": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
                  },
                  "review_comment": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
                  },
                  "commits": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
                  },
                  "statuses": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                  }
                },
                "author_association": "OWNER",
                "draft": false
              }
            ]
          }
        ],
        "idName": "list",
        "documentationUrl": "https://developer.github.com/v3/pulls/#list-pull-requests"
      },
      {
        "name": "Get a single pull request",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number",
        "previews": [
          {
            "name": "shadow-cat",
            "description": "**Note:** The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the [blog post](/changes/2019-02-14-draft-pull-requests) preview for more details. To access the new `draft` parameter during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.shadow-cat-preview\n\n```",
            "required": false
          },
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://developer.github.com/v3/pulls/#create-a-pull-request), or [edit](https://developer.github.com/v3/pulls/#update-a-pull-request) a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://developer.github.com/v3/git/#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
              "id": 1,
              "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
              "html_url": "https://github.com/octocat/Hello-World/pull/1347",
              "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
              "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
              "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
              "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
              "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "number": 1347,
              "state": "open",
              "locked": true,
              "title": "new-feature",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Please pull these awesome changes",
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "active_lock_reason": "too heated",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:01:12Z",
              "closed_at": "2011-01-26T19:01:12Z",
              "merged_at": "2011-01-26T19:01:12Z",
              "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                {
                  "login": "hubot",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/hubot",
                  "html_url": "https://github.com/hubot",
                  "followers_url": "https://api.github.com/users/hubot/followers",
                  "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                  "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                  "organizations_url": "https://api.github.com/users/hubot/orgs",
                  "repos_url": "https://api.github.com/users/hubot/repos",
                  "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/hubot/received_events",
                  "type": "User",
                  "site_admin": true
                }
              ],
              "requested_reviewers": [
                {
                  "login": "other_user",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/other_user",
                  "html_url": "https://github.com/other_user",
                  "followers_url": "https://api.github.com/users/other_user/followers",
                  "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                  "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                  "organizations_url": "https://api.github.com/users/other_user/orgs",
                  "repos_url": "https://api.github.com/users/other_user/repos",
                  "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/other_user/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "requested_teams": [
                {
                  "id": 1,
                  "node_id": "MDQ6VGVhbTE=",
                  "url": "https://api.github.com/teams/1",
                  "name": "Justice League",
                  "slug": "justice-league",
                  "description": "A great team.",
                  "privacy": "closed",
                  "permission": "admin",
                  "members_url": "https://api.github.com/teams/1/members{/member}",
                  "repositories_url": "https://api.github.com/teams/1/repos",
                  "parent": null
                }
              ],
              "head": {
                "label": "octocat:new-topic",
                "ref": "new-topic",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "base": {
                "label": "octocat:master",
                "ref": "master",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1347"
                },
                "issue": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                },
                "comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
                },
                "review_comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
                },
                "review_comment": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
                },
                "commits": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
                },
                "statuses": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              },
              "author_association": "OWNER",
              "draft": false,
              "merged": false,
              "mergeable": true,
              "rebaseable": true,
              "mergeable_state": "clean",
              "merged_by": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "comments": 10,
              "review_comments": 0,
              "maintainer_can_modify": true,
              "commits": 3,
              "additions": 100,
              "deletions": 3,
              "changed_files": 5
            },
            "description": "Pass the appropriate [media type](/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats."
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/pulls/#get-a-single-pull-request"
      },
      {
        "name": "Create a pull request",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls",
        "previews": [
          {
            "name": "shadow-cat",
            "description": "**Note:** The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the [blog post](/changes/2019-02-14-draft-pull-requests) preview for more details. To access the new `draft` parameter during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.shadow-cat-preview\n\n```",
            "required": false
          },
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The title of the pull request.",
            "required": true,
            "location": "body"
          },
          {
            "name": "head",
            "type": "string",
            "description": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "base",
            "type": "string",
            "description": "The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.",
            "required": true,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The contents of the pull request.",
            "required": false,
            "location": "body"
          },
          {
            "name": "maintainer_can_modify",
            "type": "boolean",
            "description": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
            "required": false,
            "location": "body"
          },
          {
            "name": "draft",
            "type": "boolean",
            "description": "Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "title": "Amazing new feature",
            "body": "Please pull this in!",
            "head": "octocat:new-feature",
            "base": "master"
          }
        ],
        "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
              "id": 1,
              "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
              "html_url": "https://github.com/octocat/Hello-World/pull/1347",
              "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
              "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
              "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
              "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
              "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "number": 1347,
              "state": "open",
              "locked": true,
              "title": "new-feature",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Please pull these awesome changes",
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "active_lock_reason": "too heated",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:01:12Z",
              "closed_at": "2011-01-26T19:01:12Z",
              "merged_at": "2011-01-26T19:01:12Z",
              "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                {
                  "login": "hubot",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/hubot",
                  "html_url": "https://github.com/hubot",
                  "followers_url": "https://api.github.com/users/hubot/followers",
                  "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                  "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                  "organizations_url": "https://api.github.com/users/hubot/orgs",
                  "repos_url": "https://api.github.com/users/hubot/repos",
                  "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/hubot/received_events",
                  "type": "User",
                  "site_admin": true
                }
              ],
              "requested_reviewers": [
                {
                  "login": "other_user",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/other_user",
                  "html_url": "https://github.com/other_user",
                  "followers_url": "https://api.github.com/users/other_user/followers",
                  "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                  "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                  "organizations_url": "https://api.github.com/users/other_user/orgs",
                  "repos_url": "https://api.github.com/users/other_user/repos",
                  "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/other_user/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "requested_teams": [
                {
                  "id": 1,
                  "node_id": "MDQ6VGVhbTE=",
                  "url": "https://api.github.com/teams/1",
                  "name": "Justice League",
                  "slug": "justice-league",
                  "description": "A great team.",
                  "privacy": "closed",
                  "permission": "admin",
                  "members_url": "https://api.github.com/teams/1/members{/member}",
                  "repositories_url": "https://api.github.com/teams/1/repos",
                  "parent": null
                }
              ],
              "head": {
                "label": "octocat:new-topic",
                "ref": "new-topic",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "base": {
                "label": "octocat:master",
                "ref": "master",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1347"
                },
                "issue": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                },
                "comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
                },
                "review_comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
                },
                "review_comment": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
                },
                "commits": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
                },
                "statuses": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              },
              "author_association": "OWNER",
              "draft": false,
              "merged": false,
              "mergeable": true,
              "rebaseable": true,
              "mergeable_state": "clean",
              "merged_by": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "comments": 10,
              "review_comments": 0,
              "maintainer_can_modify": true,
              "commits": 3,
              "additions": 100,
              "deletions": 3,
              "changed_files": 5
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create",
        "documentationUrl": "https://developer.github.com/v3/pulls/#create-a-pull-request"
      },
      {
        "name": "Create a Pull Request from an Issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls",
        "previews": [
          {
            "name": "shadow-cat",
            "description": "**Note:** The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the [blog post](/changes/2019-02-14-draft-pull-requests) preview for more details. To access the new `draft` parameter during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.shadow-cat-preview\n\n```",
            "required": false
          },
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue",
            "type": "integer",
            "description": "The issue number in this repository to turn into a Pull Request.",
            "required": true,
            "location": "body"
          },
          {
            "name": "head",
            "type": "string",
            "description": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "base",
            "type": "string",
            "description": "The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.",
            "required": true,
            "location": "body"
          },
          {
            "name": "maintainer_can_modify",
            "type": "boolean",
            "description": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
            "required": false,
            "location": "body"
          },
          {
            "name": "draft",
            "type": "boolean",
            "description": "Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "issue": 5,
            "head": "octocat:new-feature",
            "base": "master"
          }
        ],
        "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
              "id": 1,
              "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
              "html_url": "https://github.com/octocat/Hello-World/pull/1347",
              "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
              "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
              "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
              "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
              "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "number": 1347,
              "state": "open",
              "locked": true,
              "title": "new-feature",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Please pull these awesome changes",
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "active_lock_reason": "too heated",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:01:12Z",
              "closed_at": "2011-01-26T19:01:12Z",
              "merged_at": "2011-01-26T19:01:12Z",
              "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                {
                  "login": "hubot",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/hubot",
                  "html_url": "https://github.com/hubot",
                  "followers_url": "https://api.github.com/users/hubot/followers",
                  "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                  "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                  "organizations_url": "https://api.github.com/users/hubot/orgs",
                  "repos_url": "https://api.github.com/users/hubot/repos",
                  "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/hubot/received_events",
                  "type": "User",
                  "site_admin": true
                }
              ],
              "requested_reviewers": [
                {
                  "login": "other_user",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/other_user",
                  "html_url": "https://github.com/other_user",
                  "followers_url": "https://api.github.com/users/other_user/followers",
                  "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                  "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                  "organizations_url": "https://api.github.com/users/other_user/orgs",
                  "repos_url": "https://api.github.com/users/other_user/repos",
                  "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/other_user/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "requested_teams": [
                {
                  "id": 1,
                  "node_id": "MDQ6VGVhbTE=",
                  "url": "https://api.github.com/teams/1",
                  "name": "Justice League",
                  "slug": "justice-league",
                  "description": "A great team.",
                  "privacy": "closed",
                  "permission": "admin",
                  "members_url": "https://api.github.com/teams/1/members{/member}",
                  "repositories_url": "https://api.github.com/teams/1/repos",
                  "parent": null
                }
              ],
              "head": {
                "label": "octocat:new-topic",
                "ref": "new-topic",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "base": {
                "label": "octocat:master",
                "ref": "master",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1347"
                },
                "issue": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                },
                "comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
                },
                "review_comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
                },
                "review_comment": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
                },
                "commits": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
                },
                "statuses": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              },
              "author_association": "OWNER",
              "draft": false,
              "merged": false,
              "mergeable": true,
              "rebaseable": true,
              "mergeable_state": "clean",
              "merged_by": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "comments": 10,
              "review_comments": 0,
              "maintainer_can_modify": true,
              "commits": 3,
              "additions": 100,
              "deletions": 3,
              "changed_files": 5
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-from-issue",
        "documentationUrl": "https://developer.github.com/v3/pulls/#create-a-pull-request"
      },
      {
        "name": "Update a pull request",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pulls/:pull_number",
        "previews": [
          {
            "name": "shadow-cat",
            "description": "**Note:** The Draft Pull Request API is currently available for developers to preview. You can use this API to create a draft pull request or see whether a pull request is in draft state. See the [blog post](/changes/2019-02-14-draft-pull-requests) preview for more details. To access the new `draft` parameter during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.shadow-cat-preview\n\n```",
            "required": false
          },
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          },
          {
            "name": "sailor-v",
            "description": "**Note:** You can now use the REST API to add a reason when you lock an issue, and you will see lock reasons in responses that include issues or pull requests. You will also see lock reasons in `locked` events. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-10-lock-reason-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sailor-v-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The title of the pull request.",
            "required": false,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The contents of the pull request.",
            "required": false,
            "location": "body"
          },
          {
            "name": "state",
            "type": "string",
            "description": "State of this Pull Request. Either `open` or `closed`.",
            "required": false,
            "enum": [
              "open",
              "closed"
            ],
            "location": "body"
          },
          {
            "name": "base",
            "type": "string",
            "description": "The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "maintainer_can_modify",
            "type": "boolean",
            "description": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
            "required": false,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "requests": [
          {
            "title": "new title",
            "body": "updated body",
            "state": "open",
            "base": "master"
          }
        ],
        "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
              "id": 1,
              "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
              "html_url": "https://github.com/octocat/Hello-World/pull/1347",
              "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
              "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
              "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
              "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
              "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "number": 1347,
              "state": "open",
              "locked": true,
              "title": "new-feature",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Please pull these awesome changes",
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "active_lock_reason": "too heated",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:01:12Z",
              "closed_at": "2011-01-26T19:01:12Z",
              "merged_at": "2011-01-26T19:01:12Z",
              "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                {
                  "login": "hubot",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/hubot",
                  "html_url": "https://github.com/hubot",
                  "followers_url": "https://api.github.com/users/hubot/followers",
                  "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                  "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                  "organizations_url": "https://api.github.com/users/hubot/orgs",
                  "repos_url": "https://api.github.com/users/hubot/repos",
                  "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/hubot/received_events",
                  "type": "User",
                  "site_admin": true
                }
              ],
              "requested_reviewers": [
                {
                  "login": "other_user",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/other_user",
                  "html_url": "https://github.com/other_user",
                  "followers_url": "https://api.github.com/users/other_user/followers",
                  "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                  "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                  "organizations_url": "https://api.github.com/users/other_user/orgs",
                  "repos_url": "https://api.github.com/users/other_user/repos",
                  "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/other_user/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "requested_teams": [
                {
                  "id": 1,
                  "node_id": "MDQ6VGVhbTE=",
                  "url": "https://api.github.com/teams/1",
                  "name": "Justice League",
                  "slug": "justice-league",
                  "description": "A great team.",
                  "privacy": "closed",
                  "permission": "admin",
                  "members_url": "https://api.github.com/teams/1/members{/member}",
                  "repositories_url": "https://api.github.com/teams/1/repos",
                  "parent": null
                }
              ],
              "head": {
                "label": "octocat:new-topic",
                "ref": "new-topic",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "base": {
                "label": "octocat:master",
                "ref": "master",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1347"
                },
                "issue": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                },
                "comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
                },
                "review_comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
                },
                "review_comment": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
                },
                "commits": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
                },
                "statuses": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              },
              "author_association": "OWNER",
              "draft": false,
              "merged": false,
              "mergeable": true,
              "rebaseable": true,
              "mergeable_state": "clean",
              "merged_by": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "comments": 10,
              "review_comments": 0,
              "maintainer_can_modify": true,
              "commits": 3,
              "additions": 100,
              "deletions": 3,
              "changed_files": 5
            }
          }
        ],
        "idName": "update",
        "documentationUrl": "https://developer.github.com/v3/pulls/#update-a-pull-request"
      },
      {
        "name": "List commits on a pull request",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number/commits",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [Commit List API](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
                "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
                "commit": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "author": {
                    "name": "Monalisa Octocat",
                    "email": "support@github.com",
                    "date": "2011-04-14T16:00:49Z"
                  },
                  "committer": {
                    "name": "Monalisa Octocat",
                    "email": "support@github.com",
                    "date": "2011-04-14T16:00:49Z"
                  },
                  "message": "Fix all the bugs",
                  "tree": {
                    "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                    "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                  },
                  "comment_count": 0,
                  "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                  }
                },
                "author": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "committer": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "parents": [
                  {
                    "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                    "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                  }
                ]
              }
            ]
          }
        ],
        "idName": "list-commits",
        "documentationUrl": "https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request"
      },
      {
        "name": "List pull requests files",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number/files",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "**Note:** The response includes a maximum of 300 files.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "sha": "bbcd538c8e72b8c175046e27cc8f907076331401",
                "filename": "file1.txt",
                "status": "added",
                "additions": 103,
                "deletions": 21,
                "changes": 124,
                "blob_url": "https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt",
                "raw_url": "https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt",
                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "patch": "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
              }
            ]
          }
        ],
        "idName": "list-files",
        "documentationUrl": "https://developer.github.com/v3/pulls/#list-pull-requests-files"
      },
      {
        "name": "Get if a pull request has been merged",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number/merge",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "",
        "idName": "check-if-merged",
        "documentationUrl": "https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged"
      },
      {
        "name": "Merge a pull request (Merge Button)",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pull_number/merge",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "commit_title",
            "type": "string",
            "description": "Title for the automatic commit message.",
            "required": false,
            "location": "body"
          },
          {
            "name": "commit_message",
            "type": "string",
            "description": "Extra detail to append to automatic commit message.",
            "required": false,
            "location": "body"
          },
          {
            "name": "sha",
            "type": "string",
            "description": "SHA that pull request head must match to allow merge.",
            "required": false,
            "location": "body"
          },
          {
            "name": "merge_method",
            "type": "string",
            "description": "Merge method to use. Possible values are `merge`, `squash` or `rebase`. Default is `merge`.",
            "required": false,
            "enum": [
              "merge",
              "squash",
              "rebase"
            ],
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "triggersNotification": true,
        "idName": "merge",
        "documentationUrl": "https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button"
      },
      {
        "name": "List comments on a pull request",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number/comments",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the review comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Can be either `created` or `updated` comments.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "Can be either `asc` or `desc`. Ignored without `sort` parameter.",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only returns comments `updated` at or after this time.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "By default, review comments are ordered by ascending ID.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
                "id": 10,
                "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
                "pull_request_review_id": 42,
                "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
                "path": "file1.txt",
                "position": 1,
                "original_position": 4,
                "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
                "in_reply_to_id": 8,
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "body": "Great stuff",
                "created_at": "2011-04-14T16:00:49Z",
                "updated_at": "2011-04-14T16:00:49Z",
                "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
                "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
                "_links": {
                  "self": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                  },
                  "html": {
                    "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                  },
                  "pull_request": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                  }
                }
              }
            ]
          }
        ],
        "idName": "list-comments",
        "documentationUrl": "https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request"
      },
      {
        "name": "List comments in a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the review comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Can be either `created` or `updated` comments.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "Can be either `asc` or `desc`. Ignored without `sort` parameter.",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only returns comments `updated` at or after this time.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "By default, review comments are ordered by ascending ID.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
                "id": 10,
                "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
                "pull_request_review_id": 42,
                "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
                "path": "file1.txt",
                "position": 1,
                "original_position": 4,
                "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
                "in_reply_to_id": 8,
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "body": "Great stuff",
                "created_at": "2011-04-14T16:00:49Z",
                "updated_at": "2011-04-14T16:00:49Z",
                "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
                "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
                "_links": {
                  "self": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                  },
                  "html": {
                    "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                  },
                  "pull_request": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                  }
                }
              }
            ]
          }
        ],
        "idName": "list-comments-for-repo",
        "documentationUrl": "https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository"
      },
      {
        "name": "Get a single comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments/:comment_id",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the review comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
              "id": 10,
              "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
              "pull_request_review_id": 42,
              "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
              "path": "file1.txt",
              "position": 1,
              "original_position": 4,
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
              "in_reply_to_id": 8,
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Great stuff",
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z",
              "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                }
              }
            }
          }
        ],
        "idName": "get-comment",
        "documentationUrl": "https://developer.github.com/v3/pulls/comments/#get-a-single-comment"
      },
      {
        "name": "Create a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pull_number/comments",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The text of the comment.",
            "required": true,
            "location": "body"
          },
          {
            "name": "commit_id",
            "type": "string",
            "description": "The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the `position`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "path",
            "type": "string",
            "description": "The relative path to the file that necessitates a comment.",
            "required": true,
            "location": "body"
          },
          {
            "name": "position",
            "type": "integer",
            "description": "The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.",
            "required": true,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "requests": [
          {
            "body": "Nice change",
            "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "path": "file1.txt",
            "position": 4
          }
        ],
        "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
              "id": 10,
              "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
              "pull_request_review_id": 42,
              "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
              "path": "file1.txt",
              "position": 1,
              "original_position": 4,
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
              "in_reply_to_id": 8,
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Great stuff",
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z",
              "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                }
              }
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-comment",
        "documentationUrl": "https://developer.github.com/v3/pulls/comments/#create-a-comment"
      },
      {
        "name": "Create a comment reply",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pull_number/comments",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The text of the comment.",
            "required": true,
            "location": "body"
          },
          {
            "name": "in_reply_to",
            "type": "integer",
            "description": "The comment ID to reply to. **Note**: This must be the ID of a _top-level comment_, not a reply to that comment. Replies to replies are not supported.",
            "required": true,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "requests": [
          {
            "body": "Nice change",
            "in_reply_to": 4
          }
        ],
        "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
              "id": 10,
              "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
              "pull_request_review_id": 42,
              "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
              "path": "file1.txt",
              "position": 1,
              "original_position": 4,
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
              "in_reply_to_id": 8,
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Great stuff",
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z",
              "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                }
              }
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-comment-reply",
        "documentationUrl": "https://developer.github.com/v3/pulls/comments/#create-a-comment"
      },
      {
        "name": "Edit a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/pulls/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The text of the comment.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "body": "Nice change"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
              "id": 10,
              "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
              "pull_request_review_id": 42,
              "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
              "path": "file1.txt",
              "position": 1,
              "original_position": 4,
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
              "in_reply_to_id": 8,
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Great stuff",
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z",
              "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                }
              }
            }
          }
        ],
        "idName": "update-comment",
        "documentationUrl": "https://developer.github.com/v3/pulls/comments/#edit-a-comment"
      },
      {
        "name": "Delete a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-comment",
        "documentationUrl": "https://developer.github.com/v3/pulls/comments/#delete-a-comment"
      },
      {
        "name": "List review requests",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "users": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "teams": [
                {
                  "id": 1,
                  "node_id": "MDQ6VGVhbTE=",
                  "url": "https://api.github.com/teams/1",
                  "name": "Justice League",
                  "slug": "justice-league",
                  "description": "A great team.",
                  "privacy": "closed",
                  "permission": "admin",
                  "members_url": "https://api.github.com/teams/1/members{/member}",
                  "repositories_url": "https://api.github.com/teams/1/repos",
                  "parent": null
                }
              ]
            }
          }
        ],
        "idName": "list-review-requests",
        "documentationUrl": "https://developer.github.com/v3/pulls/review_requests/#list-review-requests"
      },
      {
        "name": "Create a review request",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "reviewers",
            "type": "string[]",
            "description": "An array of user `login`s that will be requested.",
            "required": false,
            "location": "body"
          },
          {
            "name": "team_reviewers",
            "type": "string[]",
            "description": "An array of team `slug`s that will be requested.",
            "required": false,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "requests": [
          {
            "reviewers": [
              "octocat",
              "hubot",
              "other_user"
            ],
            "team_reviewers": [
              "justice-league"
            ]
          }
        ],
        "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
              "id": 1,
              "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
              "html_url": "https://github.com/octocat/Hello-World/pull/1347",
              "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
              "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
              "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
              "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
              "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "number": 1347,
              "state": "open",
              "locked": true,
              "title": "new-feature",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Please pull these awesome changes",
              "labels": [
                {
                  "id": 208045946,
                  "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                  "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                  "name": "bug",
                  "description": "Something isn't working",
                  "color": "f29513",
                  "default": true
                }
              ],
              "milestone": {
                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                "id": 1002604,
                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                "number": 1,
                "state": "open",
                "title": "v1.0",
                "description": "Tracking milestone for version 1.0",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "open_issues": 4,
                "closed_issues": 8,
                "created_at": "2011-04-10T20:09:31Z",
                "updated_at": "2014-03-03T18:58:10Z",
                "closed_at": "2013-02-12T13:22:01Z",
                "due_on": "2012-10-09T23:39:01Z"
              },
              "active_lock_reason": "too heated",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:01:12Z",
              "closed_at": "2011-01-26T19:01:12Z",
              "merged_at": "2011-01-26T19:01:12Z",
              "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
              "assignee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assignees": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                {
                  "login": "hubot",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/hubot",
                  "html_url": "https://github.com/hubot",
                  "followers_url": "https://api.github.com/users/hubot/followers",
                  "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                  "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                  "organizations_url": "https://api.github.com/users/hubot/orgs",
                  "repos_url": "https://api.github.com/users/hubot/repos",
                  "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/hubot/received_events",
                  "type": "User",
                  "site_admin": true
                }
              ],
              "requested_reviewers": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                {
                  "login": "hubot",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/hubot",
                  "html_url": "https://github.com/hubot",
                  "followers_url": "https://api.github.com/users/hubot/followers",
                  "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                  "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                  "organizations_url": "https://api.github.com/users/hubot/orgs",
                  "repos_url": "https://api.github.com/users/hubot/repos",
                  "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/hubot/received_events",
                  "type": "User",
                  "site_admin": true
                },
                {
                  "login": "other_user",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/other_user",
                  "html_url": "https://github.com/other_user",
                  "followers_url": "https://api.github.com/users/other_user/followers",
                  "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                  "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                  "organizations_url": "https://api.github.com/users/other_user/orgs",
                  "repos_url": "https://api.github.com/users/other_user/repos",
                  "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/other_user/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "requested_teams": [
                {
                  "id": 1,
                  "node_id": "MDQ6VGVhbTE=",
                  "url": "https://api.github.com/teams/1",
                  "name": "Justice League",
                  "slug": "justice-league",
                  "description": "A great team.",
                  "privacy": "closed",
                  "permission": "admin",
                  "members_url": "https://api.github.com/teams/1/members{/member}",
                  "repositories_url": "https://api.github.com/teams/1/repos",
                  "parent": null
                }
              ],
              "head": {
                "label": "octocat:new-topic",
                "ref": "new-topic",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "base": {
                "label": "octocat:master",
                "ref": "master",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "repo": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                  "clone_url": "https://github.com/octocat/Hello-World.git",
                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                  "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                  "homepage": "https://github.com",
                  "language": null,
                  "forks_count": 9,
                  "stargazers_count": 80,
                  "watchers_count": 80,
                  "size": 108,
                  "default_branch": "master",
                  "open_issues_count": 0,
                  "topics": [
                    "octocat",
                    "atom",
                    "electron",
                    "api"
                  ],
                  "has_issues": true,
                  "has_projects": true,
                  "has_wiki": true,
                  "has_pages": false,
                  "has_downloads": true,
                  "archived": false,
                  "disabled": false,
                  "pushed_at": "2011-01-26T19:06:43Z",
                  "created_at": "2011-01-26T19:01:12Z",
                  "updated_at": "2011-01-26T19:14:43Z",
                  "permissions": {
                    "admin": false,
                    "push": false,
                    "pull": true
                  },
                  "allow_rebase_merge": true,
                  "allow_squash_merge": true,
                  "allow_merge_commit": true,
                  "subscribers_count": 42,
                  "network_count": 0
                }
              },
              "_links": {
                "self": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
                },
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/1347"
                },
                "issue": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                },
                "comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
                },
                "review_comments": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
                },
                "review_comment": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
                },
                "commits": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
                },
                "statuses": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              },
              "author_association": "OWNER",
              "draft": false
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-review-request",
        "documentationUrl": "https://developer.github.com/v3/pulls/review_requests/#create-a-review-request"
      },
      {
        "name": "Delete a review request",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "reviewers",
            "type": "string[]",
            "description": "An array of user `login`s that will be removed.",
            "required": false,
            "location": "body"
          },
          {
            "name": "team_reviewers",
            "type": "string[]",
            "description": "An array of team `slug`s that will be removed.",
            "required": false,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "requests": [
          {
            "reviewers": [
              "octocat",
              "hubot",
              "other_user"
            ],
            "team_reviewers": [
              "justice-league"
            ]
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-review-request",
        "documentationUrl": "https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request"
      },
      {
        "name": "List reviews on a pull request",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number/reviews",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "The list of reviews returns in chronological order.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 80,
                "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "body": "Here is the body for the review.",
                "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
                "state": "APPROVED",
                "html_url": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80",
                "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/12",
                "_links": {
                  "html": {
                    "href": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
                  },
                  "pull_request": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
                  }
                }
              }
            ],
            "description": "The list of reviews returns in chronological order."
          }
        ],
        "idName": "list-reviews",
        "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request"
      },
      {
        "name": "Get a single review",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "review_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 80,
              "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Here is the body for the review.",
              "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
              "state": "APPROVED",
              "html_url": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/12",
              "_links": {
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
                }
              }
            }
          }
        ],
        "idName": "get-review",
        "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#get-a-single-review"
      },
      {
        "name": "Delete a pending review",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "review_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 80,
              "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Here is the body for the review.",
              "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
              "state": "PENDING",
              "html_url": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/12",
              "_links": {
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
                }
              }
            }
          }
        ],
        "idName": "delete-pending-review",
        "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review"
      },
      {
        "name": "Get comments for a single review",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/comments",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "review_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
                "id": 10,
                "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw",
                "pull_request_review_id": 42,
                "diff_hunk": "@@ -16,33 +16,40 @@ public class Connection : IConnection...",
                "path": "file1.txt",
                "position": 1,
                "original_position": 4,
                "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "original_commit_id": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
                "in_reply_to_id": 8,
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "body": "Great stuff",
                "created_at": "2011-04-14T16:00:49Z",
                "updated_at": "2011-04-14T16:00:49Z",
                "html_url": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1",
                "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
                "_links": {
                  "self": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                  },
                  "html": {
                    "href": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                  },
                  "pull_request": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                  }
                }
              }
            ]
          }
        ],
        "idName": "get-comments-for-review",
        "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review"
      },
      {
        "name": "Create a pull request review",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pull_number/reviews",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "commit_id",
            "type": "string",
            "description": "The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the `position`. Defaults to the most recent commit in the pull request when you do not specify a value.",
            "required": false,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "**Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request review.",
            "required": false,
            "location": "body"
          },
          {
            "name": "event",
            "type": "string",
            "description": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this blank, you set the review action state to `PENDING`, which means you will need to [submit the pull request review](https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review) when you are ready.",
            "required": false,
            "enum": [
              "APPROVE",
              "REQUEST_CHANGES",
              "COMMENT"
            ],
            "location": "body"
          },
          {
            "name": "comments",
            "type": "object[]",
            "description": "Use the following table to specify the location, destination, and contents of the draft review comment.",
            "required": false,
            "location": "body"
          },
          {
            "name": "comments[].path",
            "type": "string",
            "description": "The relative path to the file that necessitates a review comment.",
            "required": true,
            "location": "body"
          },
          {
            "name": "comments[].position",
            "type": "integer",
            "description": "The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below.",
            "required": true,
            "location": "body"
          },
          {
            "name": "comments[].body",
            "type": "string",
            "description": "Text of the review comment.",
            "required": true,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "requests": [
          {
            "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
            "body": "This is close to perfect! Please address the suggested inline change.",
            "event": "REQUEST_CHANGES",
            "comments": [
              {
                "path": "file.md",
                "position": 6,
                "body": "Please add more information here, and fix this typo."
              }
            ]
          }
        ],
        "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 80,
              "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "This is close to perfect! Please address the suggested inline change.",
              "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
              "state": "CHANGES_REQUESTED",
              "html_url": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/12",
              "_links": {
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
                }
              }
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-review",
        "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review"
      },
      {
        "name": "Update a pull request review",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "review_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The body text of the pull request review.",
            "required": true,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "requests": [
          {
            "body": "This is close to perfect! Please address the suggested inline change. And add more about this."
          }
        ],
        "description": "Update the review summary comment with new text.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 80,
              "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "This is close to perfect! Please address the suggested inline change. And add more about this.",
              "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
              "state": "CHANGES_REQUESTED",
              "html_url": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/12",
              "_links": {
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
                }
              }
            }
          }
        ],
        "idName": "update-review",
        "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#update-a-pull-request-review"
      },
      {
        "name": "Submit a pull request review",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "review_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The body text of the pull request review",
            "required": false,
            "location": "body"
          },
          {
            "name": "event",
            "type": "string",
            "description": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.",
            "required": true,
            "enum": [
              "APPROVE",
              "REQUEST_CHANGES",
              "COMMENT"
            ],
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 80,
              "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Here is the body for the review.",
              "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
              "state": "APPROVED",
              "html_url": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/12",
              "_links": {
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
                }
              }
            }
          }
        ],
        "idName": "submit-review",
        "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review"
      },
      {
        "name": "Dismiss a pull request review",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "pull_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "review_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "message",
            "type": "string",
            "description": "The message for the pull request review dismissal",
            "required": true,
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"pull_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "pull_number"
              }
            }
          }
        ],
        "description": "**Note:** To dismiss a pull request review on a [protected branch](https://developer.github.com/v3/repos/branches/), you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 80,
              "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Here is the body for the review.",
              "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
              "state": "DISMISSED",
              "html_url": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80",
              "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/12",
              "_links": {
                "html": {
                  "href": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
                },
                "pull_request": {
                  "href": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
                }
              }
            }
          }
        ],
        "idName": "dismiss-review",
        "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review"
      }
    ],
    "rateLimit": [
      {
        "name": "Get your current rate limit status",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/rate_limit",
        "previews": [],
        "params": [],
        "description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Understanding your rate limit status**\n\nThe Search API has a [custom rate limit](https://developer.github.com/v3/search/#rate-limit), separate from the rate limit governing the rest of the REST API. The GraphQL API also has a [custom rate limit](/v4/guides/resource-limitations/#rate-limit) that is separate from and calculated differently than rate limits in the REST API.\n\nFor these reasons, the Rate Limit API response categorizes your rate limit. Under `resources`, you'll see four objects:\n\n*   The `core` object provides your rate limit status for all non-search-related resources in the REST API.\n*   The `search` object provides your rate limit status for the [Search API](https://developer.github.com/v3/search/).\n*   The `graphql` object provides your rate limit status for the [GraphQL API](/v4/).\n*   The `integration_manifest` object provides your rate limit status for the [GitHub App Manifest code conversion](https://developer.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/#3-you-exchange-the-temporary-code-to-retrieve-the-app-configuration) endpoint.\n\nFor more information on the headers and values in the rate limit response, see \"[Rate limiting](https://developer.github.com/v3/#rate-limiting).\"\n\nThe `rate` object (shown at the bottom of the response above) is deprecated.\n\nIf you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "resources": {
                "core": {
                  "limit": 5000,
                  "remaining": 4999,
                  "reset": 1372700873
                },
                "search": {
                  "limit": 30,
                  "remaining": 18,
                  "reset": 1372697452
                },
                "graphql": {
                  "limit": 5000,
                  "remaining": 4993,
                  "reset": 1372700389
                },
                "integration_manifest": {
                  "limit": 5000,
                  "remaining": 4999,
                  "reset": 1551806725
                }
              },
              "rate": {
                "limit": 5000,
                "remaining": 4999,
                "reset": 1372700873
              }
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status"
      }
    ],
    "reactions": [
      {
        "name": "List reactions for a commit comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/comments/:comment_id/reactions",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a commit comment.",
            "required": false,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List the reactions to a [commit comment](https://developer.github.com/v3/repos/comments/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDg6UmVhY3Rpb24x",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "content": "heart",
                "created_at": "2016-05-20T20:09:31Z"
              }
            ]
          }
        ],
        "idName": "list-for-commit-comment",
        "documentationUrl": "https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment"
      },
      {
        "name": "Create reaction for a commit comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/comments/:comment_id/reactions",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the commit comment.",
            "required": true,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "content": "heart"
          }
        ],
        "description": "Create a reaction to a [commit comment](https://developer.github.com/v3/repos/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this commit comment.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDg6UmVhY3Rpb24x",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "content": "heart",
              "created_at": "2016-05-20T20:09:31Z"
            }
          }
        ],
        "idName": "create-for-commit-comment",
        "documentationUrl": "https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment"
      },
      {
        "name": "List reactions for an issue",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/:issue_number/reactions",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue.",
            "required": false,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "description": "List the reactions to an [issue](https://developer.github.com/v3/issues/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDg6UmVhY3Rpb24x",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "content": "heart",
                "created_at": "2016-05-20T20:09:31Z"
              }
            ]
          }
        ],
        "idName": "list-for-issue",
        "documentationUrl": "https://developer.github.com/v3/reactions/#list-reactions-for-an-issue"
      },
      {
        "name": "Create reaction for an issue",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/:issue_number/reactions",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "issue_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the issue.",
            "required": true,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "body"
          },
          {
            "name": "number",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"number\" parameter renamed to \"issue_number\"",
              "before": {
                "name": "number"
              },
              "after": {
                "name": "issue_number"
              }
            }
          }
        ],
        "requests": [
          {
            "content": "heart"
          }
        ],
        "description": "Create a reaction to an [issue](https://developer.github.com/v3/issues/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDg6UmVhY3Rpb24x",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "content": "heart",
              "created_at": "2016-05-20T20:09:31Z"
            }
          }
        ],
        "idName": "create-for-issue",
        "documentationUrl": "https://developer.github.com/v3/reactions/#create-reaction-for-an-issue"
      },
      {
        "name": "List reactions for an issue comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/issues/comments/:comment_id/reactions",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue comment.",
            "required": false,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List the reactions to an [issue comment](https://developer.github.com/v3/issues/comments/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDg6UmVhY3Rpb24x",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "content": "heart",
                "created_at": "2016-05-20T20:09:31Z"
              }
            ]
          }
        ],
        "idName": "list-for-issue-comment",
        "documentationUrl": "https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment"
      },
      {
        "name": "Create reaction for an issue comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/issues/comments/:comment_id/reactions",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the issue comment.",
            "required": true,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "content": "heart"
          }
        ],
        "description": "Create a reaction to an [issue comment](https://developer.github.com/v3/issues/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue comment.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDg6UmVhY3Rpb24x",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "content": "heart",
              "created_at": "2016-05-20T20:09:31Z"
            }
          }
        ],
        "idName": "create-for-issue-comment",
        "documentationUrl": "https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment"
      },
      {
        "name": "List reactions for a pull request review comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pulls/comments/:comment_id/reactions",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a pull request review comment.",
            "required": false,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List the reactions to a [pull request review comment](https://developer.github.com/v3/pulls/comments/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDg6UmVhY3Rpb24x",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "content": "heart",
                "created_at": "2016-05-20T20:09:31Z"
              }
            ]
          }
        ],
        "idName": "list-for-pull-request-review-comment",
        "documentationUrl": "https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment"
      },
      {
        "name": "Create reaction for a pull request review comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pulls/comments/:comment_id/reactions",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the pull request review comment.",
            "required": true,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "content": "heart"
          }
        ],
        "description": "Create a reaction to a [pull request review comment](https://developer.github.com/v3/pulls/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this pull request review comment.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDg6UmVhY3Rpb24x",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "content": "heart",
              "created_at": "2016-05-20T20:09:31Z"
            }
          }
        ],
        "idName": "create-for-pull-request-review-comment",
        "documentationUrl": "https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment"
      },
      {
        "name": "List reactions for a team discussion",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/discussions/:discussion_number/reactions",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion.",
            "required": false,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List the reactions to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDg6UmVhY3Rpb24x",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "content": "heart",
                "created_at": "2016-05-20T20:09:31Z"
              }
            ]
          }
        ],
        "idName": "list-for-team-discussion",
        "documentationUrl": "https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion"
      },
      {
        "name": "Create reaction for a team discussion",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/teams/:team_id/discussions/:discussion_number/reactions",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the team discussion.",
            "required": true,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "content": "heart"
          }
        ],
        "description": "Create a reaction to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDg6UmVhY3Rpb24x",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "content": "heart",
              "created_at": "2016-05-20T20:09:31Z"
            }
          }
        ],
        "idName": "create-for-team-discussion",
        "documentationUrl": "https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion"
      },
      {
        "name": "List reactions for a team discussion comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion comment.",
            "required": false,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List the reactions to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDg6UmVhY3Rpb24x",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "content": "heart",
                "created_at": "2016-05-20T20:09:31Z"
              }
            ]
          }
        ],
        "idName": "list-for-team-discussion-comment",
        "documentationUrl": "https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment"
      },
      {
        "name": "Create reaction for a team discussion comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the team discussion comment.",
            "required": true,
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray"
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "content": "heart"
          }
        ],
        "description": "Create a reaction to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDg6UmVhY3Rpb24x",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "content": "heart",
              "created_at": "2016-05-20T20:09:31Z"
            }
          }
        ],
        "idName": "create-for-team-discussion-comment",
        "documentationUrl": "https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment"
      },
      {
        "name": "Delete a reaction",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/reactions/:reaction_id",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** APIs for managing reactions are currently available for developers to preview. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "reaction_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://developer.github.com/v3/teams/discussions/) or [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/).",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete",
        "documentationUrl": "https://developer.github.com/v3/reactions/#delete-a-reaction"
      }
    ],
    "repos": [
      {
        "name": "List your repositories",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/repos",
        "previews": [],
        "params": [
          {
            "name": "visibility",
            "type": "string",
            "description": "Can be one of `all`, `public`, or `private`.",
            "default": "all",
            "required": false,
            "enum": [
              "all",
              "public",
              "private"
            ],
            "location": "query"
          },
          {
            "name": "affiliation",
            "type": "string",
            "description": "Comma-separated list of values. Can include:  \n\\* `owner`: Repositories that are owned by the authenticated user.  \n\\* `collaborator`: Repositories that the user has been added to as a collaborator.  \n\\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.",
            "default": "owner,collaborator,organization_member",
            "required": false,
            "location": "query"
          },
          {
            "name": "type",
            "type": "string",
            "description": "Can be one of `all`, `owner`, `public`, `private`, `member`. Default: `all`  \n  \nWill cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.",
            "default": "all",
            "required": false,
            "enum": [
              "all",
              "owner",
              "public",
              "private",
              "member"
            ],
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
            "default": "full_name",
            "required": false,
            "enum": [
              "created",
              "updated",
              "pushed",
              "full_name"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "Can be one of `asc` or `desc`.",
            "default": "`asc` when using `full_name`, otherwise `desc`",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.",
        "idName": "list",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-your-repositories"
      },
      {
        "name": "List user repositories",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/repos",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "type",
            "type": "string",
            "description": "Can be one of `all`, `owner`, `member`.",
            "default": "owner",
            "required": false,
            "enum": [
              "all",
              "owner",
              "member"
            ],
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
            "default": "full_name",
            "required": false,
            "enum": [
              "created",
              "updated",
              "pushed",
              "full_name"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "Can be one of `asc` or `desc`.",
            "default": "`asc` when using `full_name`, otherwise `desc`",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List public repositories for the specified user.",
        "idName": "list-for-user",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-user-repositories"
      },
      {
        "name": "List organization repositories",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/repos",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "type",
            "type": "string",
            "description": "Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`.",
            "default": "all",
            "required": false,
            "enum": [
              "all",
              "public",
              "private",
              "forks",
              "sources",
              "member"
            ],
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
            "default": "created",
            "required": false,
            "enum": [
              "created",
              "updated",
              "pushed",
              "full_name"
            ],
            "location": "query"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "Can be one of `asc` or `desc`.",
            "default": "when using `full_name`: `asc`, otherwise `desc`",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List repositories for the specified org.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "subscribers_count": 42,
                "network_count": 0,
                "license": {
                  "key": "mit",
                  "name": "MIT License",
                  "spdx_id": "MIT",
                  "url": "https://api.github.com/licenses/mit",
                  "node_id": "MDc6TGljZW5zZW1pdA=="
                }
              }
            ]
          }
        ],
        "idName": "list-for-org",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-organization-repositories"
      },
      {
        "name": "List all public repositories",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repositories",
        "previews": [],
        "params": [
          {
            "name": "since",
            "type": "string",
            "description": "The integer ID of the last Repository that you've seen.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "This provides a dump of every public repository, in the order that they were created.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of repositories.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
              }
            ]
          }
        ],
        "idName": "list-public",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-all-public-repositories"
      },
      {
        "method": "POST",
        "path": "/user/repos",
        "enabledForApps": true,
        "name": "Create a new repository for the authenticated user",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "The name of the repository.",
            "required": true,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A short description of the repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "homepage",
            "type": "string",
            "description": "A URL with more information about the repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "private",
            "type": "boolean",
            "description": "Either `true` to create a private repository or `false` to create a public one. Creating private repositories requires a paid GitHub account.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_issues",
            "type": "boolean",
            "description": "Either `true` to enable issues for this repository or `false` to disable them.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_projects",
            "type": "boolean",
            "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_wiki",
            "type": "boolean",
            "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "team_id",
            "type": "integer",
            "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
            "required": false,
            "location": "body"
          },
          {
            "name": "auto_init",
            "type": "boolean",
            "description": "Pass `true` to create an initial commit with empty README.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "gitignore_template",
            "type": "string",
            "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
            "required": false,
            "location": "body"
          },
          {
            "name": "license_template",
            "type": "string",
            "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_squash_merge",
            "type": "boolean",
            "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_merge_commit",
            "type": "boolean",
            "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_rebase_merge",
            "type": "boolean",
            "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
            "default": true,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "Hello-World",
            "description": "This is your first repository",
            "homepage": "https://github.com",
            "private": false,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true
          }
        ],
        "description": "**Note**: There are two endpoints for creating a repository: one to create a repository on a user account, and one to create a repository in an organization. The organization endpoint is fully enabled for [GitHub Apps](https://developer.github.com/v3/apps/available-endpoints/), whereas the user endpoint is enabled only for [user-to-server requests](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#user-to-server-requests).\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "allow_squash_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0
            }
          }
        ],
        "idName": "create-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/repos/#create"
      },
      {
        "method": "POST",
        "path": "/orgs/:org/repos",
        "enabledForApps": true,
        "name": "Create a new repository in this organization",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the repository.",
            "required": true,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A short description of the repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "homepage",
            "type": "string",
            "description": "A URL with more information about the repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "private",
            "type": "boolean",
            "description": "Either `true` to create a private repository or `false` to create a public one. Creating private repositories requires a paid GitHub account.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_issues",
            "type": "boolean",
            "description": "Either `true` to enable issues for this repository or `false` to disable them.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_projects",
            "type": "boolean",
            "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_wiki",
            "type": "boolean",
            "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "team_id",
            "type": "integer",
            "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
            "required": false,
            "location": "body"
          },
          {
            "name": "auto_init",
            "type": "boolean",
            "description": "Pass `true` to create an initial commit with empty README.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "gitignore_template",
            "type": "string",
            "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
            "required": false,
            "location": "body"
          },
          {
            "name": "license_template",
            "type": "string",
            "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_squash_merge",
            "type": "boolean",
            "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_merge_commit",
            "type": "boolean",
            "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_rebase_merge",
            "type": "boolean",
            "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
            "default": true,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "Hello-World",
            "description": "This is your first repository",
            "homepage": "https://github.com",
            "private": false,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true
          }
        ],
        "description": "**Note**: There are two endpoints for creating a repository: one to create a repository on a user account, and one to create a repository in an organization. The organization endpoint is fully enabled for [GitHub Apps](https://developer.github.com/v3/apps/available-endpoints/), whereas the user endpoint is enabled only for [user-to-server requests](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#user-to-server-requests).\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "allow_squash_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0
            }
          }
        ],
        "idName": "create-in-org",
        "documentationUrl": "https://developer.github.com/v3/repos/#create"
      },
      {
        "name": "Get",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "allow_squash_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0,
              "license": {
                "key": "mit",
                "name": "MIT License",
                "spdx_id": "MIT",
                "url": "https://api.github.com/licenses/mit",
                "node_id": "MDc6TGljZW5zZW1pdA=="
              },
              "organization": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "parent": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              },
              "source": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            },
            "description": "The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network."
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/repos/#get"
      },
      {
        "name": "Edit",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the repository.",
            "required": true,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A short description of the repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "homepage",
            "type": "string",
            "description": "A URL with more information about the repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "private",
            "type": "boolean",
            "description": "Either `true` to make the repository private or `false` to make it public. Creating private repositories requires a paid GitHub account. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_issues",
            "type": "boolean",
            "description": "Either `true` to enable issues for this repository or `false` to disable them.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_projects",
            "type": "boolean",
            "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "has_wiki",
            "type": "boolean",
            "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "default_branch",
            "type": "string",
            "description": "Updates the default branch for this repository.",
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_squash_merge",
            "type": "boolean",
            "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_merge_commit",
            "type": "boolean",
            "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "allow_rebase_merge",
            "type": "boolean",
            "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "archived",
            "type": "boolean",
            "description": "`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.",
            "default": false,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "Hello-World",
            "description": "This is your first repository",
            "homepage": "https://github.com",
            "private": true,
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true
          }
        ],
        "description": "**Note**: To edit a repository's topics, use the [`topics` endpoint](#replace-all-topics-for-a-repository).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "allow_squash_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0,
              "organization": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "parent": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              },
              "source": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            }
          }
        ],
        "idName": "update",
        "documentationUrl": "https://developer.github.com/v3/repos/#edit"
      },
      {
        "name": "List all topics for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/topics",
        "previews": [
          {
            "name": "mercy",
            "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mercy-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "names": [
                "octocat",
                "atom",
                "electron",
                "api"
              ]
            }
          }
        ],
        "idName": "list-topics",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-all-topics-for-a-repository"
      },
      {
        "name": "Replace all topics for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/topics",
        "previews": [
          {
            "name": "mercy",
            "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mercy-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "names",
            "type": "string[]",
            "description": "An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "names": [
              "octocat",
              "atom",
              "electron",
              "api"
            ]
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "names": [
                "octocat",
                "atom",
                "electron",
                "api"
              ]
            }
          }
        ],
        "idName": "replace-topics",
        "documentationUrl": "https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository"
      },
      {
        "name": "Enable vulnerability alerts",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/vulnerability-alerts",
        "previews": [
          {
            "name": "dorian",
            "description": "**Note:** Enabling and disabling vulnerability alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dorian-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Enables vulnerability alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "enable-vulnerability-alerts",
        "documentationUrl": "https://developer.github.com/v3/repos/#enable-vulnerability-alerts"
      },
      {
        "name": "Disable vulnerability alerts",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/vulnerability-alerts",
        "previews": [
          {
            "name": "dorian",
            "description": "**Note:** Enabling and disabling vulnerability alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dorian-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Disables vulnerability alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "disable-vulnerability-alerts",
        "documentationUrl": "https://developer.github.com/v3/repos/#disable-vulnerability-alerts"
      },
      {
        "name": "List contributors",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/contributors",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "anon",
            "type": "string",
            "description": "Set to `1` or `true` to include anonymous contributors in results.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.",
        "idName": "list-contributors",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-contributors"
      },
      {
        "name": "List languages",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/languages",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "C": 78769,
              "Python": 7769
            }
          }
        ],
        "idName": "list-languages",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-languages"
      },
      {
        "name": "List teams",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/teams",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          }
        ],
        "idName": "list-teams",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-teams"
      },
      {
        "name": "List tags",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/tags",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "name": "v0.1",
                "commit": {
                  "sha": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc",
                  "url": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
                },
                "zipball_url": "https://github.com/octocat/Hello-World/zipball/v0.1",
                "tarball_url": "https://github.com/octocat/Hello-World/tarball/v0.1"
              }
            ]
          }
        ],
        "idName": "list-tags",
        "documentationUrl": "https://developer.github.com/v3/repos/#list-tags"
      },
      {
        "name": "Delete a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          },
          {
            "headers": {
              "status": "403 Forbidden",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "message": "Organization members cannot delete repositories.",
              "documentation_url": "https://developer.github.com/v3/repos/#delete-a-repository"
            },
            "description": "If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:"
          }
        ],
        "idName": "delete",
        "documentationUrl": "https://developer.github.com/v3/repos/#delete-a-repository"
      },
      {
        "name": "Transfer a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/transfer",
        "previews": [
          {
            "name": "nightshade",
            "description": "**Note:** The [Repository Transfer API](/changes/2017-11-09-repository-transfer-api-preview) is currently available for developers to preview. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.nightshade-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "new_owner",
            "type": "string",
            "description": "**Required:** The username or organization name the repository will be transferred to.",
            "required": false,
            "location": "body"
          },
          {
            "name": "team_ids",
            "type": "integer[]",
            "description": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "new_owner": "github",
            "team_ids": [
              12,
              345
            ]
          }
        ],
        "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).",
        "responses": [
          {
            "headers": {
              "status": "202 Accepted",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "allow_squash_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0
            }
          }
        ],
        "idName": "transfer",
        "documentationUrl": "https://developer.github.com/v3/repos/#transfer-a-repository"
      },
      {
        "name": "List branches",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "protected",
            "type": "boolean",
            "description": "Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "name": "master",
                "commit": {
                  "sha": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc",
                  "url": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
                },
                "protected": true,
                "protection": {
                  "enabled": true,
                  "required_status_checks": {
                    "enforcement_level": "non_admins",
                    "contexts": [
                      "ci-test",
                      "linter"
                    ]
                  }
                },
                "protection_url": "https://api.github.com/repos/octocat/hello-world/branches/master/protection"
              }
            ]
          }
        ],
        "idName": "list-branches",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#list-branches"
      },
      {
        "name": "Get branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "name": "master",
              "commit": {
                "sha": "7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
                "node_id": "MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==",
                "commit": {
                  "author": {
                    "name": "The Octocat",
                    "date": "2012-03-06T15:06:50-08:00",
                    "email": "octocat@nowhere.com"
                  },
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
                  "message": "Merge pull request #6 from Spaceghost/patch-1\n\nNew line at end of file.",
                  "tree": {
                    "sha": "b4eecafa9be2f2006ce1b709d6857b07069b4608",
                    "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608"
                  },
                  "committer": {
                    "name": "The Octocat",
                    "date": "2012-03-06T15:06:50-08:00",
                    "email": "octocat@nowhere.com"
                  },
                  "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                  }
                },
                "author": {
                  "gravatar_id": "",
                  "avatar_url": "https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
                  "url": "https://api.github.com/users/octocat",
                  "id": 583231,
                  "login": "octocat"
                },
                "parents": [
                  {
                    "sha": "553c2077f0edc3d5dc5d17262f6aa498e69d6f8e",
                    "url": "https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e"
                  },
                  {
                    "sha": "762941318ee16e59dabbacb1b4049eec22f0d303",
                    "url": "https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303"
                  }
                ],
                "url": "https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
                "committer": {
                  "gravatar_id": "",
                  "avatar_url": "https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
                  "url": "https://api.github.com/users/octocat",
                  "id": 583231,
                  "login": "octocat"
                }
              },
              "_links": {
                "html": "https://github.com/octocat/Hello-World/tree/master",
                "self": "https://api.github.com/repos/octocat/Hello-World/branches/master"
              },
              "protected": true,
              "protection": {
                "enabled": true,
                "required_status_checks": {
                  "enforcement_level": "non_admins",
                  "contexts": [
                    "ci-test",
                    "linter"
                  ]
                }
              },
              "protection_url": "https://api.github.com/repos/octocat/hello-world/branches/master/protection"
            }
          }
        ],
        "idName": "get-branch",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-branch"
      },
      {
        "name": "Get branch protection",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
        "previews": [
          {
            "name": "luke-cage",
            "description": "**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.luke-cage-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection",
              "required_status_checks": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks",
                "strict": true,
                "contexts": [
                  "continuous-integration/travis-ci"
                ],
                "contexts_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
              },
              "enforce_admins": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins",
                "enabled": true
              },
              "required_pull_request_reviews": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews",
                "dismissal_restrictions": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions",
                  "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users",
                  "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams",
                  "users": [
                    {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    }
                  ],
                  "teams": [
                    {
                      "id": 1,
                      "node_id": "MDQ6VGVhbTE=",
                      "url": "https://api.github.com/teams/1",
                      "name": "Justice League",
                      "slug": "justice-league",
                      "description": "A great team.",
                      "privacy": "closed",
                      "permission": "admin",
                      "members_url": "https://api.github.com/teams/1/members{/member}",
                      "repositories_url": "https://api.github.com/teams/1/repos",
                      "parent": null
                    }
                  ]
                },
                "dismiss_stale_reviews": true,
                "require_code_owner_reviews": true,
                "required_approving_review_count": 2
              },
              "restrictions": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions",
                "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users",
                "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams",
                "users": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "teams": [
                  {
                    "id": 1,
                    "node_id": "MDQ6VGVhbTE=",
                    "url": "https://api.github.com/teams/1",
                    "name": "Justice League",
                    "slug": "justice-league",
                    "description": "A great team.",
                    "privacy": "closed",
                    "permission": "admin",
                    "members_url": "https://api.github.com/teams/1/members{/member}",
                    "repositories_url": "https://api.github.com/teams/1/repos",
                    "parent": null
                  }
                ]
              }
            }
          }
        ],
        "idName": "get-branch-protection",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-branch-protection"
      },
      {
        "name": "Update branch protection",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
        "previews": [
          {
            "name": "luke-cage",
            "description": "**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.luke-cage-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "required_status_checks",
            "type": "object",
            "description": "Require status checks to pass before merging. Set to `null` to disable.",
            "required": true,
            "allowNull": true,
            "location": "body"
          },
          {
            "name": "required_status_checks.strict",
            "type": "boolean",
            "description": "Require branches to be up to date before merging.",
            "required": true,
            "location": "body"
          },
          {
            "name": "required_status_checks.contexts",
            "type": "string[]",
            "description": "The list of status checks to require in order to merge into this branch",
            "required": true,
            "location": "body"
          },
          {
            "name": "enforce_admins",
            "type": "boolean",
            "description": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.",
            "required": true,
            "allowNull": true,
            "location": "body"
          },
          {
            "name": "required_pull_request_reviews",
            "type": "object",
            "description": "Require at least one approving review on a pull request, before merging. Set to `null` to disable.",
            "required": true,
            "allowNull": true,
            "location": "body"
          },
          {
            "name": "required_pull_request_reviews.dismissal_restrictions",
            "type": "object",
            "description": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
            "required": false,
            "location": "body"
          },
          {
            "name": "required_pull_request_reviews.dismissal_restrictions.users",
            "type": "string[]",
            "description": "The list of user `login`s with dismissal access",
            "required": false,
            "location": "body"
          },
          {
            "name": "required_pull_request_reviews.dismissal_restrictions.teams",
            "type": "string[]",
            "description": "The list of team `slug`s with dismissal access",
            "required": false,
            "location": "body"
          },
          {
            "name": "required_pull_request_reviews.dismiss_stale_reviews",
            "type": "boolean",
            "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
            "required": false,
            "location": "body"
          },
          {
            "name": "required_pull_request_reviews.require_code_owner_reviews",
            "type": "boolean",
            "description": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.",
            "required": false,
            "location": "body"
          },
          {
            "name": "required_pull_request_reviews.required_approving_review_count",
            "type": "integer",
            "description": "Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
            "required": false,
            "location": "body"
          },
          {
            "name": "restrictions",
            "type": "object",
            "description": "Restrict who can push to this branch. Team and user `restrictions` are only available for organization-owned repositories. Set to `null` to disable.",
            "required": true,
            "allowNull": true,
            "location": "body"
          },
          {
            "name": "restrictions.users",
            "type": "string[]",
            "description": "The list of user `login`s with push access",
            "required": false,
            "location": "body"
          },
          {
            "name": "restrictions.teams",
            "type": "string[]",
            "description": "The list of team `slug`s with push access",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "required_status_checks": {
              "strict": true,
              "contexts": [
                "continuous-integration/travis-ci"
              ]
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "dismissal_restrictions": {
                "users": [
                  "octocat"
                ],
                "teams": [
                  "justice-league"
                ]
              },
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 2
            },
            "restrictions": {
              "users": [
                "octocat"
              ],
              "teams": [
                "justice-league"
              ]
            }
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nProtecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users and teams in total is limited to 100 items.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection",
              "required_status_checks": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks",
                "strict": true,
                "contexts": [
                  "continuous-integration/travis-ci"
                ],
                "contexts_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
              },
              "enforce_admins": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins",
                "enabled": true
              },
              "required_pull_request_reviews": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews",
                "dismissal_restrictions": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions",
                  "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users",
                  "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams",
                  "users": [
                    {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    }
                  ],
                  "teams": [
                    {
                      "id": 1,
                      "node_id": "MDQ6VGVhbTE=",
                      "url": "https://api.github.com/teams/1",
                      "name": "Justice League",
                      "slug": "justice-league",
                      "description": "A great team.",
                      "privacy": "closed",
                      "permission": "admin",
                      "members_url": "https://api.github.com/teams/1/members{/member}",
                      "repositories_url": "https://api.github.com/teams/1/repos",
                      "parent": null
                    }
                  ]
                },
                "dismiss_stale_reviews": true,
                "require_code_owner_reviews": true,
                "required_approving_review_count": 2
              },
              "restrictions": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions",
                "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users",
                "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams",
                "users": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "teams": [
                  {
                    "id": 1,
                    "node_id": "MDQ6VGVhbTE=",
                    "url": "https://api.github.com/teams/1",
                    "name": "Justice League",
                    "slug": "justice-league",
                    "description": "A great team.",
                    "privacy": "closed",
                    "permission": "admin",
                    "members_url": "https://api.github.com/teams/1/members{/member}",
                    "repositories_url": "https://api.github.com/teams/1/repos",
                    "parent": null
                  }
                ]
              }
            }
          }
        ],
        "idName": "update-branch-protection",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#update-branch-protection"
      },
      {
        "name": "Remove branch protection",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-branch-protection",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-branch-protection"
      },
      {
        "name": "Get required status checks of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks",
              "strict": true,
              "contexts": [
                "continuous-integration/travis-ci"
              ],
              "contexts_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
            }
          }
        ],
        "idName": "get-protected-branch-required-status-checks",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch"
      },
      {
        "name": "Update required status checks of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "strict",
            "type": "boolean",
            "description": "Require branches to be up to date before merging.",
            "required": false,
            "location": "body"
          },
          {
            "name": "contexts",
            "type": "string[]",
            "description": "The list of status checks to require in order to merge into this branch",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "strict": true,
            "contexts": [
              "continuous-integration/travis-ci"
            ]
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks",
              "strict": true,
              "contexts": [
                "continuous-integration/travis-ci"
              ],
              "contexts_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
            }
          }
        ],
        "idName": "update-protected-branch-required-status-checks",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch"
      },
      {
        "name": "Remove required status checks of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "idName": "remove-protected-branch-required-status-checks",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch"
      },
      {
        "name": "List required status checks contexts of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "idName": "list-protected-branch-required-status-checks-contexts",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch"
      },
      {
        "name": "Replace required status checks contexts of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "contexts",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "continuous-integration/travis-ci"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              "continuous-integration/travis-ci"
            ]
          }
        ],
        "idName": "replace-protected-branch-required-status-checks-contexts",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch"
      },
      {
        "name": "Add required status checks contexts of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "contexts",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "continuous-integration/jenkins"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              "continuous-integration/travis-ci",
              "continuous-integration/jenkins"
            ]
          }
        ],
        "idName": "add-protected-branch-required-status-checks-contexts",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch"
      },
      {
        "name": "Remove required status checks contexts of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "contexts",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "continuous-integration/jenkins"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              "continuous-integration/travis-ci"
            ]
          }
        ],
        "idName": "remove-protected-branch-required-status-checks-contexts",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch"
      },
      {
        "name": "Get pull request review enforcement of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "previews": [
          {
            "name": "luke-cage",
            "description": "**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.luke-cage-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "idName": "get-protected-branch-pull-request-review-enforcement",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch"
      },
      {
        "name": "Update pull request review enforcement of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "previews": [
          {
            "name": "luke-cage",
            "description": "**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.luke-cage-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "dismissal_restrictions",
            "type": "object",
            "description": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
            "required": false,
            "location": "body"
          },
          {
            "name": "dismissal_restrictions.users",
            "type": "string[]",
            "description": "The list of user `login`s with dismissal access",
            "required": false,
            "location": "body"
          },
          {
            "name": "dismissal_restrictions.teams",
            "type": "string[]",
            "description": "The list of team `slug`s with dismissal access",
            "required": false,
            "location": "body"
          },
          {
            "name": "dismiss_stale_reviews",
            "type": "boolean",
            "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
            "required": false,
            "location": "body"
          },
          {
            "name": "require_code_owner_reviews",
            "type": "boolean",
            "description": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) have reviewed.",
            "required": false,
            "location": "body"
          },
          {
            "name": "required_approving_review_count",
            "type": "integer",
            "description": "Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "dismissal_restrictions": {
              "users": [
                "octocat"
              ],
              "teams": [
                "justice-league"
              ]
            },
            "dismiss_stale_reviews": true,
            "require_code_owner_reviews": true,
            "required_approving_review_count": 2
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews",
              "dismissal_restrictions": {
                "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions",
                "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users",
                "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams",
                "users": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "teams": [
                  {
                    "id": 1,
                    "node_id": "MDQ6VGVhbTE=",
                    "url": "https://api.github.com/teams/1",
                    "name": "Justice League",
                    "slug": "justice-league",
                    "description": "A great team.",
                    "privacy": "closed",
                    "permission": "admin",
                    "members_url": "https://api.github.com/teams/1/members{/member}",
                    "repositories_url": "https://api.github.com/teams/1/repos",
                    "parent": null
                  }
                ]
              },
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 2
            }
          }
        ],
        "idName": "update-protected-branch-pull-request-review-enforcement",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch"
      },
      {
        "name": "Remove pull request review enforcement of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "idName": "remove-protected-branch-pull-request-review-enforcement",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch"
      },
      {
        "name": "Get required signatures of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "previews": [
          {
            "name": "zzzax",
            "description": "**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.zzzax-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures",
              "enabled": true
            }
          }
        ],
        "idName": "get-protected-branch-required-signatures",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch"
      },
      {
        "name": "Add required signatures of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "previews": [
          {
            "name": "zzzax",
            "description": "**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.zzzax-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures",
              "enabled": true
            }
          }
        ],
        "idName": "add-protected-branch-required-signatures",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch"
      },
      {
        "name": "Remove required signatures of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
        "previews": [
          {
            "name": "zzzax",
            "description": "**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.zzzax-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.",
        "idName": "remove-protected-branch-required-signatures",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch"
      },
      {
        "name": "Get admin enforcement of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
        "idName": "get-protected-branch-admin-enforcement",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch"
      },
      {
        "name": "Add admin enforcement of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins",
              "enabled": true
            }
          }
        ],
        "idName": "add-protected-branch-admin-enforcement",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch"
      },
      {
        "name": "Remove admin enforcement of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
        "idName": "remove-protected-branch-admin-enforcement",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch"
      },
      {
        "name": "Get restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\n**Note**: Teams and users `restrictions` are only available for organization-owned repositories.",
        "idName": "get-protected-branch-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch"
      },
      {
        "name": "Remove restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nDisables the ability to restrict who can push to this branch.",
        "idName": "remove-protected-branch-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch"
      },
      {
        "name": "List team restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "requests": [
          [
            {
              "id": 1,
              "node_id": "MDQ6VGVhbTE=",
              "url": "https://api.github.com/teams/1",
              "name": "Justice League",
              "slug": "justice-league",
              "description": "A great team.",
              "privacy": "closed",
              "permission": "admin",
              "members_url": "https://api.github.com/teams/1/members{/member}",
              "repositories_url": "https://api.github.com/teams/1/repos",
              "parent": null
            }
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nLists the teams who have push access to this branch. If you pass the `hellcat-preview` media type, the list includes child teams.",
        "responses": [],
        "idName": "list-protected-branch-team-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch"
      },
      {
        "name": "Replace team restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "teams",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "justice-league"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. If you pass the `hellcat-preview` media type, you can include child teams.\n\n| Type    | Description                                                                                                                         |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          }
        ],
        "idName": "replace-protected-branch-team-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch"
      },
      {
        "name": "Add team restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "teams",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "justice-league"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. If you pass the `hellcat-preview` media type, you can also give push access to child teams.\n\n| Type    | Description                                                                                                                         |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          }
        ],
        "idName": "add-protected-branch-team-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch"
      },
      {
        "name": "Remove team restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "teams",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "octocats"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch. If you pass the `hellcat-preview` media type, you can include child teams.\n\n| Type    | Description                                                                                                                                  |\n| ------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          }
        ],
        "idName": "remove-protected-branch-team-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch"
      },
      {
        "name": "List user restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nLists the people who have push access to this branch.",
        "idName": "list-protected-branch-user-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch"
      },
      {
        "name": "Replace user restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "users",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "octocat"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReplaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                            |\n| ------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "replace-protected-branch-user-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch"
      },
      {
        "name": "Add user restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "users",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "octocat"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nGrants the specified people push access for this branch.\n\n| Type    | Description                                                                                                            |\n| ------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "add-protected-branch-user-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch"
      },
      {
        "name": "Remove user restrictions of protected branch",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "mapTo": "input",
            "name": "users",
            "type": "string[]",
            "required": true,
            "description": "",
            "location": "body"
          }
        ],
        "requests": [
          [
            "defunkt"
          ]
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch.\n\n| Type    | Description                                                                                                                            |\n| ------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "remove-protected-branch-user-restrictions",
        "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch"
      },
      {
        "name": "List collaborators",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "affiliation",
            "type": "string",
            "description": "Filter collaborators returned by their affiliation. Can be one of:  \n\\* `outside`: All outside collaborators of an organization-owned repository.  \n\\* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
            "default": "all",
            "required": false,
            "enum": [
              "outside",
              "direct",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false,
                "permissions": {
                  "pull": true,
                  "push": true,
                  "admin": false
                }
              }
            ]
          }
        ],
        "idName": "list-collaborators",
        "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#list-collaborators"
      },
      {
        "name": "Check if a user is a collaborator",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators/:username",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.",
        "idName": "check-collaborator",
        "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator"
      },
      {
        "name": "Review a user's permission level",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/collaborators/:username/permission",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Possible values for the `permission` key: `admin`, `write`, `read`, `none`.",
        "idName": "get-collaborator-permission-level",
        "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level"
      },
      {
        "name": "Add user as a collaborator",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/collaborators/:username",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "permission",
            "type": "string",
            "description": "The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  \n\\* `pull` - can pull, but not push to or administer this repository.  \n\\* `push` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push and administer this repository.",
            "default": "push",
            "required": false,
            "enum": [
              "pull",
              "push",
              "admin"
            ],
            "location": "body"
          }
        ],
        "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://developer.github.com/v3/repos/invitations/).\n\n**Rate limits**\n\nTo prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.",
        "triggersNotification": true,
        "idName": "add-collaborator",
        "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator"
      },
      {
        "name": "Remove user as a collaborator",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/collaborators/:username",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-collaborator",
        "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator"
      },
      {
        "name": "List commit comments for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/comments",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the commit comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Commit Comments use [these custom media types](#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nComments are ordered by ascending ID.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
                "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
                "id": 1,
                "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
                "body": "Great stuff",
                "path": "file1.txt",
                "position": 4,
                "line": 14,
                "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-14T16:00:49Z",
                "updated_at": "2011-04-14T16:00:49Z"
              }
            ]
          }
        ],
        "idName": "list-commit-comments",
        "documentationUrl": "https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository"
      },
      {
        "name": "List comments for a single commit",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/comments",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the commit comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
                "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
                "id": 1,
                "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
                "body": "Great stuff",
                "path": "file1.txt",
                "position": 4,
                "line": 14,
                "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-14T16:00:49Z",
                "updated_at": "2011-04-14T16:00:49Z"
              }
            ]
          }
        ],
        "idName": "list-comments-for-commit",
        "documentationUrl": "https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit"
      },
      {
        "name": "Create a commit comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/commits/:sha/comments",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The contents of the comment.",
            "required": true,
            "location": "body"
          },
          {
            "name": "path",
            "type": "string",
            "description": "Relative path of the file to comment on.",
            "required": false,
            "location": "body"
          },
          {
            "name": "position",
            "type": "integer",
            "description": "Line index in the diff to comment on.",
            "required": false,
            "location": "body"
          },
          {
            "name": "line",
            "type": "integer",
            "description": "**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "body": "Great stuff",
            "path": "file1.txt",
            "position": 4,
            "line": null
          }
        ],
        "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
              "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
              "id": 1,
              "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
              "body": "Great stuff",
              "path": "file1.txt",
              "position": 4,
              "line": 14,
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z"
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-commit-comment",
        "documentationUrl": "https://developer.github.com/v3/repos/comments/#create-a-commit-comment"
      },
      {
        "name": "Get a single commit comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/comments/:comment_id",
        "previews": [
          {
            "name": "squirrel-girl",
            "description": "An additional `reactions` object in the commit comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions.",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
              "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
              "id": 1,
              "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
              "body": "Great stuff",
              "path": "file1.txt",
              "position": 4,
              "line": 14,
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z"
            }
          }
        ],
        "idName": "get-commit-comment",
        "documentationUrl": "https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment"
      },
      {
        "name": "Update a commit comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The contents of the comment",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "body": "Nice change"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
              "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
              "id": 1,
              "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
              "body": "Nice change",
              "path": "file1.txt",
              "position": 4,
              "line": 14,
              "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-14T16:00:49Z",
              "updated_at": "2011-04-14T16:00:49Z"
            }
          }
        ],
        "idName": "update-commit-comment",
        "documentationUrl": "https://developer.github.com/v3/repos/comments/#update-a-commit-comment"
      },
      {
        "name": "Delete a commit comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/comments/:comment_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-commit-comment",
        "documentationUrl": "https://developer.github.com/v3/repos/comments/#delete-a-commit-comment"
      },
      {
        "name": "List commits on a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sha",
            "type": "string",
            "description": "SHA or branch to start listing commits from.",
            "default": "the repository’s default branch (usually `master`).",
            "required": false,
            "location": "query"
          },
          {
            "name": "path",
            "type": "string",
            "description": "Only commits containing this file path will be returned.",
            "required": false,
            "location": "query"
          },
          {
            "name": "author",
            "type": "string",
            "description": "GitHub login or email address by which to filter by commit author.",
            "required": false,
            "location": "query"
          },
          {
            "name": "since",
            "type": "string",
            "description": "Only commits after this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "until",
            "type": "string",
            "description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
                "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
                "commit": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "author": {
                    "name": "Monalisa Octocat",
                    "email": "support@github.com",
                    "date": "2011-04-14T16:00:49Z"
                  },
                  "committer": {
                    "name": "Monalisa Octocat",
                    "email": "support@github.com",
                    "date": "2011-04-14T16:00:49Z"
                  },
                  "message": "Fix all the bugs",
                  "tree": {
                    "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                    "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                  },
                  "comment_count": 0,
                  "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                  }
                },
                "author": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "committer": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "parents": [
                  {
                    "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                    "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                  }
                ]
              }
            ]
          }
        ],
        "idName": "list-commits",
        "documentationUrl": "https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository"
      },
      {
        "name": "Get a single commit",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commit_sha",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "commit_sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sha",
            "type": "string",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"sha\" parameter renamed to \"commit_sha\"",
              "before": {
                "name": "sha"
              },
              "after": {
                "name": "commit_sha"
              }
            }
          }
        ],
        "description": "Diffs with binary data will have no `patch` property. Pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
              "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
              "commit": {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "author": {
                  "name": "Monalisa Octocat",
                  "email": "support@github.com",
                  "date": "2011-04-14T16:00:49Z"
                },
                "committer": {
                  "name": "Monalisa Octocat",
                  "email": "support@github.com",
                  "date": "2011-04-14T16:00:49Z"
                },
                "message": "Fix all the bugs",
                "tree": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                },
                "comment_count": 0,
                "verification": {
                  "verified": false,
                  "reason": "unsigned",
                  "signature": null,
                  "payload": null
                }
              },
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "committer": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "parents": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              ],
              "stats": {
                "additions": 104,
                "deletions": 4,
                "total": 108
              },
              "files": [
                {
                  "filename": "file1.txt",
                  "additions": 10,
                  "deletions": 2,
                  "changes": 12,
                  "status": "modified",
                  "raw_url": "https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt",
                  "blob_url": "https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt",
                  "patch": "@@ -29,7 +29,7 @@\n....."
                }
              ]
            }
          }
        ],
        "idName": "get-commit",
        "documentationUrl": "https://developer.github.com/v3/repos/commits/#get-a-single-commit"
      },
      {
        "name": "Get the SHA-1 of a commit reference",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "**Note:** To access this endpoint, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.VERSION.sha\n\n```\n\nReturns the SHA-1 of the commit reference. You must have `read` access for the repository to get the SHA-1 of a commit reference. You can use this endpoint to check if a remote reference's SHA-1 is the same as your local reference's SHA-1 by providing the local SHA-1 reference as the ETag.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "get-commit-ref-sha",
        "documentationUrl": "https://developer.github.com/v3/repos/commits/#get-the-sha-1-of-a-commit-reference"
      },
      {
        "name": "Compare two commits",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/compare/:base...:head",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "base",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "head",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "requests": [
          {
            "url": "https://api.github.com/repos/octocat/Hello-World/compare/master...topic",
            "html_url": "https://github.com/octocat/Hello-World/compare/master...topic",
            "permalink_url": "https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17",
            "diff_url": "https://github.com/octocat/Hello-World/compare/master...topic.diff",
            "patch_url": "https://github.com/octocat/Hello-World/compare/master...topic.patch",
            "base_commit": {
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
              "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
              "commit": {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "author": {
                  "name": "Monalisa Octocat",
                  "email": "support@github.com",
                  "date": "2011-04-14T16:00:49Z"
                },
                "committer": {
                  "name": "Monalisa Octocat",
                  "email": "support@github.com",
                  "date": "2011-04-14T16:00:49Z"
                },
                "message": "Fix all the bugs",
                "tree": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                },
                "comment_count": 0,
                "verification": {
                  "verified": false,
                  "reason": "unsigned",
                  "signature": null,
                  "payload": null
                }
              },
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "committer": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "parents": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              ]
            },
            "merge_base_commit": {
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
              "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
              "commit": {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "author": {
                  "name": "Monalisa Octocat",
                  "email": "support@github.com",
                  "date": "2011-04-14T16:00:49Z"
                },
                "committer": {
                  "name": "Monalisa Octocat",
                  "email": "support@github.com",
                  "date": "2011-04-14T16:00:49Z"
                },
                "message": "Fix all the bugs",
                "tree": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                },
                "comment_count": 0,
                "verification": {
                  "verified": false,
                  "reason": "unsigned",
                  "signature": null,
                  "payload": null
                }
              },
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "committer": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "parents": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
              ]
            },
            "status": "behind",
            "ahead_by": 1,
            "behind_by": 2,
            "total_commits": 1,
            "commits": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
                "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
                "commit": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "author": {
                    "name": "Monalisa Octocat",
                    "email": "support@github.com",
                    "date": "2011-04-14T16:00:49Z"
                  },
                  "committer": {
                    "name": "Monalisa Octocat",
                    "email": "support@github.com",
                    "date": "2011-04-14T16:00:49Z"
                  },
                  "message": "Fix all the bugs",
                  "tree": {
                    "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                    "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                  },
                  "comment_count": 0,
                  "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                  }
                },
                "author": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "committer": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "parents": [
                  {
                    "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                    "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                  }
                ]
              }
            ],
            "files": [
              {
                "sha": "bbcd538c8e72b8c175046e27cc8f907076331401",
                "filename": "file1.txt",
                "status": "added",
                "additions": 103,
                "deletions": 21,
                "changes": 124,
                "blob_url": "https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt",
                "raw_url": "https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt",
                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "patch": "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
              }
            ]
          }
        ],
        "description": "Both `:base` and `:head` must be branch names in `:repo`. To compare branches across other repositories in the same network as `:repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in reverse chronological order. Pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [Commit List API](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long to generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
        "responses": [],
        "idName": "compare-commits",
        "documentationUrl": "https://developer.github.com/v3/repos/commits/#compare-two-commits"
      },
      {
        "name": "List branches for HEAD commit",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commit_sha/branches-where-head",
        "previews": [
          {
            "name": "groot",
            "description": "**Note:** Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.groot-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "commit_sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "name": "branch_5",
                "commit": {
                  "sha": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc",
                  "url": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
                },
                "protected": "false"
              }
            ]
          }
        ],
        "idName": "list-branches-for-head-commit",
        "documentationUrl": "https://developer.github.com/v3/repos/commits/#list-branches-for-head-commit"
      },
      {
        "name": "List pull requests associated with commit",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:commit_sha/pulls",
        "previews": [
          {
            "name": "groot",
            "description": "**Note:** Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.groot-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "commit_sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests) endpoint.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                "id": 1,
                "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
                "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
                "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
                "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
                "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "number": 1347,
                "state": "open",
                "locked": true,
                "title": "new-feature",
                "user": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "body": "Please pull these awesome changes",
                "labels": [
                  {
                    "id": 208045946,
                    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                    "name": "bug",
                    "description": "Something isn't working",
                    "color": "f29513",
                    "default": true
                  }
                ],
                "milestone": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                  "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                  "id": 1002604,
                  "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                  "number": 1,
                  "state": "open",
                  "title": "v1.0",
                  "description": "Tracking milestone for version 1.0",
                  "creator": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "open_issues": 4,
                  "closed_issues": 8,
                  "created_at": "2011-04-10T20:09:31Z",
                  "updated_at": "2014-03-03T18:58:10Z",
                  "closed_at": "2013-02-12T13:22:01Z",
                  "due_on": "2012-10-09T23:39:01Z"
                },
                "active_lock_reason": "too heated",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:01:12Z",
                "closed_at": "2011-01-26T19:01:12Z",
                "merged_at": "2011-01-26T19:01:12Z",
                "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
                "assignee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "assignees": [
                  {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  {
                    "login": "hubot",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/hubot",
                    "html_url": "https://github.com/hubot",
                    "followers_url": "https://api.github.com/users/hubot/followers",
                    "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                    "organizations_url": "https://api.github.com/users/hubot/orgs",
                    "repos_url": "https://api.github.com/users/hubot/repos",
                    "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/hubot/received_events",
                    "type": "User",
                    "site_admin": true
                  }
                ],
                "requested_reviewers": [
                  {
                    "login": "other_user",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/other_user",
                    "html_url": "https://github.com/other_user",
                    "followers_url": "https://api.github.com/users/other_user/followers",
                    "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                    "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                    "organizations_url": "https://api.github.com/users/other_user/orgs",
                    "repos_url": "https://api.github.com/users/other_user/repos",
                    "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/other_user/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                ],
                "requested_teams": [
                  {
                    "id": 1,
                    "node_id": "MDQ6VGVhbTE=",
                    "url": "https://api.github.com/teams/1",
                    "name": "Justice League",
                    "slug": "justice-league",
                    "description": "A great team.",
                    "privacy": "closed",
                    "permission": "admin",
                    "members_url": "https://api.github.com/teams/1/members{/member}",
                    "repositories_url": "https://api.github.com/teams/1/repos",
                    "parent": null
                  }
                ],
                "head": {
                  "label": "octocat:new-topic",
                  "ref": "new-topic",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "repo": {
                    "id": 1296269,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                    "name": "Hello-World",
                    "full_name": "octocat/Hello-World",
                    "owner": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    },
                    "private": false,
                    "html_url": "https://github.com/octocat/Hello-World",
                    "description": "This your first repo!",
                    "fork": false,
                    "url": "https://api.github.com/repos/octocat/Hello-World",
                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                    "git_url": "git:github.com/octocat/Hello-World.git",
                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                    "clone_url": "https://github.com/octocat/Hello-World.git",
                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                    "homepage": "https://github.com",
                    "language": null,
                    "forks_count": 9,
                    "stargazers_count": 80,
                    "watchers_count": 80,
                    "size": 108,
                    "default_branch": "master",
                    "open_issues_count": 0,
                    "topics": [
                      "octocat",
                      "atom",
                      "electron",
                      "api"
                    ],
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_downloads": true,
                    "archived": false,
                    "disabled": false,
                    "pushed_at": "2011-01-26T19:06:43Z",
                    "created_at": "2011-01-26T19:01:12Z",
                    "updated_at": "2011-01-26T19:14:43Z",
                    "permissions": {
                      "admin": false,
                      "push": false,
                      "pull": true
                    },
                    "allow_rebase_merge": true,
                    "allow_squash_merge": true,
                    "allow_merge_commit": true,
                    "subscribers_count": 42,
                    "network_count": 0
                  }
                },
                "base": {
                  "label": "octocat:master",
                  "ref": "master",
                  "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "user": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "repo": {
                    "id": 1296269,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                    "name": "Hello-World",
                    "full_name": "octocat/Hello-World",
                    "owner": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    },
                    "private": false,
                    "html_url": "https://github.com/octocat/Hello-World",
                    "description": "This your first repo!",
                    "fork": false,
                    "url": "https://api.github.com/repos/octocat/Hello-World",
                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                    "git_url": "git:github.com/octocat/Hello-World.git",
                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                    "clone_url": "https://github.com/octocat/Hello-World.git",
                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                    "homepage": "https://github.com",
                    "language": null,
                    "forks_count": 9,
                    "stargazers_count": 80,
                    "watchers_count": 80,
                    "size": 108,
                    "default_branch": "master",
                    "open_issues_count": 0,
                    "topics": [
                      "octocat",
                      "atom",
                      "electron",
                      "api"
                    ],
                    "has_issues": true,
                    "has_projects": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_downloads": true,
                    "archived": false,
                    "disabled": false,
                    "pushed_at": "2011-01-26T19:06:43Z",
                    "created_at": "2011-01-26T19:01:12Z",
                    "updated_at": "2011-01-26T19:14:43Z",
                    "permissions": {
                      "admin": false,
                      "push": false,
                      "pull": true
                    },
                    "allow_rebase_merge": true,
                    "allow_squash_merge": true,
                    "allow_merge_commit": true,
                    "subscribers_count": 42,
                    "network_count": 0
                  }
                },
                "_links": {
                  "self": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
                  },
                  "html": {
                    "href": "https://github.com/octocat/Hello-World/pull/1347"
                  },
                  "issue": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                  },
                  "comments": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
                  },
                  "review_comments": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
                  },
                  "review_comment": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
                  },
                  "commits": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
                  },
                  "statuses": {
                    "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                  }
                },
                "author_association": "OWNER",
                "draft": false
              }
            ]
          }
        ],
        "idName": "list-pull-requests-associated-with-commit",
        "documentationUrl": "https://developer.github.com/v3/repos/commits/#list-pull-requests-associated-with-commit"
      },
      {
        "name": "Retrieve community profile metrics",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/community/profile",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "This endpoint will return all community profile metrics, including an overall health score, repository description, the presence of documentation, detected code of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE, README, and CONTRIBUTING files.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "health_percentage": 100,
              "description": "My first repository on GitHub!",
              "documentation": true,
              "files": {
                "code_of_conduct": {
                  "name": "Contributor Covenant",
                  "key": "contributor_covenant",
                  "url": "https://api.github.com/codes_of_conduct/contributor_covenant",
                  "html_url": "https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md"
                },
                "contributing": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING",
                  "html_url": "https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING"
                },
                "issue_template": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE",
                  "html_url": "https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE"
                },
                "pull_request_template": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE",
                  "html_url": "https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE"
                },
                "license": {
                  "name": "MIT License",
                  "key": "mit",
                  "spdx_id": "MIT",
                  "url": "https://api.github.com/licenses/mit",
                  "html_url": "https://github.com/octocat/Hello-World/blob/master/LICENSE"
                },
                "readme": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/contents/README.md",
                  "html_url": "https://github.com/octocat/Hello-World/blob/master/README.md"
                }
              },
              "updated_at": "2017-02-28T19:09:29Z"
            }
          }
        ],
        "idName": "retrieve-community-profile-metrics",
        "documentationUrl": "https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics"
      },
      {
        "name": "Get the README",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/readme",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "description": "The name of the commit/branch/tag.",
            "default": "the repository’s default branch (usually `master`)",
            "required": false,
            "location": "query"
          }
        ],
        "description": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](#custom-media-types) for retrieving the raw content or rendered HTML.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "type": "file",
              "encoding": "base64",
              "size": 5362,
              "name": "README.md",
              "path": "README.md",
              "content": "encoded content ...",
              "sha": "3d21ec53a331a6f037a91c368710b99387d012c1",
              "url": "https://api.github.com/repos/octokit/octokit.rb/contents/README.md",
              "git_url": "https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1",
              "html_url": "https://github.com/octokit/octokit.rb/blob/master/README.md",
              "download_url": "https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md",
              "_links": {
                "git": "https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1",
                "self": "https://api.github.com/repos/octokit/octokit.rb/contents/README.md",
                "html": "https://github.com/octokit/octokit.rb/blob/master/README.md"
              }
            }
          }
        ],
        "idName": "get-readme",
        "documentationUrl": "https://developer.github.com/v3/repos/contents/#get-the-readme"
      },
      {
        "name": "Get contents",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/contents/:path",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "path",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "description": "The name of the commit/branch/tag.",
            "default": "the repository’s default branch (usually `master`)",
            "required": false,
            "location": "query"
          }
        ],
        "description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit `:path`, you will receive the contents of all files in the repository.\n\nFiles and symlinks support [a custom media type](#custom-media-types) for retrieving the raw content or rendered HTML (when supported). All content types support [a custom media type](#custom-media-types) to ensure the content is returned in a consistent object format.\n\n**Note**:\n\n*   To get a repository's contents recursively, you can [recursively get the tree](https://developer.github.com/v3/git/trees/).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees API](https://developer.github.com/v3/git/trees/#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\nThe response will be an array of objects, one object for each item in the directory.\n\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value _should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW). In the next major version of the API, the type will be returned as \"submodule\".\n\nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the API responds with the content of the file (in the [format shown above](#response-if-content-is-a-file)).\n\nOtherwise, the API responds with an object describing the symlink itself:\n\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out the submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the github.com URLs (`html_url` and `_links[\"html\"]`) will have null values.",
        "idName": "get-contents",
        "documentationUrl": "https://developer.github.com/v3/repos/contents/#get-contents"
      },
      {
        "name": "Create a file",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/contents/:path",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "path",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "message",
            "type": "string",
            "description": "The commit message.",
            "required": true,
            "location": "body"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The new file content, using Base64 encoding.",
            "required": true,
            "location": "body"
          },
          {
            "name": "branch",
            "type": "string",
            "description": "The branch name.",
            "default": "the repository’s default branch (usually `master`)",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer",
            "type": "object",
            "description": "The person that committed the file.",
            "default": "the authenticated user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer.name",
            "type": "string",
            "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
            "required": true,
            "location": "body"
          },
          {
            "name": "committer.email",
            "type": "string",
            "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
            "required": true,
            "location": "body"
          },
          {
            "name": "author",
            "type": "object",
            "description": "The author of the file.",
            "default": "The `committer` or the authenticated user if you omit `committer`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "author.name",
            "type": "string",
            "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
            "required": true,
            "location": "body"
          },
          {
            "name": "author.email",
            "type": "string",
            "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "message": "my commit message",
            "committer": {
              "name": "Scott Chacon",
              "email": "schacon@gmail.com"
            },
            "content": "bXkgbmV3IGZpbGUgY29udGVudHM="
          }
        ],
        "description": "Creates a new file in a repository.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "content": {
                "name": "hello.txt",
                "path": "notes/hello.txt",
                "sha": "95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
                "size": 9,
                "url": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
                "html_url": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt",
                "git_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
                "download_url": "https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt",
                "type": "file",
                "_links": {
                  "self": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
                  "git": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
                  "html": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt"
                }
              },
              "commit": {
                "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
                "node_id": "MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
                "html_url": "https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd",
                "author": {
                  "date": "2014-11-07T22:01:45Z",
                  "name": "Scott Chacon",
                  "email": "schacon@gmail.com"
                },
                "committer": {
                  "date": "2014-11-07T22:01:45Z",
                  "name": "Scott Chacon",
                  "email": "schacon@gmail.com"
                },
                "message": "my commit message",
                "tree": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
                  "sha": "691272480426f78a0138979dd3ce63b77f706feb"
                },
                "parents": [
                  {
                    "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                    "html_url": "https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                    "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
                  }
                ],
                "verification": {
                  "verified": false,
                  "reason": "unsigned",
                  "signature": null,
                  "payload": null
                }
              }
            }
          }
        ],
        "idName": "create-file",
        "documentationUrl": "https://developer.github.com/v3/repos/contents/#create-a-file"
      },
      {
        "name": "Update a file",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/contents/:path",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "path",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "message",
            "type": "string",
            "description": "The commit message.",
            "required": true,
            "location": "body"
          },
          {
            "name": "content",
            "type": "string",
            "description": "The new file content, using Base64 encoding.",
            "required": true,
            "location": "body"
          },
          {
            "name": "sha",
            "type": "string",
            "description": "The blob SHA of the file being replaced.",
            "required": true,
            "location": "body"
          },
          {
            "name": "branch",
            "type": "string",
            "description": "The branch name.",
            "default": "the repository’s default branch (usually `master`)",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer",
            "type": "object",
            "description": "The person that committed the file.",
            "default": "the authenticated user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer.name",
            "type": "string",
            "description": "The name of the author or committer of the commit. You'll receive a `422` status code if you omit `name`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "committer.email",
            "type": "string",
            "description": "The email of the author or committer of the commit. You'll receive a `422` status code if you omit `name`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "author",
            "type": "object",
            "description": "The author of the file.",
            "default": "The `committer` or the authenticated user if you omit `committer`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "author.name",
            "type": "string",
            "description": "The name of the author or committer of the commit. You'll receive a `422` status code if you omit `name`.",
            "required": true,
            "location": "body"
          },
          {
            "name": "author.email",
            "type": "string",
            "description": "The email of the author or committer of the commit. You'll receive a `422` status code if you omit `name`.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "message": "my commit message",
            "committer": {
              "name": "Scott Chacon",
              "email": "schacon@gmail.com"
            },
            "content": "bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz",
            "sha": "329688480d39049927147c162b9d2deaf885005f"
          }
        ],
        "description": "Updates a file in a repository.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "content": {
                "name": "hello.txt",
                "path": "notes/hello.txt",
                "sha": "95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
                "size": 9,
                "url": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
                "html_url": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt",
                "git_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
                "download_url": "https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt",
                "type": "file",
                "_links": {
                  "self": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
                  "git": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
                  "html": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt"
                }
              },
              "commit": {
                "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
                "node_id": "MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
                "html_url": "https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd",
                "author": {
                  "date": "2014-11-07T22:01:45Z",
                  "name": "Scott Chacon",
                  "email": "schacon@gmail.com"
                },
                "committer": {
                  "date": "2014-11-07T22:01:45Z",
                  "name": "Scott Chacon",
                  "email": "schacon@gmail.com"
                },
                "message": "my commit message",
                "tree": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
                  "sha": "691272480426f78a0138979dd3ce63b77f706feb"
                },
                "parents": [
                  {
                    "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                    "html_url": "https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                    "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
                  }
                ],
                "verification": {
                  "verified": false,
                  "reason": "unsigned",
                  "signature": null,
                  "payload": null
                }
              }
            }
          }
        ],
        "idName": "update-file",
        "documentationUrl": "https://developer.github.com/v3/repos/contents/#update-a-file"
      },
      {
        "name": "Delete a file",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/contents/:path",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "path",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "message",
            "type": "string",
            "description": "The commit message.",
            "required": true,
            "location": "body"
          },
          {
            "name": "sha",
            "type": "string",
            "description": "The blob SHA of the file being replaced.",
            "required": true,
            "location": "body"
          },
          {
            "name": "branch",
            "type": "string",
            "description": "The branch name.",
            "default": "the repository’s default branch (usually `master`)",
            "required": false,
            "location": "body"
          },
          {
            "name": "committer",
            "type": "object",
            "description": "object containing information about the committer.",
            "location": "body"
          },
          {
            "name": "author",
            "type": "object",
            "description": "object containing information about the author.",
            "location": "body"
          }
        ],
        "requests": [
          {
            "message": "my commit message",
            "committer": {
              "name": "Scott Chacon",
              "email": "schacon@gmail.com"
            },
            "sha": "329688480d39049927147c162b9d2deaf885005f"
          }
        ],
        "description": "Deletes a file in a repository.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.\n\nBoth the `author` and `committer` parameters have the same keys:\n\n| name  | type   | description                                          |\n| ----- | ------ | ---------------------------------------------------- |\n| name  | string | The name of the author (or committer) of the commit  |\n| email | string | The email of the author (or committer) of the commit |",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "content": null,
              "commit": {
                "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
                "node_id": "MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
                "html_url": "https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd",
                "author": {
                  "date": "2014-11-07T22:01:45Z",
                  "name": "Scott Chacon",
                  "email": "schacon@gmail.com"
                },
                "committer": {
                  "date": "2014-11-07T22:01:45Z",
                  "name": "Scott Chacon",
                  "email": "schacon@gmail.com"
                },
                "message": "my commit message",
                "tree": {
                  "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
                  "sha": "691272480426f78a0138979dd3ce63b77f706feb"
                },
                "parents": [
                  {
                    "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                    "html_url": "https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                    "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
                  }
                ],
                "verification": {
                  "verified": false,
                  "reason": "unsigned",
                  "signature": null,
                  "payload": null
                }
              }
            }
          }
        ],
        "idName": "delete-file",
        "documentationUrl": "https://developer.github.com/v3/repos/contents/#delete-a-file"
      },
      {
        "name": "Get archive link",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/:archive_format/:ref",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "archive_format",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Gets a redirect URL to download an archive for a repository. The `:archive_format` can be either `tarball` or `zipball`. The `:ref` must be a valid Git reference. If you omit `:ref`, the repository’s default branch (usually `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the `Location` header to make a second `GET` request.\n\n_Note_: For private repositories, these links are temporary and expire after five minutes.\n\nTo follow redirects with curl, use the `-L` switch:\n\n",
        "responses": [
          {
            "headers": {
              "status": "302 Found",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "get-archive-link",
        "documentationUrl": "https://developer.github.com/v3/repos/contents/#get-archive-link"
      },
      {
        "name": "List deployments",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments",
        "previews": [
          {
            "name": "ant-man",
            "description": "**Note:** The `transient_environment` and `production_environment` parameters are currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sha",
            "type": "string",
            "description": "The SHA recorded at creation time.",
            "default": "none",
            "required": false,
            "location": "query"
          },
          {
            "name": "ref",
            "type": "string",
            "description": "The name of the ref. This can be a branch, tag, or SHA.",
            "default": "none",
            "required": false,
            "location": "query"
          },
          {
            "name": "task",
            "type": "string",
            "description": "The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).",
            "default": "none",
            "required": false,
            "location": "query"
          },
          {
            "name": "environment",
            "type": "string",
            "description": "The name of the environment that was deployed to (e.g., `staging` or `production`).",
            "default": "none",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Simple filtering of deployments is available via query parameters:",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/example/deployments/1",
                "id": 1,
                "node_id": "MDEwOkRlcGxveW1lbnQx",
                "sha": "a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
                "ref": "topic-branch",
                "task": "deploy",
                "payload": {
                  "deploy": "migrate"
                },
                "original_environment": "staging",
                "environment": "production",
                "description": "Deploy request from hubot",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2012-07-20T01:19:13Z",
                "updated_at": "2012-07-20T01:19:13Z",
                "statuses_url": "https://api.github.com/repos/octocat/example/deployments/1/statuses",
                "repository_url": "https://api.github.com/repos/octocat/example",
                "transient_environment": false,
                "production_environment": true
              }
            ]
          }
        ],
        "idName": "list-deployments",
        "documentationUrl": "https://developer.github.com/v3/repos/deployments/#list-deployments"
      },
      {
        "name": "Get a single deployment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deployment_id",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** If a deployment is created via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
            "required": false
          },
          {
            "name": "ant-man",
            "description": "**Note:** The `transient_environment` and `production_environment` parameters are currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "deployment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/example/deployments/1",
              "id": 1,
              "node_id": "MDEwOkRlcGxveW1lbnQx",
              "sha": "a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
              "ref": "topic-branch",
              "task": "deploy",
              "payload": {
                "deploy": "migrate"
              },
              "original_environment": "staging",
              "environment": "production",
              "description": "Deploy request from hubot",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2012-07-20T01:19:13Z",
              "updated_at": "2012-07-20T01:19:13Z",
              "statuses_url": "https://api.github.com/repos/octocat/example/deployments/1/statuses",
              "repository_url": "https://api.github.com/repos/octocat/example",
              "transient_environment": false,
              "production_environment": true
            }
          }
        ],
        "idName": "get-deployment",
        "documentationUrl": "https://developer.github.com/v3/repos/deployments/#get-a-single-deployment"
      },
      {
        "name": "Create a deployment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/deployments",
        "previews": [
          {
            "name": "ant-man",
            "description": "**Note:** The `transient_environment` and `production_environment` parameters are currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "description": "The ref to deploy. This can be a branch, tag, or SHA.",
            "required": true,
            "location": "body"
          },
          {
            "name": "task",
            "type": "string",
            "description": "Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).",
            "default": "deploy",
            "required": false,
            "location": "body"
          },
          {
            "name": "auto_merge",
            "type": "boolean",
            "description": "Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.",
            "default": true,
            "required": false,
            "location": "body"
          },
          {
            "name": "required_contexts",
            "type": "string[]",
            "description": "The [status](https://developer.github.com/v3/repos/statuses/) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.",
            "required": false,
            "location": "body"
          },
          {
            "name": "payload",
            "type": "string",
            "description": "JSON payload with extra information about the deployment.",
            "default": "\"\"",
            "required": false,
            "location": "body"
          },
          {
            "name": "environment",
            "type": "string",
            "description": "Name for the target deployment environment (e.g., `production`, `staging`, `qa`).",
            "default": "production",
            "required": false,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "Short description of the deployment.",
            "default": "\"\"",
            "required": false,
            "location": "body"
          },
          {
            "name": "transient_environment",
            "type": "boolean",
            "description": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "production_environment",
            "type": "boolean",
            "description": "Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.  ",
            "default": "`true` when `environment` is `production` and `false` otherwise",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "ref": "topic-branch",
            "payload": {
              "deploy": "migrate"
            },
            "description": "Deploy request from hubot"
          }
        ],
        "description": "Deployments offer a few configurable parameters with sane defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them before we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter makes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds, the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will return a failure response.\n\nBy default, [commit statuses](https://developer.github.com/v3/repos/statuses) for every submitted context must be in a `success` state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do not require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text field that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an application with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref:\n\nA simple example putting the user and room into the payload to notify back to chat networks.\n\nA more advanced example specifying required commit statuses and bypassing auto-merging.\n\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating a deployment. This auto-merge happens when:\n\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master`in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful response.\n\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success` status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.",
        "idName": "create-deployment",
        "documentationUrl": "https://developer.github.com/v3/repos/deployments/#create-a-deployment"
      },
      {
        "name": "List deployment statuses",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deployment_id/statuses",
        "previews": [
          {
            "name": "flash",
            "description": "**Note:** New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.flash-preview+json\n\n```",
            "required": false
          },
          {
            "name": "ant-man",
            "description": "**Note:** The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "deployment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Users with pull access can view deployment statuses for a deployment:",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/example/deployments/42/statuses/1",
                "id": 1,
                "node_id": "MDE2OkRlcGxveW1lbnRTdGF0dXMx",
                "state": "success",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "description": "Deployment finished successfully.",
                "environment": "production",
                "target_url": "https://example.com/deployment/42/output",
                "created_at": "2012-07-20T01:19:13Z",
                "updated_at": "2012-07-20T01:19:13Z",
                "deployment_url": "https://api.github.com/repos/octocat/example/deployments/42",
                "repository_url": "https://api.github.com/repos/octocat/example",
                "environment_url": "",
                "log_url": "https://example.com/deployment/42/output"
              }
            ]
          }
        ],
        "idName": "list-deployment-statuses",
        "documentationUrl": "https://developer.github.com/v3/repos/deployments/#list-deployment-statuses"
      },
      {
        "name": "Get a single deployment status",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id",
        "previews": [
          {
            "name": "machine-man",
            "description": "**Note:** If a deployment is created via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
            "required": false
          },
          {
            "name": "flash",
            "description": "**Note:** New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.flash-preview+json\n\n```",
            "required": false
          },
          {
            "name": "ant-man",
            "description": "**Note:** The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "deployment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "status_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Users with pull access can view a deployment status for a deployment:",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/example/deployments/42/statuses/1",
              "id": 1,
              "node_id": "MDE2OkRlcGxveW1lbnRTdGF0dXMx",
              "state": "success",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "description": "Deployment finished successfully.",
              "environment": "production",
              "target_url": "https://example.com/deployment/42/output",
              "created_at": "2012-07-20T01:19:13Z",
              "updated_at": "2012-07-20T01:19:13Z",
              "deployment_url": "https://api.github.com/repos/octocat/example/deployments/42",
              "repository_url": "https://api.github.com/repos/octocat/example",
              "environment_url": "",
              "log_url": "https://example.com/deployment/42/output"
            }
          }
        ],
        "idName": "get-deployment-status",
        "documentationUrl": "https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status"
      },
      {
        "name": "Create a deployment status",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/deployments/:deployment_id/statuses",
        "previews": [
          {
            "name": "flash",
            "description": "**Note:** New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.flash-preview+json\n\n```",
            "required": false
          },
          {
            "name": "ant-man",
            "description": "**Note:** The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "deployment_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. To use the `in_progress` and `queued` states, you must provide the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.",
            "required": true,
            "enum": [
              "error",
              "failure",
              "inactive",
              "in_progress",
              "queued",
              "pending",
              "success"
            ],
            "location": "body"
          },
          {
            "name": "target_url",
            "type": "string",
            "description": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.",
            "default": "\"\"",
            "required": false,
            "location": "body"
          },
          {
            "name": "log_url",
            "type": "string",
            "description": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.",
            "default": "\"\"",
            "required": false,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A short description of the status. The maximum description length is 140 characters.",
            "default": "\"\"",
            "required": false,
            "location": "body"
          },
          {
            "name": "environment",
            "type": "string",
            "description": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. **Note:** This parameter requires you to use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.",
            "required": false,
            "enum": [
              "production",
              "staging",
              "qa"
            ],
            "location": "body"
          },
          {
            "name": "environment_url",
            "type": "string",
            "description": "Sets the URL for accessing your environment. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.",
            "default": "\"\"",
            "required": false,
            "location": "body"
          },
          {
            "name": "auto_inactive",
            "type": "boolean",
            "description": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  \n**Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.  ",
            "default": true,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "environment": "production",
            "state": "success",
            "log_url": "https://example.com/deployment/42/output",
            "description": "Deployment finished successfully."
          }
        ],
        "description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/example/deployments/42/statuses/1",
              "id": 1,
              "node_id": "MDE2OkRlcGxveW1lbnRTdGF0dXMx",
              "state": "success",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "description": "Deployment finished successfully.",
              "environment": "production",
              "target_url": "https://example.com/deployment/42/output",
              "created_at": "2012-07-20T01:19:13Z",
              "updated_at": "2012-07-20T01:19:13Z",
              "deployment_url": "https://api.github.com/repos/octocat/example/deployments/42",
              "repository_url": "https://api.github.com/repos/octocat/example",
              "environment_url": "",
              "log_url": "https://example.com/deployment/42/output"
            }
          }
        ],
        "idName": "create-deployment-status",
        "documentationUrl": "https://developer.github.com/v3/repos/deployments/#create-a-deployment-status"
      },
      {
        "name": "List downloads for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/downloads",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/downloads/1",
                "html_url": "https://github.com/repos/octocat/Hello-World/downloads/new_file.jpg",
                "id": 1,
                "name": "new_file.jpg",
                "description": "Description of your download",
                "size": 1024,
                "download_count": 40,
                "content_type": ".jpg"
              }
            ]
          }
        ],
        "idName": "list-downloads",
        "documentationUrl": "https://developer.github.com/v3/repos/downloads/#list-downloads-for-a-repository"
      },
      {
        "name": "Get a single download",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/downloads/:download_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "download_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/downloads/1",
              "html_url": "https://github.com/repos/octocat/Hello-World/downloads/new_file.jpg",
              "id": 1,
              "name": "new_file.jpg",
              "description": "Description of your download",
              "size": 1024,
              "download_count": 40,
              "content_type": ".jpg"
            }
          }
        ],
        "idName": "get-download",
        "documentationUrl": "https://developer.github.com/v3/repos/downloads/#get-a-single-download"
      },
      {
        "name": "Delete a download",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/downloads/:download_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "download_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-download",
        "documentationUrl": "https://developer.github.com/v3/repos/downloads/#delete-a-download"
      },
      {
        "name": "List forks",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/forks",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "The sort order. Can be either `newest`, `oldest`, or `stargazers`.",
            "default": "newest",
            "required": false,
            "enum": [
              "newest",
              "oldest",
              "stargazers"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": true,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "subscribers_count": 42,
                "network_count": 0,
                "license": {
                  "key": "mit",
                  "name": "MIT License",
                  "spdx_id": "MIT",
                  "url": "https://api.github.com/licenses/mit",
                  "node_id": "MDc6TGljZW5zZW1pdA=="
                }
              }
            ]
          }
        ],
        "idName": "list-forks",
        "documentationUrl": "https://developer.github.com/v3/repos/forks/#list-forks"
      },
      {
        "name": "Create a fork",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/forks",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "organization",
            "type": "string",
            "description": "Optional parameter to specify the organization name if forking into an organization.",
            "required": false,
            "location": "body"
          }
        ],
        "description": "Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://github.com/contact).",
        "responses": [
          {
            "headers": {
              "status": "202 Accepted",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": true,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "allow_squash_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0
            }
          }
        ],
        "idName": "create-fork",
        "documentationUrl": "https://developer.github.com/v3/repos/forks/#create-a-fork"
      },
      {
        "name": "List hooks",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "url": "https://api.github.com/repos/octocat/Hello-World/hooks/1",
                "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/1/test",
                "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/1/pings",
                "name": "web",
                "events": [
                  "push",
                  "pull_request"
                ],
                "active": true,
                "config": {
                  "url": "http://example.com/webhook",
                  "content_type": "json"
                },
                "updated_at": "2011-09-06T20:39:23Z",
                "created_at": "2011-09-06T17:26:27Z"
              }
            ]
          }
        ],
        "idName": "list-hooks",
        "documentationUrl": "https://developer.github.com/v3/repos/hooks/#list-hooks"
      },
      {
        "name": "Get single hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/hooks/:hook_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/repos/octocat/Hello-World/hooks/1",
              "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/1/test",
              "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/1/pings",
              "name": "web",
              "events": [
                "push",
                "pull_request"
              ],
              "active": true,
              "config": {
                "url": "http://example.com/webhook",
                "content_type": "json"
              },
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z"
            }
          }
        ],
        "idName": "get-hook",
        "documentationUrl": "https://developer.github.com/v3/repos/hooks/#get-single-hook"
      },
      {
        "name": "Create a hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "Use `web` to create a webhook. This parameter only accepts the value `web`.",
            "default": "web",
            "required": false,
            "location": "body"
          },
          {
            "name": "config",
            "type": "object",
            "description": "Key/value pairs to provide settings for this webhook. [These are defined below](#create-hook-config-params).",
            "required": true,
            "location": "body"
          },
          {
            "name": "config.url",
            "type": "string",
            "description": "The URL to which the payloads will be delivered.",
            "required": true,
            "location": "body"
          },
          {
            "name": "config.content_type",
            "type": "string",
            "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.secret",
            "type": "string",
            "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header.",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.insecure_ssl",
            "type": "string",
            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
            "required": false,
            "location": "body"
          },
          {
            "name": "events",
            "type": "string[]",
            "description": "Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.",
            "default": "[\"push\"]",
            "required": false,
            "location": "body"
          },
          {
            "name": "active",
            "type": "boolean",
            "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
            "default": true,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "web",
            "active": true,
            "events": [
              "push",
              "pull_request"
            ],
            "config": {
              "url": "http://example.com/webhook",
              "content_type": "json"
            }
          }
        ],
        "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can share the same `config` as long as those webhooks do not have any `events` that overlap.\n\nHere's how you can create a hook that posts payloads in JSON format:",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/repos/octocat/Hello-World/hooks/1",
              "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/1/test",
              "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/1/pings",
              "name": "web",
              "events": [
                "push",
                "pull_request"
              ],
              "active": true,
              "config": {
                "url": "http://example.com/webhook",
                "content_type": "json"
              },
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z"
            }
          }
        ],
        "idName": "create-hook",
        "documentationUrl": "https://developer.github.com/v3/repos/hooks/#create-a-hook"
      },
      {
        "name": "Edit a hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/hooks/:hook_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "config",
            "type": "object",
            "description": "Key/value pairs to provide settings for this webhook. [These are defined below](#create-hook-config-params).",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.url",
            "type": "string",
            "description": "The URL to which the payloads will be delivered.",
            "required": true,
            "location": "body"
          },
          {
            "name": "config.content_type",
            "type": "string",
            "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.secret",
            "type": "string",
            "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header.",
            "required": false,
            "location": "body"
          },
          {
            "name": "config.insecure_ssl",
            "type": "string",
            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
            "required": false,
            "location": "body"
          },
          {
            "name": "events",
            "type": "string[]",
            "description": "Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for. This replaces the entire array of events.",
            "default": "[\"push\"]",
            "required": false,
            "location": "body"
          },
          {
            "name": "add_events",
            "type": "string[]",
            "description": "Determines a list of events to be added to the list of events that the Hook triggers for.",
            "required": false,
            "location": "body"
          },
          {
            "name": "remove_events",
            "type": "string[]",
            "description": "Determines a list of events to be removed from the list of events that the Hook triggers for.",
            "required": false,
            "location": "body"
          },
          {
            "name": "active",
            "type": "boolean",
            "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
            "default": true,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "active": true,
            "add_events": [
              "pull_request"
            ]
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "url": "https://api.github.com/repos/octocat/Hello-World/hooks/1",
              "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/1/test",
              "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/1/pings",
              "name": "web",
              "events": [
                "push",
                "pull_request"
              ],
              "active": true,
              "config": {
                "url": "http://example.com/webhook",
                "content_type": "json"
              },
              "updated_at": "2011-09-06T20:39:23Z",
              "created_at": "2011-09-06T17:26:27Z"
            }
          }
        ],
        "idName": "update-hook",
        "documentationUrl": "https://developer.github.com/v3/repos/hooks/#edit-a-hook"
      },
      {
        "name": "Test a push hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hook_id/tests",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "test-push-hook",
        "documentationUrl": "https://developer.github.com/v3/repos/hooks/#test-a-push-hook"
      },
      {
        "name": "Ping a hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/hooks/:hook_id/pings",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "ping-hook",
        "documentationUrl": "https://developer.github.com/v3/repos/hooks/#ping-a-hook"
      },
      {
        "name": "Delete a hook",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/hooks/:hook_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "hook_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-hook",
        "documentationUrl": "https://developer.github.com/v3/repos/hooks/#delete-a-hook"
      },
      {
        "name": "List invitations for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/invitations",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "repository": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                },
                "invitee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "inviter": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "permissions": "write",
                "created_at": "2016-06-13T14:52:50-05:00",
                "url": "https://api.github.com/user/repository_invitations/1296269",
                "html_url": "https://github.com/octocat/Hello-World/invitations"
              }
            ]
          }
        ],
        "idName": "list-invitations",
        "documentationUrl": "https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository"
      },
      {
        "name": "Delete a repository invitation",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/invitations/:invitation_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "invitation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-invitation",
        "documentationUrl": "https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation"
      },
      {
        "name": "Update a repository invitation",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/invitations/:invitation_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "invitation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "permissions",
            "type": "string",
            "description": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, and `admin`.",
            "required": false,
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "location": "body"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
              },
              "invitee": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "inviter": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "permissions": "write",
              "created_at": "2016-06-13T14:52:50-05:00",
              "url": "https://api.github.com/user/repository_invitations/1296269",
              "html_url": "https://github.com/octocat/Hello-World/invitations"
            }
          }
        ],
        "idName": "update-invitation",
        "documentationUrl": "https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation"
      },
      {
        "name": "List a user's repository invitations",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/repository_invitations",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "repository": {
                  "id": 1296269,
                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                  "name": "Hello-World",
                  "full_name": "octocat/Hello-World",
                  "owner": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "private": false,
                  "html_url": "https://github.com/octocat/Hello-World",
                  "description": "This your first repo!",
                  "fork": false,
                  "url": "https://api.github.com/repos/octocat/Hello-World",
                  "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                  "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                  "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                  "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                  "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                  "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                  "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                  "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                  "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                  "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                  "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                  "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                  "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                  "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                  "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                  "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                  "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                  "git_url": "git:github.com/octocat/Hello-World.git",
                  "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                  "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                  "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                  "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                  "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                  "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                  "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                  "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                  "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                  "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                  "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                  "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                  "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                  "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                  "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                  "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                  "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                  "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                },
                "invitee": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "inviter": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "permissions": "write",
                "created_at": "2016-06-13T14:52:50-05:00",
                "url": "https://api.github.com/user/repository_invitations/1296269",
                "html_url": "https://github.com/octocat/Hello-World/invitations"
              }
            ]
          }
        ],
        "idName": "list-invitations-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations"
      },
      {
        "name": "Accept a repository invitation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/user/repository_invitations/:invitation_id",
        "previews": [],
        "params": [
          {
            "name": "invitation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "accept-invitation",
        "documentationUrl": "https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation"
      },
      {
        "name": "Decline a repository invitation",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/repository_invitations/:invitation_id",
        "previews": [],
        "params": [
          {
            "name": "invitation_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "decline-invitation",
        "documentationUrl": "https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation"
      },
      {
        "name": "List deploy keys",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/keys",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "key": "ssh-rsa AAA...",
                "url": "https://api.github.com/repos/octocat/Hello-World/keys/1",
                "title": "octocat@octomac",
                "verified": true,
                "created_at": "2014-12-10T15:53:42Z",
                "read_only": true
              }
            ]
          }
        ],
        "idName": "list-deploy-keys",
        "documentationUrl": "https://developer.github.com/v3/repos/keys/#list-deploy-keys"
      },
      {
        "name": "Get a deploy key",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/keys/:key_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "key_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "key": "ssh-rsa AAA...",
              "url": "https://api.github.com/repos/octocat/Hello-World/keys/1",
              "title": "octocat@octomac",
              "verified": true,
              "created_at": "2014-12-10T15:53:42Z",
              "read_only": true
            }
          }
        ],
        "idName": "get-deploy-key",
        "documentationUrl": "https://developer.github.com/v3/repos/keys/#get-a-deploy-key"
      },
      {
        "name": "Add a new deploy key",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/keys",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "A name for the key.",
            "required": false,
            "location": "body"
          },
          {
            "name": "key",
            "type": "string",
            "description": "The contents of the key.",
            "required": true,
            "location": "body"
          },
          {
            "name": "read_only",
            "type": "boolean",
            "description": "If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  \n  \nDeploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://help.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://help.github.com/articles/permission-levels-for-a-user-account-repository/).\"",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "title": "octocat@octomac",
            "key": "ssh-rsa AAA...",
            "read_only": true
          }
        ],
        "description": "Here's how you can create a read-only deploy key:\n\n",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "key": "ssh-rsa AAA...",
              "url": "https://api.github.com/repos/octocat/Hello-World/keys/1",
              "title": "octocat@octomac",
              "verified": true,
              "created_at": "2014-12-10T15:53:42Z",
              "read_only": true
            }
          }
        ],
        "idName": "add-deploy-key",
        "documentationUrl": "https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key"
      },
      {
        "name": "Remove a deploy key",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/keys/:key_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "key_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-deploy-key",
        "documentationUrl": "https://developer.github.com/v3/repos/keys/#remove-a-deploy-key"
      },
      {
        "name": "Perform a merge",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/merges",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "base",
            "type": "string",
            "description": "The name of the base branch that the head will be merged into.",
            "required": true,
            "location": "body"
          },
          {
            "name": "head",
            "type": "string",
            "description": "The head to merge. This can be a branch name or a commit SHA1.",
            "required": true,
            "location": "body"
          },
          {
            "name": "commit_message",
            "type": "string",
            "description": "Commit message to use for the merge commit. If omitted, a default message will be used.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "base": "master",
            "head": "cool_feature",
            "commit_message": "Shipped cool_feature!"
          }
        ],
        "description": "",
        "idName": "merge",
        "documentationUrl": "https://developer.github.com/v3/repos/merging/#perform-a-merge"
      },
      {
        "name": "Get information about a Pages site",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pages",
        "previews": [
          {
            "name": "mister-fantastic",
            "description": "**Note:** The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mister-fantastic-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/github/developer.github.com/pages",
              "status": "built",
              "cname": "developer.github.com",
              "custom_404": false,
              "html_url": "https://developer.github.com",
              "source": {
                "branch": "master",
                "directory": "/"
              }
            }
          }
        ],
        "idName": "get-pages",
        "documentationUrl": "https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site"
      },
      {
        "name": "Enable a Pages site",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pages",
        "previews": [
          {
            "name": "switcheroo",
            "description": "**Note:** Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.switcheroo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "mister-fantastic",
            "description": "**Note:** The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mister-fantastic-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "source",
            "type": "object",
            "description": "",
            "required": false,
            "location": "body"
          },
          {
            "name": "source.branch",
            "type": "string",
            "description": "The repository branch used to publish your [site's source files](https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/). Can be either `master` or `gh-pages`.",
            "required": false,
            "enum": [
              "master",
              "gh-pages"
            ],
            "location": "body"
          },
          {
            "name": "source.path",
            "type": "string",
            "description": "The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "source": {
              "branch": "master",
              "path": "/docs"
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/github/developer.github.com/pages",
              "status": "built",
              "cname": "developer.github.com",
              "custom_404": false,
              "html_url": "https://developer.github.com",
              "source": {
                "branch": "master",
                "directory": "/"
              }
            }
          }
        ],
        "idName": "enable-pages-site",
        "documentationUrl": "https://developer.github.com/v3/repos/pages/#enable-a-pages-site"
      },
      {
        "name": "Disable a Pages site",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/pages",
        "previews": [
          {
            "name": "switcheroo",
            "description": "**Note:** Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.switcheroo-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "disable-pages-site",
        "documentationUrl": "https://developer.github.com/v3/repos/pages/#disable-a-pages-site"
      },
      {
        "name": "Update information about a Pages site",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/repos/:owner/:repo/pages",
        "previews": [
          {
            "name": "mister-fantastic",
            "description": "**Note:** The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mister-fantastic-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "cname",
            "type": "string",
            "description": "Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see \"[Using a custom domain with GitHub Pages](https://help.github.com/articles/using-a-custom-domain-with-github-pages/).\"",
            "required": false,
            "location": "body"
          },
          {
            "name": "source",
            "type": "string",
            "description": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`.",
            "required": false,
            "enum": [
              "\"gh-pages\"",
              "\"master\"",
              "\"master /docs\""
            ],
            "location": "body"
          }
        ],
        "requests": [
          {
            "cname": "octocatblog.com",
            "source": "master /docs"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "update-information-about-pages-site",
        "documentationUrl": "https://developer.github.com/v3/repos/pages/#update-information-about-a-pages-site"
      },
      {
        "name": "Request a page build",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/pages/builds",
        "previews": [
          {
            "name": "mister-fantastic",
            "description": "**Note:** This endpoint is currently available for developers to preview. During the preview period, the API may change without advance notice. To access this endpoint during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.mister-fantastic-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\nBuild requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/github/developer.github.com/pages/builds/latest",
              "status": "queued"
            }
          }
        ],
        "idName": "request-page-build",
        "documentationUrl": "https://developer.github.com/v3/repos/pages/#request-a-page-build"
      },
      {
        "name": "List Pages builds",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/github/developer.github.com/pages/builds/5472601",
                "status": "built",
                "error": {
                  "message": null
                },
                "pusher": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "commit": "351391cdcb88ffae71ec3028c91f375a8036a26b",
                "duration": 2104,
                "created_at": "2014-02-10T19:00:49Z",
                "updated_at": "2014-02-10T19:00:51Z"
              }
            ]
          }
        ],
        "idName": "list-pages-builds",
        "documentationUrl": "https://developer.github.com/v3/repos/pages/#list-pages-builds"
      },
      {
        "name": "Get latest Pages build",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds/latest",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/github/developer.github.com/pages/builds/5472601",
              "status": "built",
              "error": {
                "message": null
              },
              "pusher": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "commit": "351391cdcb88ffae71ec3028c91f375a8036a26b",
              "duration": 2104,
              "created_at": "2014-02-10T19:00:49Z",
              "updated_at": "2014-02-10T19:00:51Z"
            }
          }
        ],
        "idName": "get-latest-pages-build",
        "documentationUrl": "https://developer.github.com/v3/repos/pages/#get-latest-pages-build"
      },
      {
        "name": "Get a specific Pages build",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/pages/builds/:build_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "build_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/github/developer.github.com/pages/builds/5472601",
              "status": "built",
              "error": {
                "message": null
              },
              "pusher": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "commit": "351391cdcb88ffae71ec3028c91f375a8036a26b",
              "duration": 2104,
              "created_at": "2014-02-10T19:00:49Z",
              "updated_at": "2014-02-10T19:00:51Z"
            }
          }
        ],
        "idName": "get-pages-build",
        "documentationUrl": "https://developer.github.com/v3/repos/pages/#get-a-specific-pages-build"
      },
      {
        "name": "List releases for a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/releases",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://developer.github.com/v3/repos/#list-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
                "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
                "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
                "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
                "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
                "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
                "id": 1,
                "node_id": "MDc6UmVsZWFzZTE=",
                "tag_name": "v1.0.0",
                "target_commitish": "master",
                "name": "v1.0.0",
                "body": "Description of the release",
                "draft": false,
                "prerelease": false,
                "created_at": "2013-02-27T19:35:32Z",
                "published_at": "2013-02-27T19:35:32Z",
                "author": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "assets": [
                  {
                    "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
                    "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
                    "id": 1,
                    "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
                    "name": "example.zip",
                    "label": "short description",
                    "state": "uploaded",
                    "content_type": "application/zip",
                    "size": 1024,
                    "download_count": 42,
                    "created_at": "2013-02-27T19:35:32Z",
                    "updated_at": "2013-02-27T19:35:32Z",
                    "uploader": {
                      "login": "octocat",
                      "id": 1,
                      "node_id": "MDQ6VXNlcjE=",
                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                      "gravatar_id": "",
                      "url": "https://api.github.com/users/octocat",
                      "html_url": "https://github.com/octocat",
                      "followers_url": "https://api.github.com/users/octocat/followers",
                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                      "repos_url": "https://api.github.com/users/octocat/repos",
                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                      "type": "User",
                      "site_admin": false
                    }
                  }
                ]
              }
            ]
          }
        ],
        "idName": "list-releases",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository"
      },
      {
        "name": "Get a single release",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/:release_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "release_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://developer.github.com/v3/#hypermedia).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
              "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
              "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
              "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
              "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
              "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
              "id": 1,
              "node_id": "MDc6UmVsZWFzZTE=",
              "tag_name": "v1.0.0",
              "target_commitish": "master",
              "name": "v1.0.0",
              "body": "Description of the release",
              "draft": false,
              "prerelease": false,
              "created_at": "2013-02-27T19:35:32Z",
              "published_at": "2013-02-27T19:35:32Z",
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assets": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
                  "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
                  "id": 1,
                  "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
                  "name": "example.zip",
                  "label": "short description",
                  "state": "uploaded",
                  "content_type": "application/zip",
                  "size": 1024,
                  "download_count": 42,
                  "created_at": "2013-02-27T19:35:32Z",
                  "updated_at": "2013-02-27T19:35:32Z",
                  "uploader": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                }
              ]
            },
            "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](/v3/#hypermedia)."
          }
        ],
        "idName": "get-release",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#get-a-single-release"
      },
      {
        "name": "Get the latest release",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/latest",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "View the latest published full release for the repository.\n\nThe latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
              "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
              "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
              "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
              "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
              "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
              "id": 1,
              "node_id": "MDc6UmVsZWFzZTE=",
              "tag_name": "v1.0.0",
              "target_commitish": "master",
              "name": "v1.0.0",
              "body": "Description of the release",
              "draft": false,
              "prerelease": false,
              "created_at": "2013-02-27T19:35:32Z",
              "published_at": "2013-02-27T19:35:32Z",
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assets": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
                  "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
                  "id": 1,
                  "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
                  "name": "example.zip",
                  "label": "short description",
                  "state": "uploaded",
                  "content_type": "application/zip",
                  "size": 1024,
                  "download_count": 42,
                  "created_at": "2013-02-27T19:35:32Z",
                  "updated_at": "2013-02-27T19:35:32Z",
                  "uploader": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                }
              ]
            }
          }
        ],
        "idName": "get-latest-release",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#get-the-latest-release"
      },
      {
        "name": "Get a release by tag name",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/tags/:tag",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "tag",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Get a published release with the specified tag.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
              "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
              "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
              "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
              "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
              "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
              "id": 1,
              "node_id": "MDc6UmVsZWFzZTE=",
              "tag_name": "v1.0.0",
              "target_commitish": "master",
              "name": "v1.0.0",
              "body": "Description of the release",
              "draft": false,
              "prerelease": false,
              "created_at": "2013-02-27T19:35:32Z",
              "published_at": "2013-02-27T19:35:32Z",
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assets": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
                  "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
                  "id": 1,
                  "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
                  "name": "example.zip",
                  "label": "short description",
                  "state": "uploaded",
                  "content_type": "application/zip",
                  "size": 1024,
                  "download_count": 42,
                  "created_at": "2013-02-27T19:35:32Z",
                  "updated_at": "2013-02-27T19:35:32Z",
                  "uploader": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                }
              ]
            }
          }
        ],
        "idName": "get-release-by-tag",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name"
      },
      {
        "name": "Create a release",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/releases",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "tag_name",
            "type": "string",
            "description": "The name of the tag.",
            "required": true,
            "location": "body"
          },
          {
            "name": "target_commitish",
            "type": "string",
            "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists.",
            "default": "the repository's default branch (usually `master`).",
            "required": false,
            "location": "body"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the release.",
            "required": false,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "Text describing the contents of the tag.",
            "required": false,
            "location": "body"
          },
          {
            "name": "draft",
            "type": "boolean",
            "description": "`true` to create a draft (unpublished) release, `false` to create a published one.",
            "default": false,
            "required": false,
            "location": "body"
          },
          {
            "name": "prerelease",
            "type": "boolean",
            "description": "`true` to identify the release as a prerelease. `false` to identify the release as a full release.",
            "default": false,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "tag_name": "v1.0.0",
            "target_commitish": "master",
            "name": "v1.0.0",
            "body": "Description of the release",
            "draft": false,
            "prerelease": false
          }
        ],
        "description": "Users with push access to the repository can create a release.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
              "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
              "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
              "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
              "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
              "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
              "id": 1,
              "node_id": "MDc6UmVsZWFzZTE=",
              "tag_name": "v1.0.0",
              "target_commitish": "master",
              "name": "v1.0.0",
              "body": "Description of the release",
              "draft": false,
              "prerelease": false,
              "created_at": "2013-02-27T19:35:32Z",
              "published_at": "2013-02-27T19:35:32Z",
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assets": []
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-release",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#create-a-release"
      },
      {
        "name": "Edit a release",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/releases/:release_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "release_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "tag_name",
            "type": "string",
            "description": "The name of the tag.",
            "required": false,
            "location": "body"
          },
          {
            "name": "target_commitish",
            "type": "string",
            "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists.",
            "default": "the repository's default branch (usually `master`).",
            "required": false,
            "location": "body"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the release.",
            "required": false,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "Text describing the contents of the tag.",
            "required": false,
            "location": "body"
          },
          {
            "name": "draft",
            "type": "boolean",
            "description": "`true` makes the release a draft, and `false` publishes the release.",
            "required": false,
            "location": "body"
          },
          {
            "name": "prerelease",
            "type": "boolean",
            "description": "`true` to identify the release as a prerelease, `false` to identify the release as a full release.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "tag_name": "v1.0.0",
            "target_commitish": "master",
            "name": "v1.0.0",
            "body": "Description of the release",
            "draft": false,
            "prerelease": false
          }
        ],
        "description": "Users with push access to the repository can edit a release.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
              "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
              "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
              "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
              "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
              "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
              "id": 1,
              "node_id": "MDc6UmVsZWFzZTE=",
              "tag_name": "v1.0.0",
              "target_commitish": "master",
              "name": "v1.0.0",
              "body": "Description of the release",
              "draft": false,
              "prerelease": false,
              "created_at": "2013-02-27T19:35:32Z",
              "published_at": "2013-02-27T19:35:32Z",
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "assets": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
                  "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
                  "id": 1,
                  "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
                  "name": "example.zip",
                  "label": "short description",
                  "state": "uploaded",
                  "content_type": "application/zip",
                  "size": 1024,
                  "download_count": 42,
                  "created_at": "2013-02-27T19:35:32Z",
                  "updated_at": "2013-02-27T19:35:32Z",
                  "uploader": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  }
                }
              ]
            }
          }
        ],
        "idName": "update-release",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#edit-a-release"
      },
      {
        "name": "Delete a release",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/releases/:release_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "release_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Users with push access to the repository can delete a release.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-release",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#delete-a-release"
      },
      {
        "name": "List assets for a release",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/:release_id/assets",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "release_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
                "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
                "id": 1,
                "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
                "name": "example.zip",
                "label": "short description",
                "state": "uploaded",
                "content_type": "application/zip",
                "size": 1024,
                "download_count": 42,
                "created_at": "2013-02-27T19:35:32Z",
                "updated_at": "2013-02-27T19:35:32Z",
                "uploader": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              }
            ]
          }
        ],
        "idName": "list-assets-for-release",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#list-assets-for-a-release"
      },
      {
        "name": "Upload a release asset",
        "enabledForApps": true,
        "method": "POST",
        "path": ":url",
        "previews": [],
        "params": [
          {
            "name": "url",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "headers",
            "location": "headers",
            "required": true,
            "type": "object",
            "description": "Request headers containing `content-type` and `content-length`"
          },
          {
            "name": "headers.content-length",
            "type": "integer",
            "description": "The content size of the asset in bytes",
            "required": true,
            "location": "headers"
          },
          {
            "name": "headers.content-type",
            "type": "string",
            "description": "The content type of the asset. This should be set in the Header. Example: `\"application/zip\"`. For a list of acceptable types, refer this list of [media types](https://www.iana.org/assignments/media-types/media-types.xhtml).",
            "required": true,
            "location": "headers"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The file name of the asset. This should be set in a URI query parameter.",
            "required": true,
            "location": "query"
          },
          {
            "name": "label",
            "type": "string",
            "description": "An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter.",
            "required": false,
            "location": "query"
          },
          {
            "name": "file",
            "type": "string | object",
            "description": "",
            "required": true,
            "location": "body",
            "mapTo": "input"
          }
        ],
        "description": "This endpoint makes use of [a Hypermedia relation](https://developer.github.com/v3/#hypermedia) to determine which URL to access. This endpoint is provided by a URI template in [the release's API response](#get-a-single-release). You need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nThe asset data is expected in its raw binary form, rather than JSON. Everything else about the endpoint is the same as the rest of the API. For example, you'll still need to pass your authentication to be able to upload an asset.\n\nSend the raw binary content of the asset as the request body.\n\nThis may leave an empty asset with a state of `\"new\"`. It can be safely deleted.",
        "idName": "upload-release-asset",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#upload-a-release-asset",
        "isOverride": true
      },
      {
        "name": "Get a single release asset",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/releases/assets/:asset_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "asset_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://developer.github.com/v3/media/#media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
              "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
              "id": 1,
              "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
              "name": "example.zip",
              "label": "short description",
              "state": "uploaded",
              "content_type": "application/zip",
              "size": 1024,
              "download_count": 42,
              "created_at": "2013-02-27T19:35:32Z",
              "updated_at": "2013-02-27T19:35:32Z",
              "uploader": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            },
            "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](/v3/media/#media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response."
          }
        ],
        "idName": "get-release-asset",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#get-a-single-release-asset"
      },
      {
        "name": "Edit a release asset",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/repos/:owner/:repo/releases/assets/:asset_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "asset_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The file name of the asset.",
            "required": false,
            "location": "body"
          },
          {
            "name": "label",
            "type": "string",
            "description": "An alternate short description of the asset. Used in place of the filename.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "foo-1.0.0-osx.zip",
            "label": "Mac binary"
          }
        ],
        "description": "Users with push access to the repository can edit a release asset.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
              "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
              "id": 1,
              "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
              "name": "example.zip",
              "label": "short description",
              "state": "uploaded",
              "content_type": "application/zip",
              "size": 1024,
              "download_count": 42,
              "created_at": "2013-02-27T19:35:32Z",
              "updated_at": "2013-02-27T19:35:32Z",
              "uploader": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "update-release-asset",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#edit-a-release-asset"
      },
      {
        "name": "Delete a release asset",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/repos/:owner/:repo/releases/assets/:asset_id",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "asset_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-release-asset",
        "documentationUrl": "https://developer.github.com/v3/repos/releases/#delete-a-release-asset"
      },
      {
        "name": "Get contributors list with additions, deletions, and commit counts",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/contributors",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "*   `total` - The Total number of commits authored by the contributor.\n\nWeekly Hash (`weeks` array):\n\n*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "author": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "total": 135,
                "weeks": [
                  {
                    "w": "1367712000",
                    "a": 6898,
                    "d": 77,
                    "c": 10
                  }
                ]
              }
            ],
            "description": "*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits"
          }
        ],
        "idName": "get-contributors-stats",
        "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts"
      },
      {
        "name": "Get the last year of commit activity data",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/commit_activity",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "days": [
                  0,
                  3,
                  26,
                  20,
                  39,
                  1,
                  0
                ],
                "total": 89,
                "week": 1336280400
              }
            ]
          }
        ],
        "idName": "get-commit-activity-stats",
        "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data"
      },
      {
        "name": "Get the number of additions and deletions per week",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/code_frequency",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              [
                1302998400,
                1124,
                -435
              ]
            ],
            "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository."
          }
        ],
        "idName": "get-code-frequency-stats",
        "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week"
      },
      {
        "name": "Get the weekly commit count for the repository owner and everyone else",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/participation",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\nThe array order is oldest week (index 0) to most recent week.\n\n",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "all": [
                11,
                21,
                15,
                2,
                8,
                1,
                8,
                23,
                17,
                21,
                11,
                10,
                33,
                91,
                38,
                34,
                22,
                23,
                32,
                3,
                43,
                87,
                71,
                18,
                13,
                5,
                13,
                16,
                66,
                27,
                12,
                45,
                110,
                117,
                13,
                8,
                18,
                9,
                19,
                26,
                39,
                12,
                20,
                31,
                46,
                91,
                45,
                10,
                24,
                9,
                29,
                7
              ],
              "owner": [
                3,
                2,
                3,
                0,
                2,
                0,
                5,
                14,
                7,
                9,
                1,
                5,
                0,
                48,
                19,
                2,
                0,
                1,
                10,
                2,
                23,
                40,
                35,
                8,
                8,
                2,
                10,
                6,
                30,
                0,
                2,
                9,
                53,
                104,
                3,
                3,
                10,
                4,
                7,
                11,
                21,
                4,
                4,
                22,
                26,
                63,
                11,
                2,
                14,
                1,
                10,
                3
              ]
            },
            "description": "The array order is oldest week (index 0) to most recent week."
          }
        ],
        "idName": "get-participation-stats",
        "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else"
      },
      {
        "name": "Get the number of commits per hour in each day",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/stats/punch_card",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Each array contains the day number, hour number, and number of commits:\n\n*   `0-6`: Sunday - Saturday\n*   `0-23`: Hour of day\n*   Number of commits\n\nFor example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              [
                0,
                0,
                5
              ],
              [
                0,
                1,
                43
              ],
              [
                0,
                2,
                21
              ]
            ],
            "description": "For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits."
          }
        ],
        "idName": "get-punch-card-stats",
        "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day"
      },
      {
        "name": "Create a status",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/repos/:owner/:repo/statuses/:sha",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "sha",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.",
            "required": true,
            "enum": [
              "error",
              "failure",
              "pending",
              "success"
            ],
            "location": "body"
          },
          {
            "name": "target_url",
            "type": "string",
            "description": "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n`http://ci.example.com/user/repo/build/sha`",
            "required": false,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "A short description of the status.",
            "required": false,
            "location": "body"
          },
          {
            "name": "context",
            "type": "string",
            "description": "A string label to differentiate this status from the status of other systems.",
            "default": "default",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "state": "success",
            "target_url": "https://example.com/build/status",
            "description": "The build succeeded!",
            "context": "continuous-integration/jenkins"
          }
        ],
        "description": "Users with push access in a repository can create commit statuses for a given SHA.\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "avatar_url": "https://github.com/images/error/hubot_happy.gif",
              "id": 1,
              "node_id": "MDY6U3RhdHVzMQ==",
              "state": "success",
              "description": "Build has completed successfully",
              "target_url": "https://ci.example.com/1000/output",
              "context": "continuous-integration/jenkins",
              "created_at": "2012-07-20T01:19:13Z",
              "updated_at": "2012-07-20T01:19:13Z",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          }
        ],
        "idName": "create-status",
        "documentationUrl": "https://developer.github.com/v3/repos/statuses/#create-a-status"
      },
      {
        "name": "List statuses for a specific ref",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/statuses",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                "id": 1,
                "node_id": "MDY6U3RhdHVzMQ==",
                "state": "success",
                "description": "Build has completed successfully",
                "target_url": "https://ci.example.com/1000/output",
                "context": "continuous-integration/jenkins",
                "created_at": "2012-07-20T01:19:13Z",
                "updated_at": "2012-07-20T01:19:13Z",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              }
            ]
          }
        ],
        "idName": "list-statuses-for-ref",
        "documentationUrl": "https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref"
      },
      {
        "name": "Get the combined status for a specific ref",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/commits/:ref/status",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "ref",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://developer.github.com/v3/#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "state": "success",
              "statuses": [
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                  "id": 1,
                  "node_id": "MDY6U3RhdHVzMQ==",
                  "state": "success",
                  "description": "Build has completed successfully",
                  "target_url": "https://ci.example.com/1000/output",
                  "context": "continuous-integration/jenkins",
                  "created_at": "2012-07-20T01:19:13Z",
                  "updated_at": "2012-07-20T01:19:13Z"
                },
                {
                  "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "id": 2,
                  "node_id": "MDY6U3RhdHVzMg==",
                  "state": "success",
                  "description": "Testing has completed successfully",
                  "target_url": "https://ci.example.com/2000/output",
                  "context": "security/brakeman",
                  "created_at": "2012-08-20T01:19:13Z",
                  "updated_at": "2012-08-20T01:19:13Z"
                }
              ],
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "total_count": 2,
              "repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
              },
              "commit_url": "https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "url": "https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status"
            }
          }
        ],
        "idName": "get-combined-status-for-ref",
        "documentationUrl": "https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"
      },
      {
        "name": "List referrers",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/traffic/popular/referrers",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Get the top 10 referrers over the last 14 days.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "referrer": "Google",
                "count": 4,
                "uniques": 3
              },
              {
                "referrer": "stackoverflow.com",
                "count": 2,
                "uniques": 2
              },
              {
                "referrer": "eggsonbread.com",
                "count": 1,
                "uniques": 1
              },
              {
                "referrer": "yandex.ru",
                "count": 1,
                "uniques": 1
              }
            ]
          }
        ],
        "idName": "get-top-referrers",
        "documentationUrl": "https://developer.github.com/v3/repos/traffic/#list-referrers"
      },
      {
        "name": "List paths",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/traffic/popular/paths",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Get the top 10 popular contents over the last 14 days.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "path": "/github/hubot",
                "title": "github/hubot: A customizable life embetterment robot.",
                "count": 3542,
                "uniques": 2225
              },
              {
                "path": "/github/hubot/blob/master/docs/scripting.md",
                "title": "hubot/scripting.md at master · github/hubot · GitHub",
                "count": 1707,
                "uniques": 804
              },
              {
                "path": "/github/hubot/tree/master/docs",
                "title": "hubot/docs at master · github/hubot · GitHub",
                "count": 685,
                "uniques": 435
              },
              {
                "path": "/github/hubot/tree/master/src",
                "title": "hubot/src at master · github/hubot · GitHub",
                "count": 577,
                "uniques": 347
              },
              {
                "path": "/github/hubot/blob/master/docs/index.md",
                "title": "hubot/index.md at master · github/hubot · GitHub",
                "count": 379,
                "uniques": 259
              },
              {
                "path": "/github/hubot/blob/master/docs/adapters.md",
                "title": "hubot/adapters.md at master · github/hubot · GitHub",
                "count": 354,
                "uniques": 201
              },
              {
                "path": "/github/hubot/tree/master/examples",
                "title": "hubot/examples at master · github/hubot · GitHub",
                "count": 340,
                "uniques": 260
              },
              {
                "path": "/github/hubot/blob/master/docs/deploying/heroku.md",
                "title": "hubot/heroku.md at master · github/hubot · GitHub",
                "count": 324,
                "uniques": 217
              },
              {
                "path": "/github/hubot/blob/master/src/robot.coffee",
                "title": "hubot/robot.coffee at master · github/hubot · GitHub",
                "count": 293,
                "uniques": 191
              },
              {
                "path": "/github/hubot/blob/master/LICENSE.md",
                "title": "hubot/LICENSE.md at master · github/hubot · GitHub",
                "count": 281,
                "uniques": 222
              }
            ]
          }
        ],
        "idName": "get-top-paths",
        "documentationUrl": "https://developer.github.com/v3/repos/traffic/#list-paths"
      },
      {
        "name": "Views",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/traffic/views",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per",
            "type": "string",
            "description": "Must be one of: `day`, `week`.",
            "default": "day",
            "required": false,
            "enum": [
              "day",
              "week"
            ],
            "location": "query"
          }
        ],
        "description": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "count": 14850,
              "uniques": 3782,
              "views": [
                {
                  "timestamp": "2016-10-10T00:00:00Z",
                  "count": 440,
                  "uniques": 143
                },
                {
                  "timestamp": "2016-10-11T00:00:00Z",
                  "count": 1308,
                  "uniques": 414
                },
                {
                  "timestamp": "2016-10-12T00:00:00Z",
                  "count": 1486,
                  "uniques": 452
                },
                {
                  "timestamp": "2016-10-13T00:00:00Z",
                  "count": 1170,
                  "uniques": 401
                },
                {
                  "timestamp": "2016-10-14T00:00:00Z",
                  "count": 868,
                  "uniques": 266
                },
                {
                  "timestamp": "2016-10-15T00:00:00Z",
                  "count": 495,
                  "uniques": 157
                },
                {
                  "timestamp": "2016-10-16T00:00:00Z",
                  "count": 524,
                  "uniques": 175
                },
                {
                  "timestamp": "2016-10-17T00:00:00Z",
                  "count": 1263,
                  "uniques": 412
                },
                {
                  "timestamp": "2016-10-18T00:00:00Z",
                  "count": 1402,
                  "uniques": 417
                },
                {
                  "timestamp": "2016-10-19T00:00:00Z",
                  "count": 1394,
                  "uniques": 424
                },
                {
                  "timestamp": "2016-10-20T00:00:00Z",
                  "count": 1492,
                  "uniques": 448
                },
                {
                  "timestamp": "2016-10-21T00:00:00Z",
                  "count": 1153,
                  "uniques": 332
                },
                {
                  "timestamp": "2016-10-22T00:00:00Z",
                  "count": 566,
                  "uniques": 168
                },
                {
                  "timestamp": "2016-10-23T00:00:00Z",
                  "count": 675,
                  "uniques": 184
                },
                {
                  "timestamp": "2016-10-24T00:00:00Z",
                  "count": 614,
                  "uniques": 237
                }
              ]
            }
          }
        ],
        "idName": "get-views",
        "documentationUrl": "https://developer.github.com/v3/repos/traffic/#views"
      },
      {
        "name": "Clones",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/repos/:owner/:repo/traffic/clones",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per",
            "type": "string",
            "description": "Must be one of: `day`, `week`.",
            "default": "day",
            "required": false,
            "enum": [
              "day",
              "week"
            ],
            "location": "query"
          }
        ],
        "description": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "count": 173,
              "uniques": 128,
              "clones": [
                {
                  "timestamp": "2016-10-10T00:00:00Z",
                  "count": 2,
                  "uniques": 1
                },
                {
                  "timestamp": "2016-10-11T00:00:00Z",
                  "count": 17,
                  "uniques": 16
                },
                {
                  "timestamp": "2016-10-12T00:00:00Z",
                  "count": 21,
                  "uniques": 15
                },
                {
                  "timestamp": "2016-10-13T00:00:00Z",
                  "count": 8,
                  "uniques": 7
                },
                {
                  "timestamp": "2016-10-14T00:00:00Z",
                  "count": 5,
                  "uniques": 5
                },
                {
                  "timestamp": "2016-10-15T00:00:00Z",
                  "count": 2,
                  "uniques": 2
                },
                {
                  "timestamp": "2016-10-16T00:00:00Z",
                  "count": 8,
                  "uniques": 7
                },
                {
                  "timestamp": "2016-10-17T00:00:00Z",
                  "count": 26,
                  "uniques": 15
                },
                {
                  "timestamp": "2016-10-18T00:00:00Z",
                  "count": 19,
                  "uniques": 17
                },
                {
                  "timestamp": "2016-10-19T00:00:00Z",
                  "count": 19,
                  "uniques": 14
                },
                {
                  "timestamp": "2016-10-20T00:00:00Z",
                  "count": 19,
                  "uniques": 15
                },
                {
                  "timestamp": "2016-10-21T00:00:00Z",
                  "count": 9,
                  "uniques": 7
                },
                {
                  "timestamp": "2016-10-22T00:00:00Z",
                  "count": 5,
                  "uniques": 5
                },
                {
                  "timestamp": "2016-10-23T00:00:00Z",
                  "count": 6,
                  "uniques": 5
                },
                {
                  "timestamp": "2016-10-24T00:00:00Z",
                  "count": 7,
                  "uniques": 5
                }
              ]
            }
          }
        ],
        "idName": "get-clones",
        "documentationUrl": "https://developer.github.com/v3/repos/traffic/#clones"
      }
    ],
    "scim": [
      {
        "name": "Get a list of provisioned identities",
        "enabledForApps": true,
        "githubCloudOnly": true,
        "method": "GET",
        "path": "/scim/v2/organizations/:org/Users",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "startIndex",
            "type": "integer",
            "description": "Used for pagination: the index of the first result to return.",
            "required": false,
            "location": "query"
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Used for pagination: the number of results to return.",
            "required": false,
            "location": "query"
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query: `?filter=userName%20eq%20\\\"Octocat\\\"`.",
            "required": false,
            "location": "query"
          }
        ],
        "description": "To filter for a specific email address, use the `email` query parameter and the `eq` operator:\n\nYour filter would look like this cURL command:\n\nRetrieves users that match the filter. In the example, we searched only for [octocat@github.com](mailto:octocat@github.com).\n\nRetrieves a paginated list of all provisioned organization members, including pending invitations.",
        "idName": "list-provisioned-identities",
        "documentationUrl": "https://developer.github.com/v3/scim/#get-a-list-of-provisioned-identities"
      },
      {
        "name": "Get provisioning details for a single user",
        "enabledForApps": true,
        "githubCloudOnly": true,
        "method": "GET",
        "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "scim_user_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "external_identity_guid",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
              "before": {
                "name": "external_identity_guid"
              },
              "after": {
                "name": "scim_user_id"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "edefdfedf-050c-11e7-8d32",
              "externalId": "a7d0f98382",
              "userName": "mona.octocat@okta.example.com",
              "name": {
                "givenName": "Mona",
                "familyName": "Octocat"
              },
              "emails": [
                {
                  "value": "mona.octocat@okta.example.com",
                  "type": "work",
                  "primary": true
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2017-03-09T16:11:13-05:00",
                "lastModified": "2017-03-09T16:11:13-05:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
              }
            }
          }
        ],
        "idName": "get-provisioning-details-for-user",
        "documentationUrl": "https://developer.github.com/v3/scim/#get-provisioning-details-for-a-single-user"
      },
      {
        "name": "Provision and invite users",
        "enabledForApps": true,
        "githubCloudOnly": true,
        "method": "POST",
        "path": "/scim/v2/organizations/:org/Users",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "requests": [
          {
            "schemas": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ],
            "userName": "mona.octocat@okta.example.com",
            "name": {
              "familyName": "Octocat",
              "givenName": "Mona"
            },
            "emails": [
              {
                "value": "mona.octocat@okta.example.com",
                "type": "work",
                "primary": true
              }
            ]
          }
        ],
        "description": "Provision organization membership for a user, and send an activation email to the email address.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "edefdfedf-050c-11e7-8d32",
              "externalId": "a7d0f98382",
              "userName": "mona.octocat@okta.example.com",
              "name": {
                "givenName": "Mona",
                "familyName": "Octocat"
              },
              "emails": [
                {
                  "value": "mona.octocat@okta.example.com",
                  "type": "work",
                  "primary": true
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2017-03-09T16:11:13-05:00",
                "lastModified": "2017-03-09T16:11:13-05:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
              }
            }
          }
        ],
        "idName": "provision-and-invite-users",
        "documentationUrl": "https://developer.github.com/v3/scim/#provision-and-invite-users"
      },
      {
        "name": "Provision and invite users",
        "enabledForApps": true,
        "githubCloudOnly": true,
        "method": "POST",
        "path": "/scim/v2/organizations/:org/Users",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "requests": [
          {
            "schemas": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ],
            "userName": "mona.octocat@okta.example.com",
            "name": {
              "familyName": "Octocat",
              "givenName": "Mona"
            },
            "emails": [
              {
                "value": "mona.octocat@okta.example.com",
                "type": "work",
                "primary": true
              }
            ]
          }
        ],
        "description": "Provision organization membership for a user, and send an activation email to the email address.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "edefdfedf-050c-11e7-8d32",
              "externalId": "a7d0f98382",
              "userName": "mona.octocat@okta.example.com",
              "name": {
                "givenName": "Mona",
                "familyName": "Octocat"
              },
              "emails": [
                {
                  "value": "mona.octocat@okta.example.com",
                  "type": "work",
                  "primary": true
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2017-03-09T16:11:13-05:00",
                "lastModified": "2017-03-09T16:11:13-05:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
              }
            }
          }
        ],
        "idName": "provision-invite-users",
        "documentationUrl": "https://developer.github.com/v3/scim/#provision-and-invite-users",
        "deprecated": {
          "date": "2018-12-27",
          "message": "`idName` changed for \"Provision and invite users\". It now includes `-and-`",
          "before": {
            "idName": "provision-invite-users"
          },
          "after": {
            "idName": "provision-and-invite-users"
          }
        }
      },
      {
        "name": "Replace a provisioned user's information",
        "enabledForApps": true,
        "githubCloudOnly": true,
        "method": "PUT",
        "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "scim_user_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "external_identity_guid",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
              "before": {
                "name": "external_identity_guid"
              },
              "after": {
                "name": "scim_user_id"
              }
            }
          }
        ],
        "requests": [
          {
            "schemas": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ],
            "userName": "mona.octocat@okta.example.com",
            "name": {
              "familyName": "Octocat",
              "givenName": "Mona"
            },
            "emails": [
              {
                "value": "mona.octocat@okta.example.com",
                "type": "work",
                "primary": true
              }
            ]
          }
        ],
        "description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update a user attribute](#update-a-user-attribute) endpoint instead.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "edefdfedf-050c-11e7-8d32",
              "externalId": "a7d0f98382",
              "userName": "mona.octocat@okta.example.com",
              "name": {
                "givenName": "Mona",
                "familyName": "Octocat"
              },
              "emails": [
                {
                  "value": "mona.octocat@okta.example.com",
                  "type": "work",
                  "primary": true
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2017-03-09T16:11:13-05:00",
                "lastModified": "2017-03-09T16:11:13-05:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
              }
            }
          }
        ],
        "idName": "replace-provisioned-user-information",
        "documentationUrl": "https://developer.github.com/v3/scim/#replace-a-provisioned-users-information"
      },
      {
        "name": "Update a provisioned organization membership",
        "enabledForApps": true,
        "githubCloudOnly": true,
        "method": "PUT",
        "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "scim_user_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "external_identity_guid",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
              "before": {
                "name": "external_identity_guid"
              },
              "after": {
                "name": "scim_user_id"
              }
            }
          }
        ],
        "requests": [
          {
            "schemas": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ],
            "userName": "mona.octocat@okta.example.com",
            "name": {
              "familyName": "Octocat",
              "givenName": "Mona"
            },
            "emails": [
              {
                "value": "mona.octocat@okta.example.com",
                "type": "work",
                "primary": true
              }
            ]
          }
        ],
        "description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update a user attribute](#update-a-user-attribute) endpoint instead.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "edefdfedf-050c-11e7-8d32",
              "externalId": "a7d0f98382",
              "userName": "mona.octocat@okta.example.com",
              "name": {
                "givenName": "Mona",
                "familyName": "Octocat"
              },
              "emails": [
                {
                  "value": "mona.octocat@okta.example.com",
                  "type": "work",
                  "primary": true
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2017-03-09T16:11:13-05:00",
                "lastModified": "2017-03-09T16:11:13-05:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
              }
            }
          }
        ],
        "idName": "update-provisioned-org-membership",
        "documentationUrl": "https://developer.github.com/v3/scim/#replace-a-provisioned-users-information",
        "deprecated": {
          "date": "2019-04-10",
          "message": "\"Update a provisioned organization membership\" renamed to \"Replace a provisioned user's information\"",
          "before": {
            "idName": "update-provisioned-org-membership"
          },
          "after": {
            "idName": "replace-provisioned-user-information"
          }
        }
      },
      {
        "name": "Update a user attribute",
        "enabledForApps": true,
        "githubCloudOnly": true,
        "method": "PATCH",
        "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "scim_user_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "external_identity_guid",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
              "before": {
                "name": "external_identity_guid"
              },
              "after": {
                "name": "scim_user_id"
              }
            }
          }
        ],
        "requests": [
          {
            "schemas": [
              "urn:ietf:params:scim:api:messages:2.0:PatchOp"
            ],
            "Operations": [
              {
                "op": "add",
                "path": "emails",
                "value": [
                  {
                    "value": "monalisa@octocat.github.com",
                    "type": "home"
                  }
                ]
              },
              {
                "op": "replace",
                "path": "name.givenName",
                "value": "Monalisa"
              }
            ]
          }
        ],
        "description": "Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations.\n\nThe following example shows adding a new email address and updating the user's given name. For other examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n\n```",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "schemas": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ],
              "id": "edefdfedf-050c-11e7-8d32",
              "externalId": "a7d0f98382",
              "userName": "mona.octocat@okta.example.com",
              "name": {
                "givenName": "Monalisa",
                "familyName": "Octocat"
              },
              "emails": [
                {
                  "value": "mona.octocat@okta.example.com",
                  "type": "work",
                  "primary": true
                },
                {
                  "value": "monalisa@octocat.github.com",
                  "type": "home"
                }
              ],
              "active": true,
              "meta": {
                "resourceType": "User",
                "created": "2017-03-09T16:11:13-05:00",
                "lastModified": "2017-03-09T16:11:13-05:00",
                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
              }
            }
          }
        ],
        "idName": "update-user-attribute",
        "documentationUrl": "https://developer.github.com/v3/scim/#update-a-user-attribute"
      },
      {
        "name": "Remove a user from the organization",
        "enabledForApps": true,
        "githubCloudOnly": true,
        "method": "DELETE",
        "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "scim_user_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "external_identity_guid",
            "type": "integer",
            "required": false,
            "description": "",
            "location": "url",
            "deprecated": {
              "date": "2019-04-10",
              "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
              "before": {
                "name": "external_identity_guid"
              },
              "after": {
                "name": "scim_user_id"
              }
            }
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-user-from-org",
        "documentationUrl": "https://developer.github.com/v3/scim/#remove-a-user-from-the-organization"
      }
    ],
    "search": [
      {
        "name": "Search repositories",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/search/repositories",
        "previews": [
          {
            "name": "mercy",
            "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mercy-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "q",
            "type": "string",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](#constructing-a-search-query). See \"[Searching for repositories](https://help.github.com/articles/searching-for-repositories/)\" for a detailed list of qualifiers.",
            "required": true,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `updated`.",
            "default": "[best match](#ranking-search-results)",
            "required": false,
            "enum": [
              "stars",
              "forks",
              "help-wanted-issues",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
            "default": "desc",
            "required": false,
            "enum": [
              "desc",
              "asc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Find repositories via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](#text-match-metadata).\n\nSuppose you want to search for popular Tetris repositories written in Assembly. Your query might look like this.\n\nYou can search for multiple topics by adding more `topic:` instances, and including the `mercy-preview` header. For example:\n\nIn this request, we're searching for repositories with the word `tetris` in the name, the description, or the README. We're limiting the results to only find repositories where the primary language is Assembly. We're sorting by stars in descending order, so that the most popular repositories appear first in the search results.",
        "idName": "repos",
        "documentationUrl": "https://developer.github.com/v3/search/#search-repositories"
      },
      {
        "name": "Search commits",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/search/commits",
        "previews": [
          {
            "name": "cloak",
            "description": "The Commit Search API is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2017-01-05-commit-search-api/) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.cloak-preview\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "q",
            "type": "string",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](#constructing-a-search-query). See \"[Searching commits](https://help.github.com/articles/searching-commits/)\" for a detailed list of qualifiers.",
            "required": true,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the results of your query by `author-date` or `committer-date`.",
            "default": "[best match](#ranking-search-results)",
            "required": false,
            "enum": [
              "author-date",
              "committer-date"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
            "default": "desc",
            "required": false,
            "enum": [
              "desc",
              "asc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Find commits via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](#text-match-metadata).\n\n**Considerations for commit search**\n\nOnly the _default branch_ is considered. In most cases, this will be the `master` branch.\n\nSuppose you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:",
        "idName": "commits",
        "documentationUrl": "https://developer.github.com/v3/search/#search-commits"
      },
      {
        "name": "Search code",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/search/code",
        "previews": [],
        "params": [
          {
            "name": "q",
            "type": "string",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](#constructing-a-search-query). See \"[Searching code](https://help.github.com/articles/searching-code/)\" for a detailed list of qualifiers.",
            "required": true,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub search infrastructure.",
            "default": "[best match](#ranking-search-results)",
            "required": false,
            "enum": [
              "indexed"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
            "default": "desc",
            "required": false,
            "enum": [
              "desc",
              "asc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Find file contents via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](#text-match-metadata).\n\n**Note:** You must [authenticate](https://developer.github.com/v3/#authentication) to search for code across all public repositories.\n\n**Considerations for code search**\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.\n\nSuppose you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery). Your query would look something like this:\n\nHere, we're searching for the keyword `addClass` within a file's contents. We're making sure that we're only looking in files where the language is JavaScript. And we're scoping the search to the `repo:jquery/jquery` repository.",
        "idName": "code",
        "documentationUrl": "https://developer.github.com/v3/search/#search-code"
      },
      {
        "name": "Search issues and pull requests",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/search/issues",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "q",
            "type": "string",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](#constructing-a-search-query). See \"[Searching issues and pull requests](https://help.github.com/articles/searching-issues-and-pull-requests/)\" for a detailed list of qualifiers.",
            "required": true,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`,",
            "default": "[best match](#ranking-search-results)",
            "required": false,
            "enum": [
              "comments",
              "reactions",
              "reactions-+1",
              "reactions--1",
              "reactions-smile",
              "reactions-thinking_face",
              "reactions-heart",
              "reactions-tada",
              "interactions",
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
            "default": "desc",
            "required": false,
            "enum": [
              "desc",
              "asc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Find issues by state and keyword. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](#text-match-metadata).\n\nLet's say you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\nIn this query, we're searching for the keyword `windows`, within any open issue that's labeled as `bug`. The search runs across repositories whose primary language is Python. We’re sorting by creation date in ascending order, so that the oldest issues appear first in the search results.",
        "idName": "issues-and-pull-requests",
        "documentationUrl": "https://developer.github.com/v3/search/#search-issues-and-pull-requests"
      },
      {
        "name": "Search issues",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/search/issues",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "q",
            "type": "string",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](#constructing-a-search-query). See \"[Searching issues and pull requests](https://help.github.com/articles/searching-issues-and-pull-requests/)\" for a detailed list of qualifiers.",
            "required": true,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`,",
            "default": "[best match](#ranking-search-results)",
            "required": false,
            "enum": [
              "comments",
              "reactions",
              "reactions-+1",
              "reactions--1",
              "reactions-smile",
              "reactions-thinking_face",
              "reactions-heart",
              "reactions-tada",
              "interactions",
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
            "default": "desc",
            "required": false,
            "enum": [
              "desc",
              "asc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Find issues by state and keyword. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](#text-match-metadata).\n\nLet's say you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\nIn this query, we're searching for the keyword `windows`, within any open issue that's labeled as `bug`. The search runs across repositories whose primary language is Python. We’re sorting by creation date in ascending order, so that the oldest issues appear first in the search results.",
        "idName": "issues",
        "documentationUrl": "https://developer.github.com/v3/search/#search-issues-and-pull-requests",
        "deprecated": {
          "date": "2018-12-27",
          "message": "\"Search issues\" has been renamed to \"Search issues and pull requests\"",
          "before": {
            "idName": "issues"
          },
          "after": {
            "idName": "issues-and-pull-requests"
          }
        }
      },
      {
        "name": "Search users",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/search/users",
        "previews": [],
        "params": [
          {
            "name": "q",
            "type": "string",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](#constructing-a-search-query). See \"[Searching users](https://help.github.com/articles/searching-users/)\" for a detailed list of qualifiers.",
            "required": true,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the results of your query by number of `followers` or `repositories`, or when the person `joined` GitHub.",
            "default": "[best match](#ranking-search-results)",
            "required": false,
            "enum": [
              "followers",
              "repositories",
              "joined"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
            "default": "desc",
            "required": false,
            "enum": [
              "desc",
              "asc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Find users via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](#text-match-metadata).\n\nImagine you're looking for a list of popular users. You might try out this query:\n\nHere, we're looking at users with the name Tom. We're only interested in those with more than 42 repositories, and only if they have over 1,000 followers.",
        "idName": "users",
        "documentationUrl": "https://developer.github.com/v3/search/#search-users"
      },
      {
        "name": "Search topics",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/search/topics",
        "previews": [
          {
            "name": "mercy",
            "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mercy-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "q",
            "type": "string",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](#constructing-a-search-query).",
            "required": true,
            "location": "query"
          }
        ],
        "description": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](#text-match-metadata).\n\nSee \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nSuppose you want to search for topics related to Ruby that are featured on [https://github.com/topics](https://github.com/topics). Your query might look like this:\n\nIn this request, we're searching for topics with the keyword `ruby`, and we're limiting the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.\n\n**Note:** A search for featured Ruby topics only has 6 total results, so a [Link header](https://developer.github.com/v3/#link-header) indicating pagination is not included in the response.",
        "idName": "topics",
        "documentationUrl": "https://developer.github.com/v3/search/#search-topics"
      },
      {
        "name": "Search labels",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/search/labels",
        "previews": [
          {
            "name": "symmetra",
            "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.symmetra-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "repository_id",
            "type": "integer",
            "description": "The id of the repository.",
            "required": true,
            "location": "query"
          },
          {
            "name": "q",
            "type": "string",
            "description": "The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see [Constructing a search query](#constructing-a-search-query).",
            "required": true,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "Sorts the results of your query by when the label was `created` or `updated`.",
            "default": "[best match](#ranking-search-results)",
            "required": false,
            "enum": [
              "created",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
            "default": "desc",
            "required": false,
            "enum": [
              "desc",
              "asc"
            ],
            "location": "query"
          }
        ],
        "description": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](#text-match-metadata).\n\nSuppose you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\nThe labels that best match for the query appear first in the search results.",
        "idName": "labels",
        "documentationUrl": "https://developer.github.com/v3/search/#search-labels"
      },
      {
        "name": "Search issues",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/legacy/issues/search/:owner/:repository/:state/:keyword",
        "previews": [],
        "params": [
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repository",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "state",
            "type": "string",
            "description": "Indicates the state of the issues to return. Can be either `open` or `closed`.",
            "required": true,
            "enum": [
              "open",
              "closed"
            ],
            "location": "url"
          },
          {
            "name": "keyword",
            "type": "string",
            "description": "The search term.",
            "required": true,
            "location": "url"
          }
        ],
        "description": "Find issues by state and keyword.",
        "idName": "issues-legacy",
        "documentationUrl": "https://developer.github.com/v3/search/legacy/#search-issues"
      },
      {
        "name": "Search repositories",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/legacy/repos/search/:keyword",
        "previews": [],
        "params": [
          {
            "name": "keyword",
            "type": "string",
            "description": "The search term.",
            "required": true,
            "location": "url"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Filter results by language.",
            "required": false,
            "location": "query"
          },
          {
            "name": "start_page",
            "type": "string",
            "description": "The page number to fetch.",
            "required": false,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "The sort field. One of `stars`, `forks`, or `updated`.",
            "default": "results are sorted by best match.",
            "required": false,
            "enum": [
              "stars",
              "forks",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "The sort field. if `sort` param is provided. Can be either `asc` or `desc`.",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          }
        ],
        "description": "Find repositories by keyword. Note, this legacy method does not follow the v3 pagination pattern. This method returns up to 100 results per page and pages can be fetched using the `start_page` parameter.",
        "idName": "repos-legacy",
        "documentationUrl": "https://developer.github.com/v3/search/legacy/#search-repositories"
      },
      {
        "name": "Search users",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/legacy/user/search/:keyword",
        "previews": [],
        "params": [
          {
            "name": "keyword",
            "type": "string",
            "description": "The search term.",
            "required": true,
            "location": "url"
          },
          {
            "name": "start_page",
            "type": "string",
            "description": "The page number to fetch.",
            "required": false,
            "location": "query"
          },
          {
            "name": "sort",
            "type": "string",
            "description": "The sort field. One of `stars`, `forks`, or `updated`.",
            "default": "results are sorted by best match.",
            "required": false,
            "enum": [
              "stars",
              "forks",
              "updated"
            ],
            "location": "query"
          },
          {
            "name": "order",
            "type": "string",
            "description": "The sort field. if `sort` param is provided. Can be either `asc` or `desc`.",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          }
        ],
        "description": "Find users by keyword.",
        "idName": "users-legacy",
        "documentationUrl": "https://developer.github.com/v3/search/legacy/#search-users"
      },
      {
        "name": "Email search",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/legacy/user/email/:email",
        "previews": [],
        "params": [
          {
            "name": "email",
            "type": "string",
            "description": "The email address.",
            "required": true,
            "location": "url"
          }
        ],
        "description": "This API call is added for compatibility reasons only. There's no guarantee that full email searches will always be available. The `@` character in the address must be left unencoded. Searches only against public email addresses (as configured on the user's GitHub profile).",
        "idName": "email-legacy",
        "documentationUrl": "https://developer.github.com/v3/search/legacy/#email-search"
      }
    ],
    "teams": [
      {
        "name": "List teams",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/teams",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          }
        ],
        "idName": "list",
        "documentationUrl": "https://developer.github.com/v3/teams/#list-teams"
      },
      {
        "name": "Get team",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDQ6VGVhbTE=",
              "url": "https://api.github.com/teams/1",
              "name": "Justice League",
              "slug": "justice-league",
              "description": "A great team.",
              "privacy": "closed",
              "permission": "admin",
              "members_url": "https://api.github.com/teams/1/members{/member}",
              "repositories_url": "https://api.github.com/teams/1/repos",
              "parent": null,
              "members_count": 3,
              "repos_count": 10,
              "created_at": "2017-07-14T16:53:42Z",
              "updated_at": "2017-08-17T12:37:15Z",
              "organization": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization",
                "name": "github",
                "company": "GitHub",
                "blog": "https://github.com/blog",
                "location": "San Francisco",
                "email": "octocat@github.com",
                "is_verified": true,
                "has_organization_projects": true,
                "has_repository_projects": true,
                "public_repos": 2,
                "public_gists": 1,
                "followers": 20,
                "following": 0,
                "html_url": "https://github.com/octocat",
                "created_at": "2008-01-14T04:33:35Z",
                "type": "Organization"
              }
            }
          }
        ],
        "idName": "get",
        "documentationUrl": "https://developer.github.com/v3/teams/#get-team"
      },
      {
        "name": "Get team by name",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/orgs/:org/teams/:team_slug",
        "previews": [],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "team_slug",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDQ6VGVhbTE=",
              "url": "https://api.github.com/teams/1",
              "name": "Justice League",
              "slug": "justice-league",
              "description": "A great team.",
              "privacy": "closed",
              "permission": "admin",
              "members_url": "https://api.github.com/teams/1/members{/member}",
              "repositories_url": "https://api.github.com/teams/1/repos",
              "parent": null,
              "members_count": 3,
              "repos_count": 10,
              "created_at": "2017-07-14T16:53:42Z",
              "updated_at": "2017-08-17T12:37:15Z",
              "organization": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization",
                "name": "github",
                "company": "GitHub",
                "blog": "https://github.com/blog",
                "location": "San Francisco",
                "email": "octocat@github.com",
                "is_verified": true,
                "has_organization_projects": true,
                "has_repository_projects": true,
                "public_repos": 2,
                "public_gists": 1,
                "followers": 20,
                "following": 0,
                "html_url": "https://github.com/octocat",
                "created_at": "2008-01-14T04:33:35Z",
                "type": "Organization"
              }
            }
          }
        ],
        "idName": "get-by-name",
        "documentationUrl": "https://developer.github.com/v3/teams/#get-team-by-name"
      },
      {
        "name": "Create team",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/orgs/:org/teams",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "org",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the team.",
            "required": true,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "The description of the team.",
            "required": false,
            "location": "body"
          },
          {
            "name": "maintainers",
            "type": "string[]",
            "description": "The logins of organization members to add as maintainers of the team.",
            "required": false,
            "location": "body"
          },
          {
            "name": "repo_names",
            "type": "string[]",
            "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.",
            "required": false,
            "location": "body"
          },
          {
            "name": "privacy",
            "type": "string",
            "description": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.  \nDefault for child team: `closed`  \n**Note**: You must pass the `hellcat-preview` media type to set privacy default to `closed` for child teams. **For a parent or child team:**  ",
            "default": "secret",
            "required": false,
            "enum": [
              "secret",
              "closed"
            ],
            "location": "body"
          },
          {
            "name": "permission",
            "type": "string",
            "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
            "default": "pull",
            "required": false,
            "enum": [
              "pull",
              "push",
              "admin"
            ],
            "location": "body"
          },
          {
            "name": "parent_team_id",
            "type": "integer",
            "description": "The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "Justice League",
            "description": "A great team",
            "permission": "admin",
            "privacy": "closed"
          }
        ],
        "description": "To create a team, the authenticated user must be a member or owner of `:org`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDQ6VGVhbTE=",
              "url": "https://api.github.com/teams/1",
              "name": "Justice League",
              "slug": "justice-league",
              "description": "A great team.",
              "privacy": "closed",
              "permission": "admin",
              "members_url": "https://api.github.com/teams/1/members{/member}",
              "repositories_url": "https://api.github.com/teams/1/repos",
              "parent": null,
              "members_count": 3,
              "repos_count": 10,
              "created_at": "2017-07-14T16:53:42Z",
              "updated_at": "2017-08-17T12:37:15Z",
              "organization": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization",
                "name": "github",
                "company": "GitHub",
                "blog": "https://github.com/blog",
                "location": "San Francisco",
                "email": "octocat@github.com",
                "is_verified": true,
                "has_organization_projects": true,
                "has_repository_projects": true,
                "public_repos": 2,
                "public_gists": 1,
                "followers": 20,
                "following": 0,
                "html_url": "https://github.com/octocat",
                "created_at": "2008-01-14T04:33:35Z",
                "type": "Organization"
              }
            }
          }
        ],
        "idName": "create",
        "documentationUrl": "https://developer.github.com/v3/teams/#create-team"
      },
      {
        "name": "Edit team",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/teams/:team_id",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "name",
            "type": "string",
            "description": "The name of the team.",
            "required": true,
            "location": "body"
          },
          {
            "name": "description",
            "type": "string",
            "description": "The description of the team.",
            "required": false,
            "location": "body"
          },
          {
            "name": "privacy",
            "type": "string",
            "description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.",
            "required": false,
            "location": "body"
          },
          {
            "name": "permission",
            "type": "string",
            "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories.",
            "default": "pull",
            "required": false,
            "enum": [
              "pull",
              "push",
              "admin"
            ],
            "location": "body"
          },
          {
            "name": "parent_team_id",
            "type": "integer",
            "description": "The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "new team name",
            "description": "new team description",
            "privacy": "closed"
          }
        ],
        "description": "To edit a team, the authenticated user must either be an owner of the org that the team is associated with, or a maintainer of the team.\n\n**Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "node_id": "MDQ6VGVhbTE=",
              "url": "https://api.github.com/teams/1",
              "name": "Justice League",
              "slug": "justice-league",
              "description": "A great team.",
              "privacy": "closed",
              "permission": "admin",
              "members_url": "https://api.github.com/teams/1/members{/member}",
              "repositories_url": "https://api.github.com/teams/1/repos",
              "parent": null,
              "members_count": 3,
              "repos_count": 10,
              "created_at": "2017-07-14T16:53:42Z",
              "updated_at": "2017-08-17T12:37:15Z",
              "organization": {
                "login": "github",
                "id": 1,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                "url": "https://api.github.com/orgs/github",
                "repos_url": "https://api.github.com/orgs/github/repos",
                "events_url": "https://api.github.com/orgs/github/events",
                "hooks_url": "https://api.github.com/orgs/github/hooks",
                "issues_url": "https://api.github.com/orgs/github/issues",
                "members_url": "https://api.github.com/orgs/github/members{/member}",
                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "description": "A great organization",
                "name": "github",
                "company": "GitHub",
                "blog": "https://github.com/blog",
                "location": "San Francisco",
                "email": "octocat@github.com",
                "is_verified": true,
                "has_organization_projects": true,
                "has_repository_projects": true,
                "public_repos": 2,
                "public_gists": 1,
                "followers": 20,
                "following": 0,
                "html_url": "https://github.com/octocat",
                "created_at": "2008-01-14T04:33:35Z",
                "type": "Organization"
              }
            }
          }
        ],
        "idName": "update",
        "documentationUrl": "https://developer.github.com/v3/teams/#edit-team"
      },
      {
        "name": "Delete team",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/teams/:team_id",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "To delete a team, the authenticated user must be a team maintainer or an owner of the org associated with the team.\n\nIf you are an organization owner and you pass the `hellcat-preview` media type, deleting a parent team will delete all of its child teams as well.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete",
        "documentationUrl": "https://developer.github.com/v3/teams/#delete-team"
      },
      {
        "name": "List child teams",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/teams",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "At this time, the `hellcat-preview` media type is required to use this endpoint.\n\n",
        "idName": "list-child",
        "documentationUrl": "https://developer.github.com/v3/teams/#list-child-teams"
      },
      {
        "name": "List team repos",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/repos",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "**Note**: If you pass the `hellcat-preview` media type, the response will include any repositories inherited through a parent team.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "subscribers_count": 42,
                "network_count": 0,
                "license": {
                  "key": "mit",
                  "name": "MIT License",
                  "spdx_id": "MIT",
                  "url": "https://api.github.com/licenses/mit",
                  "node_id": "MDc6TGljZW5zZW1pdA=="
                }
              }
            ]
          }
        ],
        "idName": "list-repos",
        "documentationUrl": "https://developer.github.com/v3/teams/#list-team-repos"
      },
      {
        "name": "Check if a team manages a repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/repos/:owner/:repo",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "**Note**: If you pass the `hellcat-preview` media type, repositories inherited through a parent team will be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:",
        "idName": "check-manages-repo",
        "documentationUrl": "https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository"
      },
      {
        "name": "Add or update team repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/teams/:team_id/repos/:owner/:repo",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "permission",
            "type": "string",
            "description": "The permission to grant the team on this repository. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer this repository.  \n\\* `push` - team members can pull and push, but not administer this repository.  \n\\* `admin` - team members can pull, push and administer this repository.  \n  \nIf no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited through a parent team.",
            "required": false,
            "enum": [
              "pull",
              "push",
              "admin"
            ],
            "location": "body"
          }
        ],
        "description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.\n\nIf you pass the `hellcat-preview` media type, you can modify repository permissions of child teams.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "add-or-update-repo",
        "documentationUrl": "https://developer.github.com/v3/teams/#add-or-update-team-repository"
      },
      {
        "name": "Remove team repository",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/teams/:team_id/repos/:owner/:repo",
        "previews": [],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "owner",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "repo",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-repo",
        "documentationUrl": "https://developer.github.com/v3/teams/#remove-team-repository"
      },
      {
        "name": "List user teams",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/teams",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://developer.github.com/apps/building-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null,
                "members_count": 3,
                "repos_count": 10,
                "created_at": "2017-07-14T16:53:42Z",
                "updated_at": "2017-08-17T12:37:15Z",
                "organization": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "hooks_url": "https://api.github.com/orgs/github/hooks",
                  "issues_url": "https://api.github.com/orgs/github/issues",
                  "members_url": "https://api.github.com/orgs/github/members{/member}",
                  "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "description": "A great organization",
                  "name": "github",
                  "company": "GitHub",
                  "blog": "https://github.com/blog",
                  "location": "San Francisco",
                  "email": "octocat@github.com",
                  "is_verified": true,
                  "has_organization_projects": true,
                  "has_repository_projects": true,
                  "public_repos": 2,
                  "public_gists": 1,
                  "followers": 20,
                  "following": 0,
                  "html_url": "https://github.com/octocat",
                  "created_at": "2008-01-14T04:33:35Z",
                  "type": "Organization"
                }
              }
            ]
          }
        ],
        "idName": "list-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/teams/#list-user-teams"
      },
      {
        "name": "List team projects",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/projects",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          },
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the organization projects for a team. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "owner_url": "https://api.github.com/orgs/octocat",
                "url": "https://api.github.com/projects/1002605",
                "html_url": "https://github.com/orgs/api-playground/projects/1",
                "columns_url": "https://api.github.com/projects/1002605/columns",
                "id": 1002605,
                "node_id": "MDc6UHJvamVjdDEwMDI2MDU=",
                "name": "Organization Roadmap",
                "body": "High-level roadmap for the upcoming year.",
                "number": 1,
                "state": "open",
                "creator": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "created_at": "2011-04-11T20:09:31Z",
                "updated_at": "2014-03-04T18:58:10Z",
                "organization_permission": "write",
                "private": false,
                "permissions": {
                  "read": true,
                  "write": true,
                  "admin": false
                }
              }
            ]
          }
        ],
        "idName": "list-projects",
        "documentationUrl": "https://developer.github.com/v3/teams/#list-team-projects"
      },
      {
        "name": "Review a team project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/projects/:project_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          },
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "owner_url": "https://api.github.com/orgs/octocat",
              "url": "https://api.github.com/projects/1002605",
              "html_url": "https://github.com/orgs/api-playground/projects/1",
              "columns_url": "https://api.github.com/projects/1002605/columns",
              "id": 1002605,
              "node_id": "MDc6UHJvamVjdDEwMDI2MDU=",
              "name": "Organization Roadmap",
              "body": "High-level roadmap for the upcoming year.",
              "number": 1,
              "state": "open",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "created_at": "2011-04-11T20:09:31Z",
              "updated_at": "2014-03-04T18:58:10Z",
              "organization_permission": "write",
              "private": false,
              "permissions": {
                "read": true,
                "write": true,
                "admin": false
              }
            }
          }
        ],
        "idName": "review-project",
        "documentationUrl": "https://developer.github.com/v3/teams/#review-a-team-project"
      },
      {
        "name": "Add or update team project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/teams/:team_id/projects/:project_id",
        "previews": [
          {
            "name": "inertia",
            "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
            "required": true
          },
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "permission",
            "type": "string",
            "description": "The permission to grant to the team for this project. Can be one of:  \n\\* `read` - team members can read, but not write to or administer this project.  \n\\* `write` - team members can read and write, but not administer this project.  \n\\* `admin` - team members can read, write and administer this project.  \nDefault: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited from a parent team.",
            "required": false,
            "enum": [
              "read",
              "write",
              "admin"
            ],
            "location": "body"
          }
        ],
        "description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "add-or-update-project",
        "documentationUrl": "https://developer.github.com/v3/teams/#add-or-update-team-project"
      },
      {
        "name": "Remove team project",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/teams/:team_id/projects/:project_id",
        "previews": [],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "project_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-project",
        "documentationUrl": "https://developer.github.com/v3/teams/#remove-team-project"
      },
      {
        "name": "List comments",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/discussions/:discussion_number/comments",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** The [reactions API](/v3/reactions/) is available for developers to preview. The `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To receive the `reactions` object in the response for this endpoint you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.squirrel-girl-preview\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "Sorts the discussion comments by the date they were created. To return the oldest comments first, set to `asc`. Can be one of `asc` or `desc`.",
            "default": "desc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "author": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "body": "Do you like apples?",
                "body_html": "<p>Do you like apples?</p>",
                "body_version": "5eb32b219cdc6a5a9b29ba5d6caa9c51",
                "created_at": "2018-01-15T23:53:58Z",
                "last_edited_at": null,
                "discussion_url": "https://api.github.com/teams/2403582/discussions/1",
                "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1",
                "node_id": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=",
                "number": 1,
                "updated_at": "2018-01-15T23:53:58Z",
                "url": "https://api.github.com/teams/2403582/discussions/1/comments/1",
                "reactions": {
                  "url": "https://api.github.com/teams/2403582/discussions/1/reactions",
                  "total_count": 5,
                  "+1": 3,
                  "-1": 1,
                  "laugh": 0,
                  "confused": 0,
                  "heart": 1,
                  "hooray": 0
                }
              }
            ]
          }
        ],
        "idName": "list-discussion-comments",
        "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#list-comments"
      },
      {
        "name": "Get a single comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** The [reactions API](/v3/reactions/) is available for developers to preview. The `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To receive the `reactions` object in the response for this endpoint you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.squirrel-girl-preview\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Do you like apples?",
              "body_html": "<p>Do you like apples?</p>",
              "body_version": "5eb32b219cdc6a5a9b29ba5d6caa9c51",
              "created_at": "2018-01-15T23:53:58Z",
              "last_edited_at": null,
              "discussion_url": "https://api.github.com/teams/2403582/discussions/1",
              "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1",
              "node_id": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=",
              "number": 1,
              "updated_at": "2018-01-15T23:53:58Z",
              "url": "https://api.github.com/teams/2403582/discussions/1/comments/1",
              "reactions": {
                "url": "https://api.github.com/teams/2403582/discussions/1/reactions",
                "total_count": 5,
                "+1": 3,
                "-1": 1,
                "laugh": 0,
                "confused": 0,
                "heart": 1,
                "hooray": 0
              }
            }
          }
        ],
        "idName": "get-discussion-comment",
        "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment"
      },
      {
        "name": "Create a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/teams/:team_id/discussions/:discussion_number/comments",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** The [reactions API](/v3/reactions/) is available for developers to preview. The `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To receive the `reactions` object in the response for this endpoint you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.squirrel-girl-preview\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The discussion comment's body text.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "body": "Do you like apples?"
          }
        ],
        "description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Do you like apples?",
              "body_html": "<p>Do you like apples?</p>",
              "body_version": "5eb32b219cdc6a5a9b29ba5d6caa9c51",
              "created_at": "2018-01-15T23:53:58Z",
              "last_edited_at": null,
              "discussion_url": "https://api.github.com/teams/2403582/discussions/1",
              "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1",
              "node_id": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=",
              "number": 1,
              "updated_at": "2018-01-15T23:53:58Z",
              "url": "https://api.github.com/teams/2403582/discussions/1/comments/1",
              "reactions": {
                "url": "https://api.github.com/teams/2403582/discussions/1/reactions",
                "total_count": 5,
                "+1": 3,
                "-1": 1,
                "laugh": 0,
                "confused": 0,
                "heart": 1,
                "hooray": 0
              }
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-discussion-comment",
        "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#create-a-comment"
      },
      {
        "name": "Edit a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** The [reactions API](/v3/reactions/) is available for developers to preview. The `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To receive the `reactions` object in the response for this endpoint you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.squirrel-girl-preview\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The discussion comment's body text.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "body": "Do you like pineapples?"
          }
        ],
        "description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Do you like pineapples?",
              "body_html": "<p>Do you like pineapples?</p>",
              "body_version": "e6907b24d9c93cc0c5024a7af5888116",
              "created_at": "2018-01-15T23:53:58Z",
              "last_edited_at": "2018-01-26T18:22:20Z",
              "discussion_url": "https://api.github.com/teams/2403582/discussions/1",
              "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1",
              "node_id": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=",
              "number": 1,
              "updated_at": "2018-01-26T18:22:20Z",
              "url": "https://api.github.com/teams/2403582/discussions/1/comments/1",
              "reactions": {
                "url": "https://api.github.com/teams/2403582/discussions/1/reactions",
                "total_count": 5,
                "+1": 3,
                "-1": 1,
                "laugh": 0,
                "confused": 0,
                "heart": 1,
                "hooray": 0
              }
            }
          }
        ],
        "idName": "update-discussion-comment",
        "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment"
      },
      {
        "name": "Delete a comment",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "comment_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-discussion-comment",
        "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment"
      },
      {
        "name": "List discussions",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/discussions",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** The [reactions API](/v3/reactions/) is available for developers to preview. The `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To receive the `reactions` object in the response for this endpoint you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.squirrel-girl-preview\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "direction",
            "type": "string",
            "description": "Sorts the discussion comments by the date they were created. To return the oldest comments first, set to `asc`. Can be one of `asc` or `desc`.",
            "default": "desc",
            "required": false,
            "enum": [
              "asc",
              "desc"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "author": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "body": "Hi! This is an area for us to collaborate as a team.",
                "body_html": "<p>Hi! This is an area for us to collaborate as a team</p>",
                "body_version": "0d495416a700fb06133c612575d92bfb",
                "comments_count": 0,
                "comments_url": "https://api.github.com/teams/2343027/discussions/1/comments",
                "created_at": "2018-01-25T18:56:31Z",
                "last_edited_at": null,
                "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1",
                "node_id": "MDE0OlRlYW1EaXNjdXNzaW9uMQ==",
                "number": 1,
                "pinned": false,
                "private": false,
                "team_url": "https://api.github.com/teams/2343027",
                "title": "Our first team post",
                "updated_at": "2018-01-25T18:56:31Z",
                "url": "https://api.github.com/teams/2343027/discussions/1",
                "reactions": {
                  "url": "https://api.github.com/teams/2343027/discussions/1/reactions",
                  "total_count": 5,
                  "+1": 3,
                  "-1": 1,
                  "laugh": 0,
                  "confused": 0,
                  "heart": 1,
                  "hooray": 0
                }
              }
            ]
          }
        ],
        "idName": "list-discussions",
        "documentationUrl": "https://developer.github.com/v3/teams/discussions/#list-discussions"
      },
      {
        "name": "Get a single discussion",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/discussions/:discussion_number",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** The [reactions API](/v3/reactions/) is available for developers to preview. The `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To receive the `reactions` object in the response for this endpoint you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.squirrel-girl-preview\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Hi! This is an area for us to collaborate as a team.",
              "body_html": "<p>Hi! This is an area for us to collaborate as a team</p>",
              "body_version": "0d495416a700fb06133c612575d92bfb",
              "comments_count": 0,
              "comments_url": "https://api.github.com/teams/2343027/discussions/1/comments",
              "created_at": "2018-01-25T18:56:31Z",
              "last_edited_at": null,
              "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1",
              "node_id": "MDE0OlRlYW1EaXNjdXNzaW9uMQ==",
              "number": 1,
              "pinned": false,
              "private": false,
              "team_url": "https://api.github.com/teams/2343027",
              "title": "Our first team post",
              "updated_at": "2018-01-25T18:56:31Z",
              "url": "https://api.github.com/teams/2343027/discussions/1",
              "reactions": {
                "url": "https://api.github.com/teams/2343027/discussions/1/reactions",
                "total_count": 5,
                "+1": 3,
                "-1": 1,
                "laugh": 0,
                "confused": 0,
                "heart": 1,
                "hooray": 0
              }
            }
          }
        ],
        "idName": "get-discussion",
        "documentationUrl": "https://developer.github.com/v3/teams/discussions/#get-a-single-discussion"
      },
      {
        "name": "Create a discussion",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/teams/:team_id/discussions",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** The [reactions API](/v3/reactions/) is available for developers to preview. The `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To receive the `reactions` object in the response for this endpoint you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.squirrel-girl-preview\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The discussion post's title.",
            "required": true,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The discussion post's body text.",
            "required": true,
            "location": "body"
          },
          {
            "name": "private",
            "type": "boolean",
            "description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.",
            "default": false,
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "title": "Our first team post",
            "body": "Hi! This is an area for us to collaborate as a team."
          }
        ],
        "description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Hi! This is an area for us to collaborate as a team.",
              "body_html": "<p>Hi! This is an area for us to collaborate as a team</p>",
              "body_version": "0d495416a700fb06133c612575d92bfb",
              "comments_count": 0,
              "comments_url": "https://api.github.com/teams/2343027/discussions/1/comments",
              "created_at": "2018-01-25T18:56:31Z",
              "last_edited_at": null,
              "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1",
              "node_id": "MDE0OlRlYW1EaXNjdXNzaW9uMQ==",
              "number": 1,
              "pinned": false,
              "private": false,
              "team_url": "https://api.github.com/teams/2343027",
              "title": "Our first team post",
              "updated_at": "2018-01-25T18:56:31Z",
              "url": "https://api.github.com/teams/2343027/discussions/1",
              "reactions": {
                "url": "https://api.github.com/teams/2343027/discussions/1/reactions",
                "total_count": 5,
                "+1": 3,
                "-1": 1,
                "laugh": 0,
                "confused": 0,
                "heart": 1,
                "hooray": 0
              }
            }
          }
        ],
        "triggersNotification": true,
        "idName": "create-discussion",
        "documentationUrl": "https://developer.github.com/v3/teams/discussions/#create-a-discussion"
      },
      {
        "name": "Edit a discussion",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/teams/:team_id/discussions/:discussion_number",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          },
          {
            "name": "squirrel-girl",
            "description": "**Note:** The [reactions API](/v3/reactions/) is available for developers to preview. The `url` can be used to construct the API location for [listing and creating](/v3/reactions) reactions. See the [blog post](/changes/2016-05-12-reactions-api-preview) for full details. To receive the `reactions` object in the response for this endpoint you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.squirrel-girl-preview\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "title",
            "type": "string",
            "description": "The discussion post's title.",
            "required": false,
            "location": "body"
          },
          {
            "name": "body",
            "type": "string",
            "description": "The discussion post's body text.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "title": "Welcome to our first team post"
          }
        ],
        "description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "author": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "body": "Hi! This is an area for us to collaborate as a team.",
              "body_html": "<p>Hi! This is an area for us to collaborate as a team</p>",
              "body_version": "0d495416a700fb06133c612575d92bfb",
              "comments_count": 1,
              "comments_url": "https://api.github.com/teams/2343027/discussions/1/comments",
              "created_at": "2018-01-25T18:56:31Z",
              "last_edited_at": "2018-01-26T18:22:20Z",
              "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1",
              "node_id": "MDE0OlRlYW1EaXNjdXNzaW9uMQ==",
              "number": 1,
              "pinned": false,
              "private": false,
              "team_url": "https://api.github.com/teams/2343027",
              "title": "Welcome to our first team post",
              "updated_at": "2018-01-26T18:22:20Z",
              "url": "https://api.github.com/teams/2343027/discussions/1",
              "reactions": {
                "url": "https://api.github.com/teams/2343027/discussions/1/reactions",
                "total_count": 5,
                "+1": 3,
                "-1": 1,
                "laugh": 0,
                "confused": 0,
                "heart": 1,
                "hooray": 0
              }
            }
          }
        ],
        "idName": "update-discussion",
        "documentationUrl": "https://developer.github.com/v3/teams/discussions/#edit-a-discussion"
      },
      {
        "name": "Delete a discussion",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/teams/:team_id/discussions/:discussion_number",
        "previews": [
          {
            "name": "echo",
            "description": "**Note:** The team discussions API is currently available for developers to preview. See the [blog post](/changes/2018-02-07-team-discussions-api) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.echo-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "discussion_number",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-discussion",
        "documentationUrl": "https://developer.github.com/v3/teams/discussions/#delete-a-discussion"
      },
      {
        "name": "List team members",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/members",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "role",
            "type": "string",
            "description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` - team maintainers.  \n\\* `all` - all members of the team.",
            "default": "all",
            "required": false,
            "enum": [
              "member",
              "maintainer",
              "all"
            ],
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "If you pass the `hellcat-preview` media type, team members will include the members of child teams.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-members",
        "documentationUrl": "https://developer.github.com/v3/teams/members/#list-team-members"
      },
      {
        "name": "Get team member",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/members/:username",
        "previews": [],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "The \"Get team member\" API (described below) is deprecated.\n\nWe recommend using the [Get team membership API](https://developer.github.com/v3/teams/members/#get-team-membership) instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.",
        "idName": "get-member",
        "documentationUrl": "https://developer.github.com/v3/teams/members/#get-team-member"
      },
      {
        "name": "Add team member",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/teams/:team_id/members/:username",
        "previews": [],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "The \"Add team member\" API (described below) is deprecated.\n\nWe recommend using the [Add team membership API](https://developer.github.com/v3/teams/members/#add-or-update-team-membership) instead. It allows you to invite new organization members to your teams.\n\nTo add a user to a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with, and the user being added must already be a member of at least one other team on the same organization.\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nIf you attempt to add an organization to a team, you will get this:\n\nIf you attempt to add a user to a team and that user is not a member of at least one other team on the same organization, you will get this:",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          },
          {
            "headers": {
              "status": "422 Unprocessable Entity",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "message": "Cannot add an organization as a member.",
              "errors": [
                {
                  "code": "org",
                  "field": "user",
                  "resource": "TeamMember"
                }
              ]
            },
            "description": "If you attempt to add an organization to a team, you will get this:"
          },
          {
            "headers": {
              "status": "422 Unprocessable Entity",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "message": "User isn't a member of this organization. Please invite them first.",
              "errors": [
                {
                  "code": "unaffiliated",
                  "field": "user",
                  "resource": "TeamMember"
                }
              ]
            },
            "description": "If you attempt to add a user to a team and that user is not a member of at least one other team on the same organization, you will get this:"
          }
        ],
        "idName": "add-member",
        "documentationUrl": "https://developer.github.com/v3/teams/members/#add-team-member"
      },
      {
        "name": "Remove team member",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/teams/:team_id/members/:username",
        "previews": [],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "The \"Remove team member\" API (described below) is deprecated.\n\nWe recommend using the [Remove team membership API](https://developer.github.com/v3/teams/members/#remove-team-membership) instead. It allows you to remove both active and pending memberships.\n\nTo remove a user from a team, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. NOTE: This does not delete the user, it just removes them from the team.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-member",
        "documentationUrl": "https://developer.github.com/v3/teams/members/#remove-team-member"
      },
      {
        "name": "Get team membership",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/memberships/:username",
        "previews": [
          {
            "name": "hellcat",
            "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "If you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create team](https://developer.github.com/v3/teams#create-team).",
        "idName": "get-membership",
        "documentationUrl": "https://developer.github.com/v3/teams/members/#get-team-membership"
      },
      {
        "name": "Add or update team membership",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/teams/:team_id/memberships/:username",
        "previews": [],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "role",
            "type": "string",
            "description": "The role that this user should have in the team. Can be one of:  \n\\* `member` - a normal member of the team.  \n\\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.",
            "default": "member",
            "required": false,
            "enum": [
              "member",
              "maintainer"
            ],
            "location": "body"
          }
        ],
        "description": "If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a maintainer of the team.\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a maintainer of the team.\n\nIf you attempt to add an organization to a team, you will get this:",
        "idName": "add-or-update-membership",
        "documentationUrl": "https://developer.github.com/v3/teams/members/#add-or-update-team-membership"
      },
      {
        "name": "Remove team membership",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/teams/:team_id/memberships/:username",
        "previews": [],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "remove-membership",
        "documentationUrl": "https://developer.github.com/v3/teams/members/#remove-team-membership"
      },
      {
        "name": "List pending team invitations",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/teams/:team_id/invitations",
        "previews": [
          {
            "name": "dazzler",
            "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dazzler-preview+json\n\n```",
            "required": false
          }
        ],
        "params": [
          {
            "name": "team_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "login": "monalisa",
                "email": "octocat@github.com",
                "role": "direct_member",
                "created_at": "2016-11-30T06:46:10-08:00",
                "inviter": {
                  "login": "other_user",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/other_user",
                  "html_url": "https://github.com/other_user",
                  "followers_url": "https://api.github.com/users/other_user/followers",
                  "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                  "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                  "organizations_url": "https://api.github.com/users/other_user/orgs",
                  "repos_url": "https://api.github.com/users/other_user/repos",
                  "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/other_user/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "team_count": 2,
                "invitation_team_url": "https://api.github.com/organizations/2/invitations/1/teams"
              }
            ]
          }
        ],
        "idName": "list-pending-invitations",
        "documentationUrl": "https://developer.github.com/v3/teams/members/#list-pending-team-invitations"
      }
    ],
    "users": [
      {
        "name": "Get a single user",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see \"[Response with GitHub plan information](#response-with-github-plan-information).\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://developer.github.com/v3/#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://developer.github.com/v3/users/emails/)\".",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false,
              "name": "monalisa octocat",
              "company": "GitHub",
              "blog": "https://github.com/blog",
              "location": "San Francisco",
              "email": "octocat@github.com",
              "hireable": false,
              "bio": "There once was...",
              "public_repos": 2,
              "public_gists": 1,
              "followers": 20,
              "following": 0,
              "created_at": "2008-01-14T04:33:35Z",
              "updated_at": "2008-01-14T04:33:35Z"
            }
          }
        ],
        "idName": "get-by-username",
        "documentationUrl": "https://developer.github.com/v3/users/#get-a-single-user"
      },
      {
        "name": "Get the authenticated user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user",
        "previews": [],
        "params": [],
        "description": "Lists public and private profile information when authenticated through basic auth or OAuth with the `user` scope.\n\nLists public profile information when authenticated through OAuth without the `user` scope.",
        "idName": "get-authenticated",
        "documentationUrl": "https://developer.github.com/v3/users/#get-the-authenticated-user"
      },
      {
        "name": "Update the authenticated user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/user",
        "previews": [],
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "The new name of the user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "email",
            "type": "string",
            "description": "The publicly visible email address of the user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "blog",
            "type": "string",
            "description": "The new blog URL of the user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "company",
            "type": "string",
            "description": "The new company of the user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "location",
            "type": "string",
            "description": "The new location of the user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "hireable",
            "type": "boolean",
            "description": "The new hiring availability of the user.",
            "required": false,
            "location": "body"
          },
          {
            "name": "bio",
            "type": "string",
            "description": "The new short biography of the user.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "name": "monalisa octocat",
            "email": "octocat@github.com",
            "blog": "https://github.com/blog",
            "company": "GitHub",
            "location": "San Francisco",
            "hireable": true,
            "bio": "There once..."
          }
        ],
        "description": "**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false,
              "name": "monalisa octocat",
              "company": "GitHub",
              "blog": "https://github.com/blog",
              "location": "San Francisco",
              "email": "octocat@github.com",
              "hireable": false,
              "bio": "There once was...",
              "public_repos": 2,
              "public_gists": 1,
              "followers": 20,
              "following": 0,
              "created_at": "2008-01-14T04:33:35Z",
              "updated_at": "2008-01-14T04:33:35Z",
              "private_gists": 81,
              "total_private_repos": 100,
              "owned_private_repos": 100,
              "disk_usage": 10000,
              "collaborators": 8,
              "two_factor_authentication": true,
              "plan": {
                "name": "Medium",
                "space": 400,
                "private_repos": 20,
                "collaborators": 0
              }
            }
          }
        ],
        "idName": "update-authenticated",
        "documentationUrl": "https://developer.github.com/v3/users/#update-the-authenticated-user"
      },
      {
        "name": "Get contextual information about a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/hovercard",
        "previews": [
          {
            "name": "hagar",
            "description": "**Note:** You can now retrieve someone's hovercard information in different contexts using the Hovercard API. This feature is currently available for developers to preview. See the [blog post](/changes/2018-03-21-hovercard-api-preview) for full details. To access the API during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.hagar-preview+json\n\n```",
            "required": true
          }
        ],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "subject_type",
            "type": "string",
            "description": "Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`.",
            "required": false,
            "enum": [
              "organization",
              "repository",
              "issue",
              "pull_request"
            ],
            "location": "query"
          },
          {
            "name": "subject_id",
            "type": "string",
            "description": "Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`.",
            "required": false,
            "location": "query"
          }
        ],
        "requests": [
          {
            "contexts": [
              {
                "message": "Owns this repository",
                "octicon": "repo"
              }
            ]
          }
        ],
        "description": "Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.\n\nThe `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:",
        "responses": [],
        "idName": "get-context-for-user",
        "documentationUrl": "https://developer.github.com/v3/users/#get-contextual-information-about-a-user"
      },
      {
        "name": "Get all users",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users",
        "previews": [],
        "params": [
          {
            "name": "since",
            "type": "string",
            "description": "The integer ID of the last User that you've seen.",
            "required": false,
            "location": "query"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of users.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list",
        "documentationUrl": "https://developer.github.com/v3/users/#get-all-users"
      },
      {
        "name": "List blocked users",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/blocks",
        "previews": [],
        "params": [],
        "description": "List the users you've blocked on your personal account.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-blocked",
        "documentationUrl": "https://developer.github.com/v3/users/blocking/#list-blocked-users"
      },
      {
        "name": "Check whether you've blocked a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/blocks/:username",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "If the user is blocked:\n\nIf the user is not blocked:",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            },
            "description": "If the user is blocked:"
          },
          {
            "headers": {
              "status": "404 Not Found",
              "content-type": "application/json; charset=utf-8"
            },
            "description": "If the user is not blocked:"
          }
        ],
        "idName": "check-blocked",
        "documentationUrl": "https://developer.github.com/v3/users/blocking/#check-whether-youve-blocked-a-user"
      },
      {
        "name": "Block a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/user/blocks/:username",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "block",
        "documentationUrl": "https://developer.github.com/v3/users/blocking/#block-a-user"
      },
      {
        "name": "Unblock a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/blocks/:username",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "unblock",
        "documentationUrl": "https://developer.github.com/v3/users/blocking/#unblock-a-user"
      },
      {
        "name": "List email addresses for a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/emails",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "email": "octocat@github.com",
                "verified": true,
                "primary": true,
                "visibility": "public"
              }
            ]
          }
        ],
        "idName": "list-emails",
        "documentationUrl": "https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user"
      },
      {
        "name": "List public email addresses for a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/public_emails",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists your publicly visible email address, which you can set with the [Toggle primary email visibility](#toggle-primary-email-visibility) endpoint. This endpoint is accessible with the `user:email` scope.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "email": "octocat@github.com",
                "verified": true,
                "primary": true,
                "visibility": "public"
              }
            ]
          }
        ],
        "idName": "list-public-emails",
        "documentationUrl": "https://developer.github.com/v3/users/emails/#list-public-email-addresses-for-a-user"
      },
      {
        "name": "Add email address(es)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/user/emails",
        "previews": [],
        "params": [
          {
            "name": "emails",
            "type": "string[]",
            "description": "Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "emails": [
              "octocat@github.com",
              "support@github.com"
            ]
          }
        ],
        "description": "This endpoint is accessible with the `user` scope.",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "email": "octocat@octocat.org",
                "primary": false,
                "verified": false,
                "visibility": "public"
              },
              {
                "email": "octocat@github.com",
                "primary": false,
                "verified": false,
                "visibility": null
              },
              {
                "email": "support@github.com",
                "primary": false,
                "verified": false,
                "visibility": null
              }
            ]
          }
        ],
        "idName": "add-emails",
        "documentationUrl": "https://developer.github.com/v3/users/emails/#add-email-addresses"
      },
      {
        "name": "Delete email address(es)",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/emails",
        "previews": [],
        "params": [
          {
            "name": "emails",
            "type": "string[]",
            "description": "Deletes one or more email addresses from your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "emails": [
              "octocat@github.com",
              "support@github.com"
            ]
          }
        ],
        "description": "This endpoint is accessible with the `user` scope.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-emails",
        "documentationUrl": "https://developer.github.com/v3/users/emails/#delete-email-addresses"
      },
      {
        "name": "Toggle primary email visibility",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PATCH",
        "path": "/user/email/visibility",
        "previews": [],
        "params": [
          {
            "name": "email",
            "type": "string",
            "description": "Specify the _primary_ email address that needs a visibility change.",
            "required": true,
            "location": "body"
          },
          {
            "name": "visibility",
            "type": "string",
            "description": "Use `public` to enable an authenticated user to view the specified email address, or use `private` so this primary email address cannot be seen publicly.",
            "required": true,
            "location": "body"
          }
        ],
        "requests": [
          {
            "email": "octocat@github.com",
            "visibility": "public"
          }
        ],
        "description": "Sets the visibility for your primary email addresses.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "email": "octocat@github.com",
                "primary": true,
                "verified": true,
                "visibility": "private"
              }
            ]
          }
        ],
        "idName": "toggle-primary-email-visibility",
        "documentationUrl": "https://developer.github.com/v3/users/emails/#toggle-primary-email-visibility"
      },
      {
        "method": "GET",
        "path": "/users/:username/followers",
        "enabledForApps": true,
        "name": "List a user's followers",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-followers-for-user",
        "documentationUrl": "https://developer.github.com/v3/users/followers/#list-followers-of-a-user"
      },
      {
        "method": "GET",
        "path": "/user/followers",
        "enabledForApps": true,
        "name": "List the authenticated user's followers",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-followers-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/users/followers/#list-followers-of-a-user"
      },
      {
        "method": "GET",
        "path": "/users/:username/following",
        "enabledForApps": true,
        "name": "List who a user is following",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-following-for-user",
        "documentationUrl": "https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user"
      },
      {
        "method": "GET",
        "path": "/user/following",
        "enabledForApps": true,
        "name": "List who the authenticated user is following",
        "githubCloudOnly": false,
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ]
          }
        ],
        "idName": "list-following-for-authenticated-user",
        "documentationUrl": "https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user"
      },
      {
        "name": "Check if you are following a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/following/:username",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "idName": "check-following",
        "documentationUrl": "https://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user"
      },
      {
        "name": "Check if one user follows another",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/following/:target_user",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "target_user",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "",
        "idName": "check-following-for-user",
        "documentationUrl": "https://developer.github.com/v3/users/followers/#check-if-one-user-follows-another"
      },
      {
        "name": "Follow a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "PUT",
        "path": "/user/following/:username",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nFollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "follow",
        "documentationUrl": "https://developer.github.com/v3/users/followers/#follow-a-user"
      },
      {
        "name": "Unfollow a user",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/following/:username",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "unfollow",
        "documentationUrl": "https://developer.github.com/v3/users/followers/#unfollow-a-user"
      },
      {
        "name": "List GPG keys for a user",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/gpg_keys",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the GPG keys for a user. This information is accessible by anyone.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 3,
                "primary_key_id": null,
                "key_id": "3262EFF25BA0D270",
                "public_key": "xsBNBFayYZ...",
                "emails": [
                  {
                    "email": "mastahyeti@users.noreply.github.com",
                    "verified": true
                  }
                ],
                "subkeys": [
                  {
                    "id": 4,
                    "primary_key_id": 3,
                    "key_id": "4A595D4C72EE49C7",
                    "public_key": "zsBNBFayYZ...",
                    "emails": [],
                    "subkeys": [],
                    "can_sign": false,
                    "can_encrypt_comms": true,
                    "can_encrypt_storage": true,
                    "can_certify": false,
                    "created_at": "2016-03-24T11:31:04-06:00",
                    "expires_at": null
                  }
                ],
                "can_sign": true,
                "can_encrypt_comms": false,
                "can_encrypt_storage": false,
                "can_certify": true,
                "created_at": "2016-03-24T11:31:04-06:00",
                "expires_at": null
              }
            ]
          }
        ],
        "idName": "list-gpg-keys-for-user",
        "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#list-gpg-keys-for-a-user"
      },
      {
        "name": "List your GPG keys",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/gpg_keys",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 3,
                "primary_key_id": null,
                "key_id": "3262EFF25BA0D270",
                "public_key": "xsBNBFayYZ...",
                "emails": [
                  {
                    "email": "mastahyeti@users.noreply.github.com",
                    "verified": true
                  }
                ],
                "subkeys": [
                  {
                    "id": 4,
                    "primary_key_id": 3,
                    "key_id": "4A595D4C72EE49C7",
                    "public_key": "zsBNBFayYZ...",
                    "emails": [],
                    "subkeys": [],
                    "can_sign": false,
                    "can_encrypt_comms": true,
                    "can_encrypt_storage": true,
                    "can_certify": false,
                    "created_at": "2016-03-24T11:31:04-06:00",
                    "expires_at": null
                  }
                ],
                "can_sign": true,
                "can_encrypt_comms": false,
                "can_encrypt_storage": false,
                "can_certify": true,
                "created_at": "2016-03-24T11:31:04-06:00",
                "expires_at": null
              }
            ]
          }
        ],
        "idName": "list-gpg-keys",
        "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys"
      },
      {
        "name": "Get a single GPG key",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/gpg_keys/:gpg_key_id",
        "previews": [],
        "params": [
          {
            "name": "gpg_key_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 3,
              "primary_key_id": null,
              "key_id": "3262EFF25BA0D270",
              "public_key": "xsBNBFayYZ...",
              "emails": [
                {
                  "email": "mastahyeti@users.noreply.github.com",
                  "verified": true
                }
              ],
              "subkeys": [
                {
                  "id": 4,
                  "primary_key_id": 3,
                  "key_id": "4A595D4C72EE49C7",
                  "public_key": "zsBNBFayYZ...",
                  "emails": [],
                  "subkeys": [],
                  "can_sign": false,
                  "can_encrypt_comms": true,
                  "can_encrypt_storage": true,
                  "can_certify": false,
                  "created_at": "2016-03-24T11:31:04-06:00",
                  "expires_at": null
                }
              ],
              "can_sign": true,
              "can_encrypt_comms": false,
              "can_encrypt_storage": false,
              "can_certify": true,
              "created_at": "2016-03-24T11:31:04-06:00",
              "expires_at": null
            }
          }
        ],
        "idName": "get-gpg-key",
        "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key"
      },
      {
        "name": "Create a GPG key",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/user/gpg_keys",
        "previews": [],
        "params": [
          {
            "name": "armored_public_key",
            "type": "string",
            "description": "Your GPG key, generated in ASCII-armored format. See \"[Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/)\" for help creating a GPG key.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "armored_public_key": "-----BEGIN PGP PUBLIC KEY BLOCK-----\n...\n-----END PGP PUBLIC KEY BLOCK-----"
          }
        ],
        "description": "Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 3,
              "primary_key_id": null,
              "key_id": "3262EFF25BA0D270",
              "public_key": "xsBNBFayYZ...",
              "emails": [
                {
                  "email": "mastahyeti@users.noreply.github.com",
                  "verified": true
                }
              ],
              "subkeys": [
                {
                  "id": 4,
                  "primary_key_id": 3,
                  "key_id": "4A595D4C72EE49C7",
                  "public_key": "zsBNBFayYZ...",
                  "emails": [],
                  "subkeys": [],
                  "can_sign": false,
                  "can_encrypt_comms": true,
                  "can_encrypt_storage": true,
                  "can_certify": false,
                  "created_at": "2016-03-24T11:31:04-06:00",
                  "expires_at": null
                }
              ],
              "can_sign": true,
              "can_encrypt_comms": false,
              "can_encrypt_storage": false,
              "can_certify": true,
              "created_at": "2016-03-24T11:31:04-06:00",
              "expires_at": null
            }
          }
        ],
        "idName": "create-gpg-key",
        "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key"
      },
      {
        "name": "Delete a GPG key",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/gpg_keys/:gpg_key_id",
        "previews": [],
        "params": [
          {
            "name": "gpg_key_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-gpg-key",
        "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key"
      },
      {
        "name": "List public keys for a user",
        "enabledForApps": true,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/users/:username/keys",
        "previews": [],
        "params": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "description": "",
            "location": "url"
          },
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the _verified_ public SSH keys for a user. This is accessible by anyone.",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "key": "ssh-rsa AAA..."
              }
            ]
          }
        ],
        "idName": "list-public-keys-for-user",
        "documentationUrl": "https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user"
      },
      {
        "name": "List your public keys",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/keys",
        "previews": [],
        "params": [
          {
            "name": "per_page",
            "type": "integer",
            "required": false,
            "description": "Results per page (max 100)",
            "default": 30,
            "location": "query"
          },
          {
            "name": "page",
            "type": "integer",
            "required": false,
            "description": "Page number of the results to fetch.",
            "default": 1,
            "location": "query"
          }
        ],
        "description": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": [
              {
                "id": 1,
                "key": "ssh-rsa AAA...",
                "url": "https://api.github.com/user/keys/1",
                "title": "octocat@octomac",
                "verified": true,
                "created_at": "2014-12-10T15:53:42Z",
                "read_only": true
              }
            ]
          }
        ],
        "idName": "list-public-keys",
        "documentationUrl": "https://developer.github.com/v3/users/keys/#list-your-public-keys"
      },
      {
        "name": "Get a single public key",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "GET",
        "path": "/user/keys/:key_id",
        "previews": [],
        "params": [
          {
            "name": "key_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "200 OK",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "key": "ssh-rsa AAA...",
              "url": "https://api.github.com/user/keys/1",
              "title": "octocat@octomac",
              "verified": true,
              "created_at": "2014-12-10T15:53:42Z",
              "read_only": true
            }
          }
        ],
        "idName": "get-public-key",
        "documentationUrl": "https://developer.github.com/v3/users/keys/#get-a-single-public-key"
      },
      {
        "name": "Create a public key",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "POST",
        "path": "/user/keys",
        "previews": [],
        "params": [
          {
            "name": "title",
            "type": "string",
            "description": "A descriptive name for the new key. Use a name that will help you recognize this key in your GitHub account. For example, if you're using a personal Mac, you might call this key \"Personal MacBook Air\".",
            "required": false,
            "location": "body"
          },
          {
            "name": "key",
            "type": "string",
            "description": "The public SSH key to add to your GitHub account. See \"[Generating a new SSH key](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)\" for guidance on how to create a public SSH key.",
            "required": false,
            "location": "body"
          }
        ],
        "requests": [
          {
            "title": "octocat@octomac",
            "key": "ssh-rsa AAA..."
          }
        ],
        "description": "Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "201 Created",
              "content-type": "application/json; charset=utf-8"
            },
            "body": {
              "id": 1,
              "key": "ssh-rsa AAA...",
              "url": "https://api.github.com/user/keys/1",
              "title": "octocat@octomac",
              "verified": true,
              "created_at": "2014-12-10T15:53:42Z",
              "read_only": true
            }
          }
        ],
        "idName": "create-public-key",
        "documentationUrl": "https://developer.github.com/v3/users/keys/#create-a-public-key"
      },
      {
        "name": "Delete a public key",
        "enabledForApps": false,
        "githubCloudOnly": false,
        "method": "DELETE",
        "path": "/user/keys/:key_id",
        "previews": [],
        "params": [
          {
            "name": "key_id",
            "type": "integer",
            "required": true,
            "description": "",
            "location": "url"
          }
        ],
        "description": "Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "responses": [
          {
            "headers": {
              "status": "204 No Content",
              "content-type": "application/json; charset=utf-8"
            }
          }
        ],
        "idName": "delete-public-key",
        "documentationUrl": "https://developer.github.com/v3/users/keys/#delete-a-public-key"
      }
    ]
  }